{
  "agent_name": "es_agent_v2",
  "system_prompt": "You are a helpful assistant that answers questions about documentation.  \n\nUse the search tool to find relevant information from the repository before answering questions.  \n\nIf you can find specific information through search, use it to provide accurate answers.\n\nAlways include references by citing the filename of the source material you used.\nReplace it with the full path to the GitHub repository:\n\"https://github.com/elastic/elasticsearch/blob/main/\"\nFormat: [LINK TITLE](FULL_GITHUB_LINK)\n\n\nIf the search doesn't return relevant results, let the user know and provide general guidance.",
  "provider": "openai",
  "model": "gpt-4o-mini",
  "tools": [
    "search"
  ],
  "messages": [
    {
      "parts": [
        {
          "content": "What is the impact of breaking changes on the REST API in Elasticsearch, and how can developers prepare for these changes?",
          "timestamp": "2025-10-03T01:01:25.938651+00:00",
          "part_kind": "user-prompt"
        }
      ],
      "instructions": "You are a helpful assistant that answers questions about documentation.  \n\nUse the search tool to find relevant information from the repository before answering questions.  \n\nIf you can find specific information through search, use it to provide accurate answers.\n\nAlways include references by citing the filename of the source material you used.\nReplace it with the full path to the GitHub repository:\n\"https://github.com/elastic/elasticsearch/blob/main/\"\nFormat: [LINK TITLE](FULL_GITHUB_LINK)\n\n\nIf the search doesn't return relevant results, let the user know and provide general guidance.",
      "kind": "request"
    },
    {
      "parts": [
        {
          "tool_name": "search",
          "args": "{\"query\": \"breaking changes REST API\"}",
          "tool_call_id": "call_3EQLSC0gX2lwCPFIyKdYj5br",
          "part_kind": "tool-call"
        },
        {
          "tool_name": "search",
          "args": "{\"query\": \"prepare for breaking changes REST API\"}",
          "tool_call_id": "call_MbwAObBSUTn2Y8x38vKL2tBZ",
          "part_kind": "tool-call"
        }
      ],
      "usage": {
        "input_tokens": 224,
        "cache_write_tokens": 0,
        "cache_read_tokens": 0,
        "output_tokens": 50,
        "input_audio_tokens": 0,
        "cache_audio_read_tokens": 0,
        "output_audio_tokens": 0,
        "details": {
          "accepted_prediction_tokens": 0,
          "audio_tokens": 0,
          "reasoning_tokens": 0,
          "rejected_prediction_tokens": 0
        }
      },
      "model_name": "gpt-4o-mini-2024-07-18",
      "timestamp": "2025-10-03T01:01:27+00:00",
      "kind": "response",
      "provider_name": "openai",
      "provider_details": {
        "finish_reason": "tool_calls"
      },
      "provider_response_id": "chatcmpl-CMOSlATdyJlzB48Bz47gIfIxvBrEE",
      "finish_reason": "tool_call"
    },
    {
      "parts": [
        {
          "tool_name": "search",
          "content": [
            {
              "mapped_pages": [
                "https://www.elastic.co/guide/en/elasticsearch/reference/current/api-conventions.html",
                "https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster.html"
              ],
              "applies_to": {
                "stack": "all",
                "serverless": "all"
              },
              "navigation_title": "API conventions",
              "content": "# Elasticsearch API conventions [api-conventions]\n\nThe {{es}} REST APIs are exposed over HTTP. Except where noted, the following conventions apply across all APIs.\n\n\n## Content-type requirements [_content_type_requirements]\n\nThe type of the content sent in a request body must be specified using the `Content-Type` header. The value of this header must map to one of the supported formats that the API supports. Most APIs support JSON, YAML, CBOR, and SMILE. The bulk and multi-search APIs support NDJSON, JSON, and SMILE; other types will result in an error response.\n\nWhen using the `source` query string parameter, the content type must be specified using the `source_content_type` query string parameter.\n\n{{es}} only supports UTF-8-encoded JSON. {{es}} ignores any other encoding headings sent with a request. Responses are also UTF-8 encoded.\n\n\n## `X-Opaque-Id` HTTP header [x-opaque-id]\n\nYou can pass an `X-Opaque-Id` HTTP header to track the origin of a request in {{es}} logs and tasks. If provided, {{es}} surfaces the `X-Opaque-Id` value in the:\n\n* Response of any request that includes the header\n* [Task management API](https://www.elastic.co/docs/api/doc/elasticsearch/group/endpoint-tasks) response\n* [Slow logs](/reference/elasticsearch/index-settings/slow-log.md)\n* [Deprecation logs](docs-content://deploy-manage/monitor/logging-configuration/update-elasticsearch-logging-levels.md#deprecation-logging)\n\nFor the deprecation logs, {{es}} also uses the `X-Opaque-Id` value to throttle and deduplicate deprecation warnings. See [Deprecation logs throttling](docs-content://deploy-manage/monitor/logging-configuration/update-elasticsearch-logging-levels.md#_deprecation_logs_throttling).\n\nThe `X-Opaque-Id` header accepts any arbitrary value. However, we recommend you limit these values to a finite set, such as an ID per client. Don\u2019t generate a unique `X-Opaque-Id` header for every request. Too many unique `X-Opaque-Id` values can prevent {{es}} from deduplicating warnings in the deprecation logs.\n\n\n## `traceparent` HTTP header [traceparent]\n\n{{es}} also supports a `traceparent` HTTP header using the [official W3C trace context spec](https://www.w3.org/TR/trace-context/#traceparent-header). You can use the `traceparent` header to trace requests across Elastic products and other services. Because it\u2019s only used for traces, you can safely generate a unique `traceparent` header for each request.\n\nIf provided, {{es}} surfaces the header\u2019s `trace-id` value as `trace.id` in the:\n\n* [JSON {{es}} server logs](docs-content://deploy-manage/monitor/logging-configuration/update-elasticsearch-logging-levels.md)\n* [Slow logs](/reference/elasticsearch/index-settings/slow-log.md)\n* [Deprecation logs](docs-content://deploy-manage/monitor/logging-configuration/update-elasticsearch-logging-levels.md#deprecation-logging)\n\nFor example, the following `traceparent` value would produce the following `trace.id` value in the above logs.\n\n```txt\n`traceparent`: 00-0af7651916cd43dd8448eb211c80319c-b7ad6b7169203331-01\n`trace.id`: 0af7651916cd43dd8448eb211c80319c\n```\n\n## GET and POST requests [get-requests]\n\nA number of {{es}} GET APIs\u2014 most notably the search API\u2014 support a request body. While the GET action makes sense in the context of retrieving information, GET requests with a body are not supported by all HTTP libraries. All {{es}} GET APIs that require a body can also be submitted as POST requests. Alternatively, you can pass the request body as the [`source` query string parameter](#api-request-body-query-string) when using GET.\n\n\n## Cron expressions [api-cron-expressions]\n\nA cron expression is a string of the following form:\n\n```txt\n    <seconds> <minutes> <hours> <day_of_month> <month> <day_of_week> [year]\n```\n\n{{es}} uses the cron parser from the [Quartz Job Scheduler](https://quartz-scheduler.org). For more information about writing Quartz cron expressions, see the [Quartz CronTrigger Tutorial](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html).\n\nAll schedule times are in coordinated universal time (UTC); other timezones are not supported.\n\n::::{tip}\nYou can use the [*elasticsearch-croneval*](/reference/elasticsearch/command-line-tools/elasticsearch-croneval.md) command line tool to validate your cron expressions.\n::::\n\n\n\n### Cron expression elements [cron-elements]\n\nAll elements are required except for `year`. See [Cron special characters](#cron-special-characters) for information about the allowed special characters.\n\n`<seconds>`\n:   (Required) Valid values: `0`-`59` and the special characters `,` `-` `*` `/`\n\n`<minutes>`\n:   (Required) Valid values: `0`-`59` and the special characters `,` `-` `*` `/`\n\n`<hours>`\n:   (Required) Valid values: `0`-`23` and the special characters `,` `-` `*` `/`\n\n`<day_of_month>`\n:   (Required) Valid values: `1`-`31` and the special characters `,` `-` `*` `/` `?` `L` `W`\n\n`<month>`\n:   (Required) Valid values: `1`-`12`, `JAN`-`DEC`, `jan`-`dec`, and the special characters `,` `-` `*` `/`\n\n`<day_of_week>`\n:   (Required) Valid values: `1`-`7`, `SUN`-`SAT`, `sun`-`sat`,  and the special characters `,` `-` `*` `/` `?` `L` `#`\n\n`<year>`\n:   (Optional) Valid values: `1970`-`2099` and the special characters `,` `-` `*` `/`\n\n\n### Cron special characters [cron-special-characters]\n\n`*`\n:   Selects every possible value for a field. For example, `*` in the `hours` field means \"every hour\".\n\n`?`\n:   No specific value. Use when you don\u2019t care what the value is. For example, if you want the schedule to trigger on a particular day of the month, but don\u2019t care what day of the week that happens to be, you can specify `?` in the `day_of_week` field.\n\n`-`\n:   A range of values (inclusive). Use to separate a minimum and maximum value. For example, if you want the schedule to trigger every hour between 9:00 a.m. and 5:00 p.m., you could specify `9-17` in the `hours` field.\n\n`,`\n:   Multiple values. Use to separate multiple values for a field. For example, if you want the schedule to trigger every Tuesday and Thursday, you could specify `TUE,THU` in the `day_of_week` field.\n\n`/`\n:   Increment. Use to separate values when specifying a time increment. The first value represents the starting point, and the second value represents the interval. For example, if you want the schedule to trigger every 20 minutes starting at the top of the hour, you could specify `0/20` in the `minutes` field. Similarly, specifying `1/5` in `day_of_month` field will trigger every 5 days starting on the first day of the month.\n\n`L`\n:   Last. Use in the `day_of_month` field to mean the last day of the month\u2014 day 31 for January, day 28 for February in non-leap years, day 30 for April, and so on. Use alone in the `day_of_week` field in place of `7` or `SAT`, or after a particular day of the week to select the last day of that type in the month. For example `6L` means the last Friday of the month. You can specify `LW` in the `day_of_month` field to specify the last weekday of the month. Avoid using the `L` option when specifying lists or ranges of values, as the results likely won\u2019t be what you expect.\n\n`W`\n:   Weekday. Use to specify the weekday (Monday-Friday) nearest the given day. As an example, if you specify `15W` in the `day_of_month` field and the 15th is a Saturday, the schedule will trigger on the 14th. If the 15th is a Sunday, the schedule will trigger on Monday the 16th. If the 15th is a Tuesday, the schedule will trigger on Tuesday the 15th. However if you specify `1W` as the value for `day_of_month`, and the 1st is a Saturday, the schedule will trigger on Monday the 3rd\u2014 it won\u2019t jump over the month boundary. You can specify `LW` in the `day_of_month` field to specify the last weekday of the month. You can only use the `W` option when the `day_of_month` is a single day\u2014 it is not valid when specifying a range or list of days.\n\n`#`\n:   Nth XXX day in a month. Use in the `day_of_week` field to specify the nth XXX day of the month. For example, if you specify `6#1`, the schedule will trigger on the first Friday of the month. Note that if you specify `3#5` and there are not 5 Tuesdays in a particular month, the schedule won\u2019t trigger that month.\n\n\n### Examples [cron-expression-examples]\n\n\n#### Setting daily triggers [cron-example-daily]\n\n`0 5 9 * * ?`\n:   Trigger at 9:05 a.m. UTC every day.\n\n`0 5 9 * * ? 2020`\n:   Trigger at 9:05 a.m. UTC every day during the year 2020.\n\n\n#### Restricting triggers to a range of days or times [cron-example-range]\n\n`0 5 9 ? * MON-FRI`\n:   Trigger at 9:05 a.m. UTC Monday through Friday.\n\n`0 0-5 9 * * ?`\n:   Trigger every minute starting at 9:00 a.m. UTC and ending at 9:05 a.m. UTC every day.\n\n\n#### Setting interval triggers [cron-example-interval]\n\n`0 0/15 9 * * ?`\n:   Trigger every 15 minutes starting at 9:00 a.m. UTC and ending at 9:45 a.m. UTC every day.\n\n`0 5 9 1/3 * ?`\n:   Trigger at 9:05 a.m. UTC every 3 days every month, starting on the first day of the month.\n\n\n#### Setting schedules that trigger on a particular day [cron-example-day]\n\n`0 1 4 1 4 ?`\n:   Trigger every April 1st at 4:01 a.m. UTC.\n\n`0 0,30 9 ? 4 WED`\n:   Trigger at 9:00 a.m. UTC and at 9:30 a.m. UTC every Wednesday in the month of April.\n\n`0 5 9 15 * ?`\n:   Trigger at 9:05 a.m. UTC on the 15th day of every month.\n\n`0 5 9 15W * ?`\n:   Trigger at 9:05 a.m. UTC on the nearest weekday to the 15th of every month.\n\n`0 5 9 ? * 6#1`\n:   Trigger at 9:05 a.m. UTC on the first Friday of every month.\n\n\n#### Setting triggers using last [cron-example-last]\n\n`0 5 9 L * ?`\n:   Trigger at 9:05 a.m. UTC on the last day of every month.\n\n`0 5 9 ? * 2L`\n:   Trigger at 9:05 a.m. UTC on the last Monday of every month.\n\n`0 5 9 LW * ?`\n:   Trigger at 9:05 a.m. UTC on the last weekday of every month.\n\n\n## Date math support in index and index alias names [api-date-math-index-names]\n\nDate math name resolution lets you to search a range of time series indices or index aliases rather than searching all of your indices and filtering the results. Limiting the number of searched indices reduces cluster load and improves search performance. For example, if you are searching for errors in your daily logs, you can use a date math name template to restrict the search to the past two days.\n\nMost APIs that accept an index or index alias argument support date math. A date math name takes the following form:\n\n```txt\n<static_name{date_math_expr{date_format|time_zone}}>\n```\n\nWhere:\n\n`static_name`\n:   Static text\n\n`date_math_expr`\n:   Dynamic date math expression that computes the date dynamically\n\n`date_format`\n:   Optional format in which the computed date should be rendered. Defaults to `yyyy.MM.dd`. Format should be compatible with java-time [https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.md)\n\n`time_zone`\n:   Optional time zone. Defaults to `UTC`.\n\n::::{note}\nPay attention to the usage of small vs capital letters used in the `date_format`. For example: `mm` denotes minute of hour, while `MM` denotes month of year. Similarly `hh` denotes the hour in the `1-12` range in combination with `AM/PM`, while `HH` denotes the hour in the `0-23` 24-hour range.\n::::\n\n\nDate math expressions are resolved locale-independent. Consequently, it is not possible to use any other calendars than the Gregorian calendar.\n\nYou must enclose date math names in angle brackets. If you use the name in a request path, special characters must be URI encoded. For example:\n\n```console\n# PUT /<my-index-{now/d}>\nPUT /%3Cmy-index-%7Bnow%2Fd%7D%3E\n```\n\n::::{admonition} Percent encoding of date math characters\n:class: note\n\nThe special characters used for date rounding must be URI encoded as follows:\n\n| | |\n|---|---|\n| `<` | `%3C` |\n| `>` | `%3E` |\n| `/` | `%2F` |\n| `{` | `%7B` |\n| `}` | `%7D` |\n| `|` | `%7C` |\n| `+` | `%2B` |\n| `:` | `%3A` |\n| `,` | `%2C` |\n::::\n\n\nThe following example shows different forms of date math names and the final names they resolve to given the current time is 22nd March 2024 noon UTC.\n\n| Expression | Resolves to |\n| --- | --- |\n| `<logstash-{now/d}>` | `logstash-2024.03.22` |\n| `<logstash-{now/M}>` | `logstash-2024.03.01` |\n| `<logstash-{now/M{yyyy.MM}}>` | `logstash-2024.03` |\n| `<logstash-{now/M-1M{yyyy.MM}}>` | `logstash-2024.02` |\n| `<logstash-{now/d{yyyy.MM.dd&#124;+12:00}}>` | `logstash-2024.03.23` |\n\nTo use the characters `{` and `}` in the static part of a name template, escape them with a backslash `\\`, for example:\n\n* `<elastic\\\\{ON\\\\}-{now/M}>` resolves to `elastic{{ON}}-2024.03.01`\n\nThe following example shows a search request that searches the Logstash indices for the past three days, assuming the indices use the default Logstash index name format, `logstash-YYYY.MM.dd`.\n\n```console\n# GET /<logstash-{now/d-2d}>,<logstash-{now/d-1d}>,<logstash-{now/d}>/_search\nGET /%3Clogstash-%7Bnow%2Fd-2d%7D%3E%2C%3Clogstash-%7Bnow%2Fd-1d%7D%3E%2C%3Clogstash-%7Bnow%2Fd%7D%3E/_search\n{\n  \"query\" : {\n    \"match\": {\n      \"test\": \"data\"\n    }\n  }\n}\n```\n\n\n## Multi-target syntax [api-multi-index]\n\nMost APIs that accept a `<data-stream>`, `<index>`, or `<target>` request path parameter also support *multi-target syntax*.\n\nIn multi-target syntax, you can use a comma-separated list to run a request on multiple resources, such as data streams, indices, or aliases: `test1,test2,test3`. You can also use [glob-like](https://en.wikipedia.org/wiki/Glob_(programming)) wildcard (`*`) expressions to target resources that match a pattern: `test*` or `*test` or `te*t` or `*test*`.\n\nYou can exclude targets using the `-` character: `test*,-test3`.\n\n::::{important}\nAliases are resolved after wildcard expressions. This can result in a request that targets an excluded alias. For example, if `test3` is an index alias, the pattern `test*,-test3` still targets the indices for `test3`. To avoid this, exclude the concrete indices for the alias instead.\n::::\n\n\nYou can also exclude clusters from a list of clusters to search using the `-` character: `remote*:*,-remote1:*,-remote4:*` will search all clusters with an alias that starts with \"remote\" except for \"remote1\" and \"remote4\". Note that to exclude a cluster with this notation you must exclude all of its indexes. Excluding a subset of indexes on a remote cluster is currently not supported. For example, this will throw an exception: `remote*:*,-remote1:logs*`.\n\nMulti-target APIs that can target indices support the following query string parameters:\n\n`ignore_unavailable`\n:   (Optional, Boolean) If `false`, the request returns an error if it targets a missing or closed index. Defaults to `false`.\n\n`allow_no_indices`\n:   (Optional, Boolean) If `false`, the request returns an error if any wildcard expression, [index alias](docs-content://manage-data/data-store/aliases.md), or `_all` value targets only missing or closed indices. This behavior applies even if the request targets other open indices. For example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.\n\n`expand_wildcards`\n:   (Optional, string) Type of index that wildcard patterns can match. If the request can target data streams, this argument determines whether wildcard expressions match hidden data streams. Supports comma-separated values, such as `open,hidden`. Valid values are:\n\n`all`\n:   Match any data stream or index, including [hidden](#multi-hidden) ones.\n\n`open`\n:   Match open, non-hidden indices. Also matches any non-hidden data stream.\n\n`closed`\n:   Match closed, non-hidden indices. Also matches any non-hidden data stream. Data streams cannot be closed.\n\n`hidden`\n:   Match hidden data streams and hidden indices. Must be combined with `open`, `closed`, or both.\n\n`none`\n:   Wildcard patterns are not accepted.\n\n\nThe defaults settings for the above parameters depend on the API being used.\n\nSome multi-target APIs that can target indices also support the following query string parameter:\n\n`ignore_throttled`\n:   (Optional, Boolean) If `true`, concrete, expanded or aliased indices are ignored when frozen. Defaults to `true`.\n\n    :::{admonition} Deprecated in 7.16.0\n    This parameter was deprecated in 7.16.0.\n    :::\n\n::::{note}\nAPIs with a single target, such as the [get document API](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-get), do not support multi-target syntax.\n::::\n\n\n\n### Hidden data streams and indices [multi-hidden]\n\nFor most APIs, wildcard expressions do not match hidden data streams and indices by default. To match hidden data streams and indices using a wildcard expression, you must specify the `expand_wildcards` query parameter.\n\nAlternatively, querying an index pattern starting with a dot, such as `.watcher_hist*`, will match hidden indices by default. This is intended to mirror Unix file-globbing behavior and provide a smoother transition path to hidden indices.\n\nYou can create hidden data streams by setting `data_stream.hidden` to `true` in the stream\u2019s matching [index template](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-put-index-template). You can hide indices using the [`index.hidden`](/reference/elasticsearch/index-settings/index-modules.md#index-hidden) index setting.\n\nThe backing indices for data streams are hidden automatically. Some features, such as {{ml}}, store information in hidden indices.\n\nGlobal index templates that match all indices are not applied to hidden indices.\n\n\n### System indices [system-indices]\n\n{{es}} modules and plugins can store configuration and state information in internal *system indices*. You should not directly access or modify system indices as they contain data essential to the operation of the system.\n\n::::{important}\nDirect access to system indices is deprecated and will no longer be allowed in a future major version.\n::::\n\nTo view system indices within cluster:\n\n```console\nGET _cluster/state/metadata?filter_path=metadata.indices.*.system\n```\n\n::::{warning}\nWhen overwriting current cluster state, system indices should be restored as part of their [feature state](docs-content://deploy-manage/tools/snapshot-and-restore.md#feature-state).\n::::\n\n### Node specification [cluster-nodes]\n\nSome cluster-level APIs may operate on a subset of the nodes which can be specified with node filters.\nFor example,  [task management]({{es-apis}}group/endpoint-tasks), [node stats]({{es-apis}}operation/operation-nodes-stats), and [node info]({{es-apis}}operation/operation-nodes-info-1) APIs can all report results from a filtered set of nodes rather than from all nodes.\n\nNode filters are written as a comma-separated list of individual filters, each of which adds or removes nodes from the chosen subset.\nEach filter can be one of the following:\n\n* `_all`, to add all nodes to the subset.\n* `_local`, to add the local node to the subset.\n* `_master`, to add the currently-elected master node to the subset.\n* a node ID or name, to add this node to the subset.\n* an IP address or hostname, to add all matching nodes to the subset.\n* a pattern, using `*` wildcards, which adds all nodes to the subset whose name, address, or hostname matches the pattern.\n* `master:true`, `data:true`, `ingest:true`, `voting_only:true`, `ml:true`, or `coordinating_only:true`, which respectively add to the subset all master-eligible nodes, all data nodes, all ingest nodes, all voting-only nodes, all machine learning nodes, and all coordinating-only nodes.\n* `master:false`, `data:false`, `ingest:false`, `voting_only:false`, `ml:false`, or `coordinating_only:false`, which respectively remove from the subset all master-eligible nodes, all data nodes, all ingest nodes, all voting-only nodes, all machine learning nodes, and all coordinating-only nodes.\n* a pair of patterns, using `*` wildcards, of the form `attrname:attrvalue`, which adds to the subset all nodes with a [custom node attribute](/reference/elasticsearch/configuration-reference/node-settings.md#custom-node-attributes) whose name and value match the respective patterns. Custom node attributes are configured by setting properties in the configuration file of the form `node.attr.attrname: attrvalue`.\n\nNode filters run in the order in which they are given, which is important if using filters that remove nodes from the set.\nFor example, `_all,master:false` means all the nodes except the master-eligible ones.\n`master:false,_all` means the same as `_all` because the `_all` filter runs after the `master:false` filter.\n\nIf no filters are given, the default is to select all nodes.\nIf any filters are specified, they run starting with an empty chosen subset.\nThis means that filters such as `master:false` which remove nodes from the chosen subset are only useful if they come after some other filters.\nWhen used on its own, `master:false` selects no nodes.\n\nHere are some examples of the use of node filters with some [cluster APIs]({{es-apis}}group/endpoint-cluster):\n\n```sh\n# If no filters are given, the default is to select all nodes\nGET /_nodes\n# Explicitly select all nodes\nGET /_nodes/_all\n# Select just the local node\nGET /_nodes/_local\n# Select the elected master node\nGET /_nodes/_master\n# Select nodes by name, which can include wildcards\nGET /_nodes/node_name_goes_here\nGET /_nodes/node_name_goes_*\n# Select nodes by address, which can include wildcards\nGET /_nodes/10.0.0.3,10.0.0.4\nGET /_nodes/10.0.0.*\n# Select nodes by role\nGET /_nodes/_all,master:false\nGET /_nodes/data:true,ingest:true\nGET /_nodes/coordinating_only:true\nGET /_nodes/master:true,voting_only:false\n# Select nodes by custom attribute\n# (for example, with something like `node.attr.rack: 2` in the configuration file)\nGET /_nodes/rack:2\nGET /_nodes/ra*:2\nGET /_nodes/ra*:2*\n```\n\n### Component selectors [api-component-selectors]\n```{applies_to}\nstack: ga 9.1\n```\n\nA data stream component is a logical grouping of indices that help organize data inside a data stream. All data streams contain a `data` component by default. The `data` component comprises the data stream's backing indices. When searching, managing, or indexing into a data stream, the `data` component is what you are interacting with by default.\n\nSome data stream features are exposed as additional components alongside its `data` component. These other components are comprised of separate sets of backing indices. These additional components store supplemental data independent of the data stream's regular backing indices. An example of another component is the `failures` component exposed by the data stream [failure store](docs-content://manage-data/data-store/data-streams/failure-store.md) feature, which captures documents that fail to be ingested in a separate set of backing indices on the data stream.\n\nSome APIs that accept a `<data-stream>`, `<index>`, or `<target>` request path parameter also support *selector syntax* which defines which component on a data stream the API should operate on. To use a selector, it is appended to the index or data stream name. Selectors can be combined with other index pattern syntax like [date math](#api-date-math-index-names) and wildcards.\n\nThere are two selector suffixes supported by {{es}} APIs:\n\n`::data`\n:   Refers to a data stream's backing indices containing regular data. Data streams always contain a data component.\n\n`::failures`\n:   This component refers to the internal indices used for a data stream's [failure store](docs-content://manage-data/data-store/data-streams/failure-store.md).\n\nAs an example, [search]({{es-apis}}group/endpoint-search), [field capabilities]({{es-apis}}operation/operation-field-caps), and [index stats]({{es-apis}}operation/operation-indices-stats) APIs can all report results from a different component rather than from the default data.\n\n```console\n# Search a data stream normally\nGET my-data-stream/_search\n# Search a data stream's failure data if present\nGET my-data-stream::failures/_search\n\n# Syntax can be combined with other index pattern syntax (wildcards, multi-target, date math, cross cluster search, etc)\nGET logs-*::failures/_search\nGET logs-*::data,logs-*::failures/_count\nGET remote-cluster:logs-*-*::failures/_search\nGET *::data,*::failures,-logs-rdbms-*::failures/_stats\nGET <logs-{now/d}>::failures/_search\n```\n\n\n## Parameters [api-conventions-parameters]\n\nRest parameters (when using HTTP, map to HTTP URL parameters) follow the convention of using underscore casing.\n\n\n## Request body in query string [api-request-body-query-string]\n\nFor libraries that don\u2019t accept a request body for non-POST requests, you can pass the request body as the `source` query string parameter instead. When using this method, the `source_content_type` parameter should also be passed with a media type value that indicates the format of the source, such as `application/json`.\n\n\n## REST API version compatibility [api-compatibility]\n\nMajor version upgrades often include a number of breaking changes that impact how you interact with {{es}}. While we recommend that you monitor the deprecation logs and update applications before upgrading {{es}}, having to coordinate the necessary changes can be an impediment to upgrading.\n\nYou can enable an existing application to function without modification after an upgrade by including API compatibility headers, which tell {{es}} you are still using the previous version of the REST API. Using these headers allows the structure of requests and responses to remain the same; it does not guarantee the same behavior.\n\nYou set version compatibility on a per-request basis in the `Content-Type` and `Accept` headers. Setting `compatible-with` to the same major version as the version you\u2019re running has no impact, but ensures that the request will still work after {{es}} is upgraded.\n\nTo tell {{es}} 8.0 you are using the 7.x request and response format, set `compatible-with=7`:\n\n```sh\nContent-Type: application/vnd.elasticsearch+json; compatible-with=7\nAccept: application/vnd.elasticsearch+json; compatible-with=7\n```\n\n\n## HTTP `429 Too Many Requests` status code push back [api-push-back]\n\n{{es}} APIs may respond with the HTTP `429 Too Many Requests` status code, indicating that the cluster is too busy to handle the request. When this happens, consider retrying after a short delay. If the retry also receives a `429 Too Many Requests` response, extend the delay by backing off exponentially before each subsequent retry.\n\n\n## URL-based access control [api-url-access-control]\n\nMany users use a proxy with URL-based access control to secure access to {{es}} data streams and indices. For [multi-search](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-msearch), [multi-get](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-mget), and [bulk](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-bulk) requests, the user has the choice of specifying a data stream or  index in the URL and on each individual request within the request body. This can make URL-based access control challenging.\n\nTo prevent the user from overriding the data stream or index specified in the URL, set `rest.action.multi.allow_explicit_index` to `false` in `elasticsearch.yml`.\n\nThis causes  {{es}} to reject requests that explicitly specify a data stream or index in the request body.\n\n\n## Boolean Values [_boolean_values]\n\nAll REST API parameters (both request parameters and JSON body) support providing boolean \"false\" as the value `false` and boolean \"true\" as the value `true`. All other values will raise an error.\n\n\n## Number Values [api-conventions-number-values]\n\nWhen passing a numeric parameter in a request body, you may use a `string` containing the number instead of the native numeric type. For example:\n\n```console\nPOST /_search\n{\n  \"size\": \"1000\"\n}\n```\n\nInteger-valued fields in a response body are described as `integer` (or occasionally `long`) in this manual, but there are generally no explicit bounds on such values. JSON, SMILE, CBOR and YAML all permit arbitrarily large integer values. Do not assume that `integer` fields in a response body will always fit into a 32-bit signed integer.\n\n\n## Byte size units [byte-units]\n\nWhenever the byte size of data needs to be specified, e.g. when setting a buffer size parameter, the value must specify the unit, like `10kb` for 10 kilobytes. Note that these units use powers of 1024, so `1kb` means 1024 bytes. The supported units are:\n\n`b`\n:   Bytes\n\n`kb`\n:   Kilobytes\n\n`mb`\n:   Megabytes\n\n`gb`\n:   Gigabytes\n\n`tb`\n:   Terabytes\n\n`pb`\n:   Petabytes\n\n\n## Distance Units [distance-units]\n\nWherever distances need to be specified, such as the `distance` parameter in the [Geo-distance](/reference/query-languages/query-dsl/query-dsl-geo-distance-query.md)), the default unit is meters if none is specified. Distances can be specified in other units, such as `\"1km\"` or `\"2mi\"` (2 miles).\n\nThe full list of units is listed below:\n\nMile\n:   `mi` or `miles`\n\nYard\n:   `yd` or `yards`\n\nFeet\n:   `ft` or `feet`\n\nInch\n:   `in` or `inch`\n\nKilometer\n:   `km` or `kilometers`\n\nMeter\n:   `m` or `meters`\n\nCentimeter\n:   `cm` or `centimeters`\n\nMillimeter\n:   `mm` or `millimeters`\n\nNautical mile\n:   `NM`, `nmi`, or `nauticalmiles`\n\n\n## Time units [time-units]\n\nWhenever durations need to be specified, e.g. for a `timeout` parameter, the duration must specify the unit, like `2d` for 2 days. The supported units are:\n\n`d`\n:   Days\n\n`h`\n:   Hours\n\n`m`\n:   Minutes\n\n`s`\n:   Seconds\n\n`ms`\n:   Milliseconds\n\n`micros`\n:   Microseconds\n\n`nanos`\n:   Nanoseconds\n\n\n## Unit-less quantities [size-units]\n\nUnit-less quantities means that they don\u2019t have a \"unit\" like \"bytes\" or \"Hertz\" or \"meter\" or \"long tonne\".\n\nIf one of these quantities is large we\u2019ll print it out like 10m for 10,000,000 or 7k for 7,000. We\u2019ll still print 87 when we mean 87 though. These are the supported multipliers:\n\n`k`\n:   Kilo\n\n`m`\n:   Mega\n\n`g`\n:   Giga\n\n`t`\n:   Tera\n\n`p`\n:   Peta",
              "filename": "elasticsearch-main/docs/reference/elasticsearch/rest-apis/api-conventions.md"
            },
            {
              "mapped_pages": [
                "https://www.elastic.co/guide/en/elasticsearch/reference/8.18/security-api-query-api-key.html#security-api-query-api-key-example"
              ],
              "applies_to": {
                "stack": "all"
              },
              "navigation_title": "Query API key information",
              "content": "# Query API key information examples\n\nThis page provides usage examples for the [Query API key information API](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-security-query-api-keys), which retrieves API key metadata in a paginated fashion. These examples demonstrate how to retrieve, filter, sort, and aggregate API key data using query DSL and aggregation features.\n\nYou can learn how to:\n\n- [Retrieve all API keys](#retrieve-all-api-keys)\n- [Group API keys by owner and expiration](#group-api-keys-by-owner-and-expiration)\n- [Group invalidated API keys by owner and name](#group-invalidated-api-keys-by-owner-and-name)\n\n<!--\n\n```console\nPOST /_security/user/king\n{\n  \"password\" : \"security-test-password\",\n  \"roles\": []\n}\nPOST /_security/user/june\n{\n  \"password\" : \"security-test-password\",\n  \"roles\": []\n}\nPOST /_security/api_key/grant\n{\n  \"grant_type\": \"password\",\n  \"username\" : \"king\",\n  \"password\" : \"security-test-password\",\n  \"api_key\" : {\n    \"name\": \"king-key-no-expire\"\n  }\n}\nDELETE /_security/api_key\n{\n  \"name\" : \"king-key-no-expire\"\n}\nPOST /_security/api_key/grant\n{\n  \"grant_type\": \"password\",\n  \"username\" : \"king\",\n  \"password\" : \"security-test-password\",\n  \"api_key\" : {\n    \"name\": \"king-key-10\",\n    \"expiration\": \"10d\"\n  }\n}\nPOST /_security/api_key/grant\n{\n  \"grant_type\": \"password\",\n  \"username\" : \"king\",\n  \"password\" : \"security-test-password\",\n  \"api_key\" : {\n    \"name\": \"king-key-100\",\n    \"expiration\": \"100d\"\n  }\n}\nPOST /_security/api_key/grant\n{\n  \"grant_type\": \"password\",\n  \"username\" : \"june\",\n  \"password\" : \"security-test-password\",\n  \"api_key\" : {\n    \"name\": \"june-key-no-expire\"\n  }\n}\nPOST /_security/api_key/grant\n{\n  \"grant_type\": \"password\",\n  \"username\" : \"june\",\n  \"password\" : \"security-test-password\",\n  \"api_key\" : {\n    \"name\": \"june-key-10\",\n    \"expiration\": \"10d\"\n  }\n}\nPOST /_security/api_key/grant\n{\n  \"grant_type\": \"password\",\n  \"username\" : \"june\",\n  \"password\" : \"security-test-password\",\n  \"api_key\" : {\n    \"name\": \"june-key-100\",\n    \"expiration\": \"100d\"\n  }\n}\nDELETE /_security/api_key\n{\n  \"name\" : \"june-key-100\"\n}\n```\n% TESTSETUP\n\n```console\nDELETE /_security/user/king\nDELETE /_security/user/june\nDELETE /_security/api_key\n{\n  \"name\" : \"king-key-no-expire\"\n}\nDELETE /_security/api_key\n{\n  \"name\" : \"king-key-10\"\n}\nDELETE /_security/api_key\n{\n  \"name\" : \"king-key-100\"\n}\nDELETE /_security/api_key\n{\n  \"name\" : \"june-key-no-expire\"\n}\nDELETE /_security/api_key\n{\n  \"name\" : \"june-key-10\"\n}\n```\n% TEARDOWN\n-->\n\n## Retrieve all API keys\n\nThe following request lists all API keys, assuming you have the `manage_api_key` privilege:\n\n```console\nGET /_security/_query/api_key\n```\n\nA successful call returns a JSON structure that contains the information retrieved from one or more API keys:\n\n```js\n{\n  \"total\": 3,\n  \"count\": 3,\n  \"api_keys\": [ <1>\n    {\n      \"id\": \"nkvrGXsB8w290t56q3Rg\",\n      \"name\": \"my-api-key-1\",\n      \"creation\": 1628227480421,\n      \"expiration\": 1629091480421,\n      \"invalidated\": false,\n      \"username\": \"elastic\",\n      \"realm\": \"reserved\",\n      \"realm_type\": \"reserved\",\n      \"metadata\": {\n        \"letter\": \"a\"\n      },\n      \"role_descriptors\": { <2>\n        \"role-a\": {\n          \"cluster\": [\n            \"monitor\"\n          ],\n          \"indices\": [\n            {\n              \"names\": [\n                \"index-a\"\n              ],\n              \"privileges\": [\n                \"read\"\n              ],\n              \"allow_restricted_indices\": false\n            }\n          ],\n          \"applications\": [ ],\n          \"run_as\": [ ],\n          \"metadata\": { },\n          \"transient_metadata\": {\n            \"enabled\": true\n          }\n        }\n      }\n    },\n    {\n      \"id\": \"oEvrGXsB8w290t5683TI\",\n      \"name\": \"my-api-key-2\",\n      \"creation\": 1628227498953,\n      \"expiration\": 1628313898953,\n      \"invalidated\": false,\n      \"username\": \"elastic\",\n      \"realm\": \"reserved\",\n      \"metadata\": {\n        \"letter\": \"b\"\n      },\n      \"role_descriptors\": { } <3>\n    }\n  ]\n}\n```\n% NOTCONSOLE\n\n1. The list of API keys that were retrieved for this request\n2. The role descriptors that are assigned to this API key when it was [created](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-security-create-api-key#operation-security-create-api-key-body-application-json-role_descriptors) or last [updated](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-security-update-api-key#operation-security-update-api-key-body-application-json-role_descriptors) The API key\u2019s effective permissions are the intersection of its assigned privileges and a point-in-time snapshot of the owner user\u2019s permissions.\n3. An empty role descriptors means the API key inherits the owner user's permissions.\n\nIf you create an API key with the following details:\n\n```console\nPOST /_security/api_key\n{\n  \"name\": \"application-key-1\",\n  \"metadata\": { \"application\": \"my-application\"}\n}\n```\n\nA successful call returns a JSON structure that provides API key information. For example:\n\n```console-result\n  \"id\": \"VuaCfGcBCdbkQm-e5aOx\",\n  \"name\": \"application-key-1\",\n  \"api_key\": \"ui2lp2axTNmsyakw9tvNnw\",\n  \"encoded\": \"VnVhQ2ZHY0JDZGJrUW0tZTVhT3g6dWkybHAyYXhUTm1zeWFrdzl0dk5udw==\"\n```\n% TESTRESPONSE[s/VuaCfGcBCdbkQm-e5aOx/$body.id/]\n% TESTRESPONSE[s/ui2lp2axTNmsyakw9tvNnw/$body.api_key/]\n% TESTRESPONSE[s/VnVhQ2ZHY0JDZGJrUW0tZTVhT3g6dWkybHAyYXhUTm1zeWFrdzl0dk5udw==/$body.encoded/]\n\nUse the information from the response to retrieve the API key by ID:\n\n```console\nGET /_security/_query/api_key?with_limited_by=true\n{\n  \"query\": {\n    \"ids\": {\n      \"values\": [\n        \"VuaCfGcBCdbkQm-e5aOx\"\n      ]\n    }\n  }\n}\n```\n% TEST[s/VuaCfGcBCdbkQm-e5aOx/$body.id/]\n% TEST[continued]\n\nA successful call returns a JSON structure for API key information including its limited-by role descriptors:\n\n```js\n{\n  \"api_keys\": [\n    {\n      \"id\": \"VuaCfGcBCdbkQm-e5aOx\",\n      \"name\": \"application-key-1\",\n      \"creation\": 1548550550158,\n      \"expiration\": 1548551550158,\n      \"invalidated\": false,\n      \"username\": \"myuser\",\n      \"realm\": \"native1\",\n      \"realm_type\": \"native\",\n      \"metadata\": {\n        \"application\": \"my-application\"\n      },\n      \"role_descriptors\": { },\n      \"limited_by\": [ <1>\n        {\n          \"role-power-user\": {\n            \"cluster\": [\n              \"monitor\"\n            ],\n            \"indices\": [\n              {\n                \"names\": [\n                  \"*\"\n                ],\n                \"privileges\": [\n                  \"read\"\n                ],\n                \"allow_restricted_indices\": false\n              }\n            ],\n            \"applications\": [ ],\n            \"run_as\": [ ],\n            \"metadata\": { },\n            \"transient_metadata\": {\n              \"enabled\": true\n            }\n          }\n        }\n      ]\n    }\n  ]\n}\n```\n% NOTCONSOLE\n\n1. The owner user's permissions associated with the API key.\nIt is a point-in-time snapshot captured at [creation](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-security-create-api-key#operation-security-create-api-key-body-application-json-role_descriptors) and\nsubsequent [updates](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-security-update-api-key#operation-security-update-api-key-body-application-json-role_descriptors). An API key's\neffective permissions are an intersection of its assigned privileges and\nthe owner user's permissions.\n\nYou can also retrieve the API key by name:\n\n```console\nGET /_security/_query/api_key\n{\n  \"query\": {\n    \"term\": {\n      \"name\": {\n        \"value\": \"application-key-1\"\n      }\n    }\n  }\n}\n```\n% TEST[continued]\n\nUse a `bool` query to issue complex logical conditions and use `from`, `size`, `sort` to help paginate the result:\n\n```js\nGET /_security/_query/api_key\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"prefix\": {\n            \"name\": \"app1-key-\" <1>\n          }\n        },\n        {\n          \"term\": {\n            \"invalidated\": \"false\" <2>\n          }\n        }\n      ],\n      \"must_not\": [\n        {\n          \"term\": {\n            \"name\": \"app1-key-01\" <3>\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"wildcard\": {\n            \"username\": \"org-*-user\" <4>\n          }\n        },\n        {\n          \"term\": {\n            \"metadata.environment\": \"production\" <5>\n          }\n        }\n      ]\n    }\n  },\n  \"from\": 20, <6>\n  \"size\": 10, <7>\n  \"sort\": [ <8>\n    { \"creation\": { \"order\": \"desc\", \"format\": \"date_time\" } },\n    \"name\"\n  ]\n}\n```\n% NOTCONSOLE\n\n1. The API key name must begin with `app1-key-`\n2. The API key must still be valid\n3. The API key name must not be `app1-key-01`\n4. The API key must be owned by a username of the [wildcard](../../query-languages/query-dsl/query-dsl-wildcard-query.md) pattern `org-*-user`\n5. The API key must have the metadata field `environment` that has the value of `production`\n6. The offset to begin the search result is the 20th (zero-based index) API key\n7. The page size of the response is 10 API keys\n8. The result is first sorted by `creation` date in descending order, then by name in ascending order\n\nThe response contains a list of matched API keys along with their sort values:\n\n```js\n{\n  \"total\": 100,\n  \"count\": 10,\n  \"api_keys\": [\n    {\n      \"id\": \"CLXgVnsBOGkf8IyjcXU7\",\n      \"name\": \"app1-key-79\",\n      \"creation\": 1629250154811,\n      \"invalidated\": false,\n      \"username\": \"org-admin-user\",\n      \"realm\": \"native1\",\n      \"metadata\": {\n        \"environment\": \"production\"\n      },\n      \"role_descriptors\": { },\n      \"_sort\": [\n        \"2021-08-18T01:29:14.811Z\",  <1>\n        \"app1-key-79\"  <2>\n      ]\n    },\n    {\n      \"id\": \"BrXgVnsBOGkf8IyjbXVB\",\n      \"name\": \"app1-key-78\",\n      \"creation\": 1629250153794,\n      \"invalidated\": false,\n      \"username\": \"org-admin-user\",\n      \"realm\": \"native1\",\n      \"metadata\": {\n        \"environment\": \"production\"\n      },\n      \"role_descriptors\": { },\n      \"_sort\": [\n        \"2021-08-18T01:29:13.794Z\",\n        \"app1-key-78\"\n      ]\n    },\n    ...\n  ]\n}\n```\n% NOTCONSOLE\n\n1. The first sort value is creation time, which is displayed in `date_time` <<mapping-date-format,format>> as defined in the request\n2. The second sort value is the API key name\n\n## Group API keys by owner and expiration\n\nFor example, given 2 users \"june\" and \"king\", each owning 3 API keys:\n\n- one that never expires (invalidated for user \"king\")\n- one that expires in 10 days\n- and one that expires in 100 day (invalidated for user \"june\")\n\nThe following request returns the names of valid (not expired and not invalidated) API keys that expire soon (in 30 days time), grouped by owner username.\n\n### Request\n\n```console\nPOST /_security/_query/api_key\n{\n  \"size\": 0,\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"term\": {\n          \"invalidated\": false  <1>\n        }\n      },\n      \"should\": [  <2>\n        {\n          \"range\": { \"expiration\": { \"gte\": \"now\" } }\n        },\n        {\n          \"bool\": { \"must_not\": { \"exists\": { \"field\": \"expiration\" } } }\n        }\n      ],\n      \"minimum_should_match\": 1\n    }\n  },\n  \"aggs\": {\n    \"keys_by_username\": {\n      \"composite\": {\n        \"sources\": [ { \"usernames\": { \"terms\": { \"field\": \"username\" } } } ]  <3>\n      },\n      \"aggs\": {\n        \"expires_soon\": {\n          \"filter\": {\n            \"range\": { \"expiration\": { \"lte\": \"now+30d/d\" } }  <4>\n          },\n          \"aggs\": {\n            \"key_names\": { \"terms\": { \"field\": \"name\" } }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n1. Matching API keys must not be invalidated\n2. Matching API keys must be either not expired or not have an expiration date\n3. Aggregate all matching keys (i.e. all valid keys) by their owner username\n4. Further aggregate the per-username valid keys into a soon-to-expire bucket\n\n### Response\n\n```console-result\n{\n  \"total\" : 4,  <1>\n  \"count\" : 0,\n  \"api_keys\" : [ ],\n  \"aggregations\" : {\n    \"keys_by_username\" : {\n      \"after_key\" : {\n        \"usernames\" : \"king\"\n      },\n      \"buckets\" : [\n        {\n          \"key\" : {\n            \"usernames\" : \"june\"\n          },\n          \"doc_count\" : 2,  <2>\n          \"expires_soon\" : {\n            \"doc_count\" : 1,\n            \"key_names\" : {\n              \"doc_count_error_upper_bound\" : 0,\n              \"sum_other_doc_count\" : 0,\n              \"buckets\" : [\n                {\n                  \"key\" : \"june-key-10\",\n                  \"doc_count\" : 1\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"key\" : {\n            \"usernames\" : \"king\"\n          },\n          \"doc_count\" : 2,\n          \"expires_soon\" : {\n            \"doc_count\" : 1,  <3>\n            \"key_names\" : {\n              \"doc_count_error_upper_bound\" : 0,\n              \"sum_other_doc_count\" : 0,\n              \"buckets\" : [  <4>\n                {\n                  \"key\" : \"king-key-10\",\n                  \"doc_count\" : 1\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\n```\n\n1. Total number of valid API keys (2 for each user)\n2. Number of valid API keys for user \"june\"\n3. Number of valid API keys expiring soon for user \"king\"\n4. The names of soon-to-expire API keys for user \"king\"\n\n## Group invalidated API keys by owner and name\n\nTo retrieve the invalidated (but not yet deleted) API keys, grouped by owner username and API key name, issue the following request:\n\n### Request\n\n```console\nPOST /_security/_query/api_key\n{\n  \"size\": 0,\n  \"query\": {\n    \"bool\": {\n      \"filter\": {\n        \"term\": {\n          \"invalidated\": true\n        }\n      }\n    }\n  },\n  \"aggs\": {\n    \"invalidated_keys\": {\n      \"composite\": {\n        \"sources\": [\n          { \"username\": { \"terms\": { \"field\": \"username\" } } },\n          { \"key_name\": { \"terms\": { \"field\": \"name\" } } }\n        ]\n      }\n    }\n  }\n}\n```\n\n### Response\n\n```console-result\n{\n  \"total\" : 2,\n  \"count\" : 0,\n  \"api_keys\" : [ ],\n  \"aggregations\" : {\n    \"invalidated_keys\" : {\n      \"after_key\" : {\n        \"username\" : \"king\",\n        \"key_name\" : \"king-key-no-expire\"\n      },\n      \"buckets\" : [\n        {\n          \"key\" : {\n            \"username\" : \"june\",\n            \"key_name\" : \"june-key-100\"\n          },\n          \"doc_count\" : 1\n        },\n        {\n          \"key\" : {\n            \"username\" : \"king\",\n            \"key_name\" : \"king-key-no-expire\"\n          },\n          \"doc_count\" : 1\n        }\n      ]\n    }\n  }\n}\n```",
              "filename": "elasticsearch-main/docs/reference/elasticsearch/rest-apis/query-api-keys.md"
            },
            {
              "mapped_pages": [
                "https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-rest-format.html"
              ],
              "applies_to": {
                "stack": "ga",
                "serverless": "ga"
              },
              "products": [
                {
                  "id": "elasticsearch"
                }
              ],
              "content": "# Response data formats [sql-rest-format]\n\nWhile the textual format is nice for humans, computers prefer something more structured.\n\nElasticsearch SQL can return the data in the following formats which can be set either through the `format` property in the URL or by setting the `Accept` HTTP header:\n\n::::{note}\nThe URL parameter takes precedence over the `Accept` HTTP header. If neither is specified then the response is returned in the same format as the request.\n::::\n\n\n| format | `Accept` HTTP header | Description |\n| --- | --- | --- |\n| Human Readable |\n| `csv` | `text/csv` | [Comma-separated values](https://en.wikipedia.org/wiki/Comma-separated_values) |\n| `json` | `application/json` | [JSON](https://www.json.org/) (JavaScript Object Notation) human-readable format |\n| `tsv` | `text/tab-separated-values` | [Tab-separated values](https://en.wikipedia.org/wiki/Tab-separated_values) |\n| `txt` | `text/plain` | CLI-like representation |\n| `yaml` | `application/yaml` | [YAML](https://en.wikipedia.org/wiki/YAML) (YAML Ain\u2019t Markup Language) human-readable format |\n| Binary Formats |\n| `cbor` | `application/cbor` | [Concise Binary Object Representation](https://cbor.io/) |\n| `smile` | `application/smile` | [Smile](https://en.wikipedia.org/wiki/Smile_(data_interchange_format)) binary data format similar to CBOR |\n\nThe `CSV` format accepts a formatting URL query attribute, `delimiter`, which indicates which character should be used to separate the CSV values. It defaults to comma (`,`) and cannot take any of the following values: double quote (`\"`), carriage-return (`\\r`) and new-line (`\\n`). The tab (`\\t`) can also not be used, the `tsv` format needs to be used instead.\n\nHere are some examples for the human readable formats:\n\n## CSV [_csv]\n\n```console\nPOST /_sql?format=csv\n{\n  \"query\": \"SELECT * FROM library ORDER BY page_count DESC\",\n  \"fetch_size\": 5\n}\n```\n\nwhich returns:\n\n```text\nauthor,name,page_count,release_date\nPeter F. Hamilton,Pandora's Star,768,2004-03-02T00:00:00.000Z\nVernor Vinge,A Fire Upon the Deep,613,1992-06-01T00:00:00.000Z\nFrank Herbert,Dune,604,1965-06-01T00:00:00.000Z\nAlastair Reynolds,Revelation Space,585,2000-03-15T00:00:00.000Z\nJames S.A. Corey,Leviathan Wakes,561,2011-06-02T00:00:00.000Z\n```\n\nor:\n\n```console\nPOST /_sql?format=csv&delimiter=%3b\n{\n    \"query\": \"SELECT * FROM library ORDER BY page_count DESC\",\n    \"fetch_size\": 5\n}\n```\n\nwhich returns:\n\n```text\nauthor;name;page_count;release_date\nPeter F. Hamilton;Pandora's Star;768;2004-03-02T00:00:00.000Z\nVernor Vinge;A Fire Upon the Deep;613;1992-06-01T00:00:00.000Z\nFrank Herbert;Dune;604;1965-06-01T00:00:00.000Z\nAlastair Reynolds;Revelation Space;585;2000-03-15T00:00:00.000Z\nJames S.A. Corey;Leviathan Wakes;561;2011-06-02T00:00:00.000Z\n```\n\n\n## JSON [_json]\n\n```console\nPOST /_sql?format=json\n{\n  \"query\": \"SELECT * FROM library ORDER BY page_count DESC\",\n  \"fetch_size\": 5\n}\n```\n\nWhich returns:\n\n```console-result\n{\n  \"columns\": [\n    {\"name\": \"author\",       \"type\": \"text\"},\n    {\"name\": \"name\",         \"type\": \"text\"},\n    {\"name\": \"page_count\",   \"type\": \"short\"},\n    {\"name\": \"release_date\", \"type\": \"datetime\"}\n  ],\n  \"rows\": [\n    [\"Peter F. Hamilton\",  \"Pandora's Star\",       768, \"2004-03-02T00:00:00.000Z\"],\n    [\"Vernor Vinge\",       \"A Fire Upon the Deep\", 613, \"1992-06-01T00:00:00.000Z\"],\n    [\"Frank Herbert\",      \"Dune\",                 604, \"1965-06-01T00:00:00.000Z\"],\n    [\"Alastair Reynolds\",  \"Revelation Space\",     585, \"2000-03-15T00:00:00.000Z\"],\n    [\"James S.A. Corey\",   \"Leviathan Wakes\",      561, \"2011-06-02T00:00:00.000Z\"]\n  ],\n  \"cursor\": \"sDXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAAEWWWdrRlVfSS1TbDYtcW9lc1FJNmlYdw==:BAFmBmF1dGhvcgFmBG5hbWUBZgpwYWdlX2NvdW50AWYMcmVsZWFzZV9kYXRl+v///w8=\"\n}\n```\n\n\n## TSV [_tsv]\n\n```console\nPOST /_sql?format=tsv\n{\n  \"query\": \"SELECT * FROM library ORDER BY page_count DESC\",\n  \"fetch_size\": 5\n}\n```\n\nWhich returns:\n\n```text\nauthor\tname\tpage_count\trelease_date\nPeter F. Hamilton\tPandora's Star\t768\t2004-03-02T00:00:00.000Z\nVernor Vinge\tA Fire Upon the Deep\t613\t1992-06-01T00:00:00.000Z\nFrank Herbert\tDune\t604\t1965-06-01T00:00:00.000Z\nAlastair Reynolds\tRevelation Space\t585\t2000-03-15T00:00:00.000Z\nJames S.A. Corey\tLeviathan Wakes\t561\t2011-06-02T00:00:00.000Z\n```\n\n\n## TXT [_txt]\n\n```console\nPOST /_sql?format=txt\n{\n  \"query\": \"SELECT * FROM library ORDER BY page_count DESC\",\n  \"fetch_size\": 5\n}\n```\n\nWhich returns:\n\n```text\n     author      |        name        |  page_count   |      release_date\n-----------------+--------------------+---------------+------------------------\nPeter F. Hamilton|Pandora's Star      |768            |2004-03-02T00:00:00.000Z\nVernor Vinge     |A Fire Upon the Deep|613            |1992-06-01T00:00:00.000Z\nFrank Herbert    |Dune                |604            |1965-06-01T00:00:00.000Z\nAlastair Reynolds|Revelation Space    |585            |2000-03-15T00:00:00.000Z\nJames S.A. Corey |Leviathan Wakes     |561            |2011-06-02T00:00:00.000Z\n```\n\n\n## YAML [_yaml]\n\n```console\nPOST /_sql?format=yaml\n{\n  \"query\": \"SELECT * FROM library ORDER BY page_count DESC\",\n  \"fetch_size\": 5\n}\n```\n\nWhich returns:\n\n```yaml\ncolumns:\n- name: \"author\"\n  type: \"text\"\n- name: \"name\"\n  type: \"text\"\n- name: \"page_count\"\n  type: \"short\"\n- name: \"release_date\"\n  type: \"datetime\"\nrows:\n- - \"Peter F. Hamilton\"\n  - \"Pandora's Star\"\n  - 768\n  - \"2004-03-02T00:00:00.000Z\"\n- - \"Vernor Vinge\"\n  - \"A Fire Upon the Deep\"\n  - 613\n  - \"1992-06-01T00:00:00.000Z\"\n- - \"Frank Herbert\"\n  - \"Dune\"\n  - 604\n  - \"1965-06-01T00:00:00.000Z\"\n- - \"Alastair Reynolds\"\n  - \"Revelation Space\"\n  - 585\n  - \"2000-03-15T00:00:00.000Z\"\n- - \"James S.A. Corey\"\n  - \"Leviathan Wakes\"\n  - 561\n  - \"2011-06-02T00:00:00.000Z\"\ncursor: \"sDXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAAEWWWdrRlVfSS1TbDYtcW9lc1FJNmlYdw==:BAFmBmF1dGhvcgFmBG5hbWUBZgpwYWdlX2NvdW50AWYMcmVsZWFzZV9kYXRl+v///w8=\"\n```",
              "filename": "elasticsearch-main/docs/reference/query-languages/sql/sql-rest-format.md"
            },
            {
              "applies_to": {
                "stack": "all"
              },
              "navigation_title": "Update cross-cluster API examples",
              "content": "# Update cross-cluster API key API examples\n\nThe [update cross-cluster API key API](https://www.elastic.co/docs/api/doc/elasticsearch/v9/operation/operation-security-update-cross-cluster-api-key) updates the attributes of an existing cross-cluster API key, which is used for API key based remote cluster access. This page shows you examples of using this API.\n\n## Create a cross-cluster API key\n\nIf you create a cross-cluster API key as follows:\n\n```console\nPOST /_security/cross_cluster/api_key\n{\n  \"name\": \"my-cross-cluster-api-key\",\n  \"access\": {\n    \"search\": [\n      {\n        \"names\": [\"logs*\"]\n      }\n    ]\n  },\n  \"metadata\": {\n    \"application\": \"search\"\n  }\n}\n```\n\nA successful call returns a JSON structure that provides API key information. For example:\n\n```console-result\n{\n  \"id\": \"VuaCfGcBCdbkQm-e5aOx\",\n  \"name\": \"my-cross-cluster-api-key\",\n  \"api_key\": \"ui2lp2axTNmsyakw9tvNnw\",\n  \"encoded\": \"VnVhQ2ZHY0JDZGJrUW0tZTVhT3g6dWkybHAyYXhUTm1zeWFrdzl0dk5udw==\"\n}\n```\n\n% TESTRESPONSE[s/VuaCfGcBCdbkQm-e5aOx/$body.id/]\n% TESTRESPONSE[s/ui2lp2axTNmsyakw9tvNnw/$body.api_key/]\n% TESTRESPONSE[s/VnVhQ2ZHY0JDZGJrUW0tZTVhT3g6dWkybHAyYXhUTm1zeWFrdzl0dk5udw==/$body.encoded/]\n\n## Inspect the API key\n\nTo retrieve key information about the API key, including the exact role descriptor, use the [Get API key API](https://www.elastic.co/docs/api/doc/elasticsearch/v9/operation/operation-security-get-api-key).\n\n```console\nGET /_security/api_key?id=VuaCfGcBCdbkQm-e5aOx\n```\n\n% TEST[s/VuaCfGcBCdbkQm-e5aOx/$body.id/]\n% TEST[continued]\n\nA successful call returns a JSON structure that contains the information of the API key:\n\n```js\n{\n  \"api_keys\": [\n    {\n      \"id\": \"VuaCfGcBCdbkQm-e5aOx\",\n      \"name\": \"my-cross-cluster-api-key\",\n      \"type\": \"cross_cluster\",\n      \"creation\": 1548550550158,\n      \"expiration\": null,\n      \"invalidated\": false,\n      \"username\": \"myuser\",\n      \"realm\": \"native1\",\n      \"metadata\": {\n        \"application\": \"search\"\n      },\n      \"role_descriptors\": {\n        \"cross_cluster\": {  <1>\n          \"cluster\": [\n              \"cross_cluster_search\"\n          ],\n          \"indices\": [\n            {\n              \"names\": [\n                \"logs*\"\n              ],\n              \"privileges\": [\n                \"read\", \"read_cross_cluster\", \"view_index_metadata\"\n              ],\n              \"allow_restricted_indices\": false\n            }\n          ],\n          \"applications\": [ ],\n          \"run_as\": [ ],\n          \"metadata\": { },\n          \"transient_metadata\": {\n            \"enabled\": true\n          }\n        }\n      },\n      \"access\": {  <2>\n        \"search\": [\n          {\n            \"names\": [\n              \"logs*\"\n            ],\n            \"allow_restricted_indices\": false\n          }\n        ]\n      }\n    }\n  ]\n}\n```\n\n% NOTCONSOLE\n\n1. Role descriptor corresponding to the specified `access` scope at creation time.\nIn this example, it grants cross cluster search permission for the `logs*` index pattern.\n2. The `access` corresponds to the value specified at API key creation time.\n\n## Update access permissions and metadata\n\nThe following example updates the API key created above, assigning it new access scope and metadata:\n\n```console\nPUT /_security/cross_cluster/api_key/VuaCfGcBCdbkQm-e5aOx\n{\n  \"access\": {\n    \"replication\": [\n      {\n        \"names\": [\"archive\"]\n      }\n    ]\n  },\n  \"metadata\": {\n    \"application\": \"replication\"\n  }\n}\n```\n\n% TEST[s/VuaCfGcBCdbkQm-e5aOx/\\${body.api_keys.0.id}/]\n% TEST[continued]\n\nA successful call returns a JSON structure indicating that the API key was updated:\n\n```console-result\n{\n  \"updated\": true\n}\n```\n\nThe API key's permissions after the update can be inspected again with the [Get API key API](https://www.elastic.co/docs/api/doc/elasticsearch/v9/operation/operation-security-get-api-key) and it will be:\n\n```js\n{\n  \"api_keys\": [\n    {\n      \"id\": \"VuaCfGcBCdbkQm-e5aOx\",\n      \"name\": \"my-cross-cluster-api-key\",\n      \"type\": \"cross_cluster\",\n      \"creation\": 1548550550158,\n      \"expiration\": null,\n      \"invalidated\": false,\n      \"username\": \"myuser\",\n      \"realm\": \"native1\",\n      \"metadata\": {\n        \"application\": \"replication\"\n      },\n      \"role_descriptors\": {\n        \"cross_cluster\": {  <1>\n          \"cluster\": [\n              \"cross_cluster_replication\"\n          ],\n          \"indices\": [\n            {\n              \"names\": [\n                \"archive*\"\n              ],\n              \"privileges\": [\n                \"cross_cluster_replication\", \"cross_cluster_replication_internal\"\n              ],\n              \"allow_restricted_indices\": false\n            }\n          ],\n          \"applications\": [ ],\n          \"run_as\": [ ],\n          \"metadata\": { },\n          \"transient_metadata\": {\n            \"enabled\": true\n          }\n        }\n      },\n      \"access\": {  <2>\n        \"replication\": [\n          {\n            \"names\": [\n              \"archive*\"\n            ],\n            \"allow_restricted_indices\": false\n          }\n        ]\n      }\n    }\n  ]\n}\n```\n\n% NOTCONSOLE\n\n1. Role descriptor is updated to be the `access` scope specified at update time.\nIn this example, it is updated to grant the cross cluster replication permission\nfor the `archive*` index pattern.\n2. The `access` corresponds to the value specified at API key update time.",
              "filename": "elasticsearch-main/docs/reference/elasticsearch/rest-apis/update-cc-api-key-examples.md"
            },
            {
              "content": "#  REST API compatibility developers guide\n\nREST API compatibility is intended to minimize the impact for breaking changes applied to the REST API. Compatibility is implemented to strike a balance between preserving the REST API contract across major versions while still allowing for breaking changes. URL paths, parameters, HTTP verbs, request bodies and response bodies are all covered by REST API compatibility.\n\n### Example use case\n\nThe recommended procedure to upgrade Elasticsearch to a new major version is to first upgrade Elasticsearch (the server), then upgrade any of the consumers/clients. This implies that the consumers/clients during and immediately after an upgrade may still be attempting to communicate with Elasticsearch using the prior major version's REST API contract.  During this time, without compatibility, if any of consumers/clients continue to call into one of the REST API's that include breaking changes, the consumer/client can also break.  Compatibility is a best attempt to honor the spirit of the original API call even after the breaking change has been applied.\n\nFor example, assume a REST request requires a consumer to send a \"limit\" parameter in the body of the request. Elasticsearch (the server) is upgraded to the next major version and that major version made a non-passive change that removes \"limit\" in favor of a \"minimum\" and \"maximum\" fields to enable some new functionality to also support a new lower limit. After the major version upgrade Elasticsearch only knows about \"minimum\" and \"maximum\", but the consumer/client (still on the older version of the client) only knows about \"limit\". With REST API compatibility the consumer/client can continue to send \"limit\" and Elasticsearch will honor that request using the value of \"limit\" as the \"maximum\".  Since the prior version had no notion of \"minimum\",  mapping \"limit\" -> \"maximum\" is the best attempt to honor the spirit of the request while still allowing the API and underlying behavior to evolve.  A warning will be emitted to let the consumer/client know Elasticsearch applied compatibility.\n\n### Workflow\n\nREST API compatibility is opt-in per request using a specialized value for the `Accept` or `Content-Type` HTTP header.  The intent is that this header may be sent prior to a major version upgrade resulting in no differences with the standard header values when the client and server match versions. For example, assume the consumer/client using the REST API for Elasticsearch version 7.  If the client sends the specialized header value(s) for compatibility with version 7, then it will have no effect when talking with Elasticsearch version 7. However, once Elasticsearch is upgraded to version 8, and the compatibility with version 7 headers are sent, then Elasticsearch version 8 attempts to honor the version 7 REST API contract. This allows Elasticsearch to be upgraded to version 8 while the clients can generally remain on version 7. It is not always guaranteed to fix all upgrade issues but should provide an additional level of confidence during/post upgrade.\n\nBreaking changes always follow a life-cycle of deprecation (documentation and warnings) in the current version before implementing the breaking change in the next major version. This give users an opportunity to adopt the non-deprecated variants in the current version. It is the still recommended approach to stop the usage of all deprecated functionality prior to a major version upgrade. However, in practice this can be a difficult, error prone, and a time consuming task. So it also recommended that consumers/clients send the specialized header to enable REST API compatibility before an upgrade to help catch any missed usages of deprecated functionality.\n\n### Specialized header\n\nREST API compatibility is enabled per request using a specialized HTTP header.\n\nFor a request without a body the following Accept header is required to request REST API compatibility:\n\n```javascript\nAccept: \"application/vnd.elasticsearch+json;compatible-with=7\"\n```\n\nIf the request also has a body the following is also necessary\n\n```javascript\nContent-Type: \"application/vnd.elasticsearch+json;compatible-with=7\"\n```\n\nThe headers mirrors the 4 supported media types for both the `Accept` and `Content-Type` headers.\n\n```javascript\n\"application/vnd.elasticsearch+json;compatible-with=7\"\n\"application/vnd.elasticsearch+yaml;compatible-with=7\"\n\"application/vnd.elasticsearch+smile;compatible-with=7\"\n\"application/vnd.elasticsearch+cbor;compatible-with=7\"\n```\n\nThe version request is found in compatible-with=7. When sent to a version 7 server will do nothing special. When sent to a version 8 server will apply compatiblity if needed. When sent to a version 9 server will fail since compatibility is only supported across 1 major version.\n\nA consumer/client may not mix \"compatible-with\" versions between headers. Attempts to mix and match compatible versions between `Accept` and `Content-Type` headers will result in an error.  A consumer/client may mix the media type (i.e. send `yaml` and get back `json`).\n\n\n## Introducing breaking changes to the REST API\n\nThe remainder of this guide is intended to help Elasticsearch developers understand how to introduce breaking changes to the REST API with support for REST API compatibility.\n\n### When to apply\n\nAny changes that touch the URL path,  URL parameters, HTTP verbs, the shape or response code for the non-error response, the shape of the request should account for REST API compatibility.  REST API compatibility is first introduced with version 8 with compatibility back to version 7.  The 7.x branch of code has some minimal support to allow for easy back porting and to allow for the reading of the header on a version 7 cluster. There are no plans to provide compatibility back to version 6.\n\nREST API compatibility is not the same as a fully version-ed API. It is a best attempt find a compatible way to honor the prior major version REST API contract. There will be cases where it is not possible to apply a compatibility. In those cases a meaningful error message should be emitted.\n\n### When not to apply\n\nSettings, SQL, scripting, CAT APIs, and errors messages all touch the REST API but are not covered by REST API compatibility.\n\n### Implementation\n\nThere are 4 primary integration points with REST API compatibility.\n\n*  Serializing responses to xContent\n*  De-serializing requests from xContent\n*  URL path, URL parameters, and HTTP verbs\n*  Testing for compatibility\n\n### Serializing\n\nEmitting a response back to the client is generally done via the `ToXContent#toXContent` method. The requested compatibility can be found in the `XContentBuilder` object allowing for conditional logic based on a specific request. For example:\n\n```java\n    if (builder.getRestApiVersion() == RestApiVersion.V_7) {\n        builder.field(\"limit\", max);\n    } else {\n        builder.field(\"maximum,\", max);\n        builder.field(\"minimum\", min);\n    }\n```\n\nIn some cases the `ToXContent#toXContent` is also used to serialize the values to the cluster state.  In these cases some refactoring or additional runtime validation is necessary to prevent the REST API conditional serialization from persisting in cluster state.\n\nIn places where `ToXContent#toXContent` is not used for serialization, then the requested compatibility can also be found in the `RestRequest` object and used accordingly. It is generally discouraged to push the requested compatibility version down through the transport actions to keep the REST compatibility a REST layer concern.\n\n### De-serializing\n\nAccepting a payload from a prior version's REST request is a bit more difficult than sending a compatible response. There are a couple different approaches for de-serialization, however, in general all of them use a request specific parser.  `XContentParser` has a `getRestApiVersion()` method that could be used in manner that is near identical to serialization. However, in practice most parsers are invoked via a `ConstructingObjectParser` or an `ObjectParser` and quite often they are daisy chained together via the `NamedXContentRegistry`.\n\nBoth `ConstructingObjectParser` and `ObjectParser` use `ParseField`'s to statically declare the relationship between a named key and value pairing. A parser via it's `ParseField` can be made version aware, meaning that the parser will match on the incoming payload if the requested compatibility is the correct version.\n\nFor example:\n\n```java\nPARSER.declareInt(MyPojo::setMax, new ParseField(\"maximum\", \"limit\").forRestApiVersion(RestApiVersion.equalTo(RestApiVersion.V_7)));\nPARSER.declareInt(MyPojo::setMax, new ParseField(\"maximum\").forRestApiVersion(RestApiVersion.onOrAfter(RestApiVersion.V_8)));\n```\n\nThe above example is for code that live in the version 8 branch of code. In this example, `limit` has been deprecated in version 7 and removed in version 8.  The above code reads use the `maximum` value from the request for both version 7 and version 8. However, if compatibility is requested it will also allow `limit` in the payload.  If `limit` is used a warning will be emitted.\n\nThe version in `forRestApiVersion` is reference to when the declaration is valid. Assuming version 8 is the main branch and all changes start in the main branch then get back ported. The above text is what would be applicable for the v8 branch of code. The first line of code is essentially ignored except for when compatibility with version 7 is requested. When back-porting this change to the 7.x branch, the first line would be identical, and the second line would be omitted.\n\nThe above strategy works well for single fields, but could get overly complex very fast for large multiple field changes. For more complex de-serialization changes there is also support to construct a `NamedXContentRegistry` with some \"normal\" entries as well some entries that are only applied when compatibility with the prior version is requested. The syntax is very similar where can express the desired version from the required `ParseField` when adding an entry to the `NamedXContentRegistry`.\n\nAdditionally, there is a pseudo standard method `fromXContent` which also generally has access to the `XContentParser` for that request which can be used to conditionally change how to parse the input.\n\n```java\nprivate static final ParseField limitField = new ParseField(\"maximum\", \"limit\").forRestApiVersion(RestApiVersion.equalTo(RestApiVersion.V_7));\n\n//call to fromXContent\nMyExample.fromXContent(XContentType.JSON.xContent().createParser(XContentParserConfiguration.EMPTY.withDeprecationHandler(LoggingDeprecationHandler.INSTANCE).withRestApiVersion(request.getRestApiVersion()), \" { \\\"limit\\\" : 99 }\"));\n\n//contents of a fromXContent\nwhile ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n    if (token == XContentParser.Token.FIELD_NAME) {\n        currentFieldName = parser.currentName();\n    } else if (token.isValue()) {\n        if (limitField.match(currentFieldName, LoggingDeprecationHandler.INSTANCE)) {\n            if (parser.getRestApiVersion().matches(RestApiVersion.onOrAfter(RestApiVersion.V_8))\n                && \"maximum\".equals(currentFieldName) == false) {\n                throw new IllegalArgumentException(\"invalid parameter [limit], use [maximum] instead\");\n            } else {\n                value = parser.intValue();\n            }\n        }\n    }\n}\n```\n### URL\n\nPaths are declared via a Route. Routes are composed of the HTTP verb and the relative path. Optionally they can declare a deprecated verb/path combination and the REST API version in which they were deprecated.\n\nFor example:\n\n```java\n   Route.builder(GET, \"_mypath/{foo}/{bar}\").deprecated(MY_DEPRECATION_MESSAGE, RestApiVersion.V_7).build(),\n```\nNote: you can safely backport this route declaration to 7.x branch.\nThe above declares that `GET _mypath/foo/bar` is deprecated in version 7. When this path is called in a version 7 server, it will emit the deprecation warning. When this path is called in a version 8 server, it will throw a 404 error unless REST API compatibility is requested. Only then will the path be honored and will also emit a warning message.\n\n\nHTTP parameters (i.e. ?user=alice) are also covered by REST API compatibility and must be at least consumed as to not cause an error. For example if you remove a parameter in version 8, you must at least read that parameter and emit a warning when version 7 compatibility is requested.\n\nFor example:\n\n```java\nif (request.getRestApiVersion() == RestApiVersion.V_7 && request.hasParam(\"limit\")) {\n    deprecationLogger.compatibleCritical(\"limit_parameter_deprecation\",\n                      \"Deprecated parameter [limit] used, replaced by [maximum and minimum]\");\n    setMax(request.param(\"limit\"));\n }\n```\n\nThe above code checks the request's compatible version and if the request has the parameter in question. In this case the deprecation warning is not automatic and requires the developer to manually log the warning. `request.param` is also required since it consumes the value as to avoid the error of unconsumed parameters.\n\n### Testing Backwards Compatibility\n\nThe primary means of testing compatibility is via the prior major version's YAML REST tests. The build system will download the latest prior version of the YAML rest tests and execute them against the current cluster version. For example if you are testing main versioned as 9.0.0 the build system will download the yaml tests in the 8.x branch and execute those against the current cluster version for 9.0.0.\n\nPrior to execution the tests will be transformed by injecting the correct headers to enable compatibility as well as other custom changes to the tests to allow the tests to pass. These customizations are configured via the build.gradle and happen just prior to test execution. Since the compatibility tests are manipulated version of the tests stored in Github (via the past major version), it is important to find the local (on disk) version for troubleshooting compatibility tests.\n\nThe tests are wired into the `check` task, so that is the easiest way to test locally prior to committing.  More specifically the task is called `yamlRestCompatTest`. These behave nearly identical to it's non-compat `yamlRestTest` task. The only variance is that the tests are sourced from the prior version branch and the tests go through a transformation phase before execution. The transformation task is `yamlRestCompatTestTransform`.\n\nFor example:\n\n```bash\n./gradlew :rest-api-spec:yamlRestCompatTest\n```\n\nSince these are a variation of backward compatibility testing, the entire suite of compatibility tests will be skipped anytime the backward compatibility testing is disabled. Since the source code for these tests live in a branch of code, disabling a specific test should be done via the transformation task configuration in build.gradle (i.e. `yamlRestCompatTestTransform`).\n\nIn some cases the prior version of the YAML REST tests are not sufficient to fully test changes. This can happen when the prior version has insufficient test coverage. In those cases, you can simply add more testing to the prior version or you can add custom REST tests that will run along side of the other compatibility tests. These custom tests can be found in the `yamlRestCompatTest` sourceset. Custom REST tests for compatibility will not be modified prior to execution, so the correct headers need to be manually added.\n\n#### Breaking Changes\n\nIt is possible to be in a state where you have intentionally made a breaking change and the compatibility tests will fail irrespective of checks for `skip` or `requires` cluster or test features in the current version such as 9.0.0. In this state, assuming the breaking changes are reasonable and agreed upon by the breaking change committee, the correct behavior is to skip the test in the `build.gradle` in 9.0.0. For example, if you make a breaking change that causes the `range/20_synthetic_source/Date range` to break then this test can be disabled temporarily in this file `rest-api-spec/build.gradle` like within this snippet:\n\n```groovy\ntasks.named(\"yamlRestCompatTestTransform\").configure({task ->\n    task.skipTest(\"range/20_synthetic_source/Date range\", \"date range breaking change causes tests to produce incorrect values for compatibility\")\n    task.skipTest(\"indices.sort/10_basic/Index Sort\", \"warning does not exist for compatibility\")\n    task.skipTest(\"search/330_fetch_fields/Test search rewrite\", \"warning does not exist for compatibility\")\n    task.skipTestsByFilePattern(\"indices.create/synthetic_source*.yml\", \"@UpdateForV9 -> tests do not pass after bumping API version to 9 [ES-9597]\")\n})\n```\n\nWhen skipping a test temporarily in 9.0.0, we have to implement the proper `skip` and `requires` conditions to previous branches, such as 8.latest. After these conditions are implemented in 8.latest, you can re-enable the test in 9.0.0 by removing the `skipTest` condition.\n\nThe team implementing the changes can decide how to clean up or modify tests based on how breaking changes were backported. e.g.:\n\nIn 8.latest:\n\n* Add `skip` / `requires` conditions to existing tests that check the old behavior. This prevents those tests from failing during backward compatibility or upgrade testing from 8.latest to 9.0.0\n\nIn 9.0.0:\n\n* Add `requires` conditions for new tests that validate the updated API or output format\n* Add `skip` conditions for older tests that would break in 9.0.0\n\n#### Test Features\n\nBoth cluster and test features exist. Cluster features are meant for new capability and test features can specifically be used to gate and manage `skip` and `requires` yaml test operations.  For more information, see [Versioning.md](docs/internal/Versioning.md#cluster-features). When backporting and using these features they can not overlap in name and must be consistent when backported so that clusters built with these features are compatible.\n\n### Developer's workflow\n\nThere should not be much, if any, deviation in a developers normal workflow to introduce and back-port changes. Changes should be applied in main, then back ported as needed.\n\nMost of the compatibility will work correctly when back-porting as-is, but some care is needed that the logic is correct for that version when back-porting.  For example, both the route (URL) and field (de-serialization) declarations with version awareness will behave differently if the declared version is the current version or the prior version. This allows the same line of code to be back ported as-is with differing behavior.  Additionally the compatible version is always populated (even when not requested, defaulting to the current version), so conditional logic comparing against a specific version is safe across branches.\n\nMixed clusters are not explicitly tested since the change should be applied at the REST (coordinating node) layer.\n\n### Troubleshooting compatibility test failures\n\nBy far the most common reason that compatibility tests can seemingly randomly fail is that your main branch is out of date with the upstream main. For this reason, it always suggested to ensure that your PR branch is up to date.\n\nTest failure reproduction lines should behave identical to the non-compatible variant. However, to assure you are referencing the correct line number when reading the test, be sure to look at the line number from the transformed test on disk.  Generally the fully transformed tests can be found at `build/restResources/compat/yamlTests/transformed/rest-api-spec/test/*`.\n\nMuting compatibility tests should be done via a test transform. A per test skip or a file match can be used to skip the tests.\n\n```groovy\n\ntasks.named(\"yamlRestCompatTestTransform\").configure({ task ->\n  task.skipTestsByFilePattern(\"**/cat*/*.yml\", \"Cat API are not supported\")\n  task.skipTest(\"bulk/10_basic/Array of objects\", \"Muted due failures. See #12345\")\n})\n\n```",
              "filename": "elasticsearch-main/rest_api_compatibility.md"
            }
          ],
          "tool_call_id": "call_3EQLSC0gX2lwCPFIyKdYj5br",
          "metadata": null,
          "timestamp": "2025-10-03T01:01:29.390999+00:00",
          "part_kind": "tool-return"
        },
        {
          "tool_name": "search",
          "content": [
            {
              "navigation_title": "Elasticsearch",
              "mapped_pages": [
                "https://www.elastic.co/guide/en/elasticsearch/reference/current/es-release-notes.html"
              ],
              "content": "# Elasticsearch release notes [elasticsearch-release-notes]\n\nReview the changes, fixes, and more in each version of Elasticsearch.\n\nTo check for security updates, go to [Security announcements for the Elastic stack](https://discuss.elastic.co/c/announcements/security-announcements/31).\n\n% Release notes include only features, enhancements, and fixes. Add breaking changes, deprecations, and known issues to the applicable release notes sections.\n\n% ## version.next [elasticsearch-next-release-notes]\n\n% ### Features and enhancements [elasticsearch-next-features-enhancements]\n% *\n\n% ### Fixes [elasticsearch-next-fixes]\n% *\n\n## 9.0.10 [elasticsearch-9.0.10-release-notes]\n```{applies_to}\nstack: ga 9.0.10\n```\n\n### Features and enhancements [elasticsearch-9.0.10-features-enhancements]\n\nSearch:\n* Test changelog entry 10_0 [#10000](https://github.com/elastic/elasticsearch/pull/10000) (issue: [#10001](https://github.com/elastic/elasticsearch/issues/10001))\n* Test changelog entry 10_1 [#10002](https://github.com/elastic/elasticsearch/pull/10002) (issues: [#10003](https://github.com/elastic/elasticsearch/issues/10003), [#10004](https://github.com/elastic/elasticsearch/issues/10004))\n\n\n\n## 9.0.9 [elasticsearch-9.0.9-release-notes]\n\n### Regressions [elasticsearch-9.0.9-regression]\n\nMappings:\n* Test changelog entry 9_0 [#9000](https://github.com/elastic/elasticsearch/pull/9000) (issue: [#9001](https://github.com/elastic/elasticsearch/issues/9001))\n* Test changelog entry 9_1 [#9002](https://github.com/elastic/elasticsearch/pull/9002) (issues: [#9003](https://github.com/elastic/elasticsearch/issues/9003), [#9004](https://github.com/elastic/elasticsearch/issues/9004))\n\n\n\n## 9.0.8 [elasticsearch-9.0.8-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.8-features-enhancements]\n\nIndices:\n* Test changelog entry 8_0 [#8000](https://github.com/elastic/elasticsearch/pull/8000) (issue: [#8001](https://github.com/elastic/elasticsearch/issues/8001))\n* Test changelog entry 8_1 [#8002](https://github.com/elastic/elasticsearch/pull/8002) (issues: [#8003](https://github.com/elastic/elasticsearch/issues/8003), [#8004](https://github.com/elastic/elasticsearch/issues/8004))\n\n\n\n## 9.0.7 [elasticsearch-9.0.7-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.7-features-enhancements]\n\nCluster:\n* Test changelog entry 7_0 [#7000](https://github.com/elastic/elasticsearch/pull/7000) (issue: [#7001](https://github.com/elastic/elasticsearch/issues/7001))\n* Test changelog entry 7_1 [#7002](https://github.com/elastic/elasticsearch/pull/7002) (issues: [#7003](https://github.com/elastic/elasticsearch/issues/7003), [#7004](https://github.com/elastic/elasticsearch/issues/7004))\n\n\n\n## 9.0.6 [elasticsearch-9.0.6-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.6-features-enhancements]\n\nAggregation:\n* Test changelog entry 6_0 [#6000](https://github.com/elastic/elasticsearch/pull/6000) (issue: [#6001](https://github.com/elastic/elasticsearch/issues/6001))\n* Test changelog entry 6_1 [#6002](https://github.com/elastic/elasticsearch/pull/6002) (issues: [#6003](https://github.com/elastic/elasticsearch/issues/6003), [#6004](https://github.com/elastic/elasticsearch/issues/6004))\n\n\n\n## 9.0.5 [elasticsearch-9.0.5-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.5-features-enhancements]\n\nSecurity:\n* Test changelog entry 5_0 [#5000](https://github.com/elastic/elasticsearch/pull/5000) (issue: [#5001](https://github.com/elastic/elasticsearch/issues/5001))\n* Test changelog entry 5_1 [#5002](https://github.com/elastic/elasticsearch/pull/5002) (issues: [#5003](https://github.com/elastic/elasticsearch/issues/5003), [#5004](https://github.com/elastic/elasticsearch/issues/5004))\n\n\n\n## 9.0.4 [elasticsearch-9.0.4-release-notes]\n\n\n## 9.0.3 [elasticsearch-9.0.3-release-notes]\n\n### Fixes [elasticsearch-9.0.3-fixes]\n\nMappings:\n* Test changelog entry 3_0 [#3000](https://github.com/elastic/elasticsearch/pull/3000) (issue: [#3001](https://github.com/elastic/elasticsearch/issues/3001))\n* Test changelog entry 3_1 [#3002](https://github.com/elastic/elasticsearch/pull/3002) (issues: [#3003](https://github.com/elastic/elasticsearch/issues/3003), [#3004](https://github.com/elastic/elasticsearch/issues/3004))\n\n\n\n## 9.0.2 [elasticsearch-9.0.2-release-notes]\n\n### Fixes [elasticsearch-9.0.2-fixes]\n\nIndices:\n* Test changelog entry 2_0 [#2000](https://github.com/elastic/elasticsearch/pull/2000) (issue: [#2001](https://github.com/elastic/elasticsearch/issues/2001))\n* Test changelog entry 2_1 [#2002](https://github.com/elastic/elasticsearch/pull/2002) (issues: [#2003](https://github.com/elastic/elasticsearch/issues/2003), [#2004](https://github.com/elastic/elasticsearch/issues/2004))\n\n\n\n## 9.0.1 [elasticsearch-9.0.1-release-notes]\n\n\n## 9.0.0 [elasticsearch-900-release-notes]",
              "filename": "elasticsearch-main/build-tools-internal/src/test/resources/org/elasticsearch/gradle/internal/release/releasenotesgeneratortest.index.no-highlights.md"
            },
            {
              "navigation_title": "Elasticsearch",
              "mapped_pages": [
                "https://www.elastic.co/guide/en/elasticsearch/reference/current/es-release-notes.html"
              ],
              "content": "# Elasticsearch release notes [elasticsearch-release-notes]\n\nReview the changes, fixes, and more in each version of Elasticsearch.\n\nTo check for security updates, go to [Security announcements for the Elastic stack](https://discuss.elastic.co/c/announcements/security-announcements/31).\n\n% Release notes include only features, enhancements, and fixes. Add breaking changes, deprecations, and known issues to the applicable release notes sections.\n\n% ## version.next [elasticsearch-next-release-notes]\n\n% ### Features and enhancements [elasticsearch-next-features-enhancements]\n% *\n\n% ### Fixes [elasticsearch-next-fixes]\n% *\n\n## 9.1.0 [elasticsearch-9.1.0-release-notes]\n```{applies_to}\nstack: ga 9.1.0\n```\n\n### Highlights [elasticsearch-9.1.0-highlights]\n\n::::{dropdown} [Notable] Release highlight number 50\nRelease highlight body number 50\n::::\n\n::::{dropdown} [Notable] Release highlight number 52\nRelease highlight body number 52\n::::\n\n::::{dropdown} Release highlight number 51\nRelease highlight body number 51\n::::\n\n### Features and enhancements [elasticsearch-9.1.0-features-enhancements]\n\nSearch:\n*  [#51](https://github.com/elastic/elasticsearch/pull/51)\n*  [#50](https://github.com/elastic/elasticsearch/pull/50)\n*  [#52](https://github.com/elastic/elasticsearch/pull/52)\n\n\n\n## 9.0.10 [elasticsearch-9.0.10-release-notes]\n```{applies_to}\nstack: ga 9.0.10\n```\n\n### Features and enhancements [elasticsearch-9.0.10-features-enhancements]\n\nSearch:\n* Test changelog entry 10_0 [#10000](https://github.com/elastic/elasticsearch/pull/10000) (issue: [#10001](https://github.com/elastic/elasticsearch/issues/10001))\n* Test changelog entry 10_1 [#10002](https://github.com/elastic/elasticsearch/pull/10002) (issues: [#10003](https://github.com/elastic/elasticsearch/issues/10003), [#10004](https://github.com/elastic/elasticsearch/issues/10004))\n\n\n\n## 9.0.9 [elasticsearch-9.0.9-release-notes]\n\n### Regressions [elasticsearch-9.0.9-regression]\n\nMappings:\n* Test changelog entry 9_0 [#9000](https://github.com/elastic/elasticsearch/pull/9000) (issue: [#9001](https://github.com/elastic/elasticsearch/issues/9001))\n* Test changelog entry 9_1 [#9002](https://github.com/elastic/elasticsearch/pull/9002) (issues: [#9003](https://github.com/elastic/elasticsearch/issues/9003), [#9004](https://github.com/elastic/elasticsearch/issues/9004))\n\n\n\n## 9.0.8 [elasticsearch-9.0.8-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.8-features-enhancements]\n\nIndices:\n* Test changelog entry 8_0 [#8000](https://github.com/elastic/elasticsearch/pull/8000) (issue: [#8001](https://github.com/elastic/elasticsearch/issues/8001))\n* Test changelog entry 8_1 [#8002](https://github.com/elastic/elasticsearch/pull/8002) (issues: [#8003](https://github.com/elastic/elasticsearch/issues/8003), [#8004](https://github.com/elastic/elasticsearch/issues/8004))\n\n\n\n## 9.0.7 [elasticsearch-9.0.7-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.7-features-enhancements]\n\nCluster:\n* Test changelog entry 7_0 [#7000](https://github.com/elastic/elasticsearch/pull/7000) (issue: [#7001](https://github.com/elastic/elasticsearch/issues/7001))\n* Test changelog entry 7_1 [#7002](https://github.com/elastic/elasticsearch/pull/7002) (issues: [#7003](https://github.com/elastic/elasticsearch/issues/7003), [#7004](https://github.com/elastic/elasticsearch/issues/7004))\n\n\n\n## 9.0.6 [elasticsearch-9.0.6-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.6-features-enhancements]\n\nAggregation:\n* Test changelog entry 6_0 [#6000](https://github.com/elastic/elasticsearch/pull/6000) (issue: [#6001](https://github.com/elastic/elasticsearch/issues/6001))\n* Test changelog entry 6_1 [#6002](https://github.com/elastic/elasticsearch/pull/6002) (issues: [#6003](https://github.com/elastic/elasticsearch/issues/6003), [#6004](https://github.com/elastic/elasticsearch/issues/6004))\n\n\n\n## 9.0.5 [elasticsearch-9.0.5-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.5-features-enhancements]\n\nSecurity:\n* Test changelog entry 5_0 [#5000](https://github.com/elastic/elasticsearch/pull/5000) (issue: [#5001](https://github.com/elastic/elasticsearch/issues/5001))\n* Test changelog entry 5_1 [#5002](https://github.com/elastic/elasticsearch/pull/5002) (issues: [#5003](https://github.com/elastic/elasticsearch/issues/5003), [#5004](https://github.com/elastic/elasticsearch/issues/5004))\n\n\n\n## 9.0.4 [elasticsearch-9.0.4-release-notes]\n\n\n## 9.0.3 [elasticsearch-9.0.3-release-notes]\n\n### Fixes [elasticsearch-9.0.3-fixes]\n\nMappings:\n* Test changelog entry 3_0 [#3000](https://github.com/elastic/elasticsearch/pull/3000) (issue: [#3001](https://github.com/elastic/elasticsearch/issues/3001))\n* Test changelog entry 3_1 [#3002](https://github.com/elastic/elasticsearch/pull/3002) (issues: [#3003](https://github.com/elastic/elasticsearch/issues/3003), [#3004](https://github.com/elastic/elasticsearch/issues/3004))\n\n\n\n## 9.0.2 [elasticsearch-9.0.2-release-notes]\n\n### Fixes [elasticsearch-9.0.2-fixes]\n\nIndices:\n* Test changelog entry 2_0 [#2000](https://github.com/elastic/elasticsearch/pull/2000) (issue: [#2001](https://github.com/elastic/elasticsearch/issues/2001))\n* Test changelog entry 2_1 [#2002](https://github.com/elastic/elasticsearch/pull/2002) (issues: [#2003](https://github.com/elastic/elasticsearch/issues/2003), [#2004](https://github.com/elastic/elasticsearch/issues/2004))\n\n\n\n## 9.0.1 [elasticsearch-9.0.1-release-notes]\n\n\n## 9.0.0 [elasticsearch-900-release-notes]",
              "filename": "elasticsearch-main/build-tools-internal/src/test/resources/org/elasticsearch/gradle/internal/release/releasenotesgeneratortest.index.md"
            },
            {
              "navigation_title": "Breaking changes",
              "mapped_pages": [
                "https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking-changes.html"
              ],
              "content": "# Elasticsearch breaking changes [elasticsearch-breaking-changes]\n\nBreaking changes can impact your Elastic applications, potentially disrupting normal operations. Before you upgrade, carefully review the Elasticsearch breaking changes and take the necessary steps to mitigate any issues.\n\nIf you are migrating from a version prior to version 9.0, you must first upgrade to the last 8.x version available. To learn how to upgrade, check out [Upgrade](docs-content://deploy-manage/upgrade.md).\n\n% ## Next version [elasticsearch-nextversion-breaking-changes]\n<%\nfor(bundle in changelogBundles) {\n    def version = bundle.version\n    def versionForIds = bundle.version.toString().equals('9.0.0') ? bundle.versionWithoutSeparator : bundle.version\n    def changelogsByTypeByArea = bundle.changelogsByTypeByArea\n    def unqualifiedVersion = bundle.unqualifiedVersion\n    def coming = !bundle.bundle.released\n\n    if (coming) {\n        print \"\\n\"\n        print \"```{applies_to}\\n\"\n        print \"stack: ga ${version}\\n\"\n        print \"```\"\n    }\n%>\n## ${unqualifiedVersion} [elasticsearch-${versionForIds}-breaking-changes]\n\n<%\n    if (!changelogsByTypeByArea['breaking']) {\n        print \"There are no breaking changes associated with this release.\\n\"\n    } else {\n        for (team in (changelogsByTypeByArea['breaking'] ?: [:]).keySet()) {\n            print \"${team}:\\n\";\n\n            for (change in changelogsByTypeByArea['breaking'][team]) {\n                if (!change.entryOverride) {\n                    print \"* ${change.summary} [#${change.pr}](https://github.com/elastic/elasticsearch/pull/${change.pr})\"\n                    if (change.issues != null && change.issues.empty == false) {\n                        print change.issues.size() == 1 ? \" (issue: \" : \" (issues: \"\n                        print change.issues.collect { \"[#${it}](https://github.com/elastic/elasticsearch/issues/${it})\" }.join(\", \")\n                        print \")\"\n                    }\n                } else {\n                    print change.entryOverride;\n                }\n                print \"\\n\"\n            }\n            print \"\\n\"\n        }\n\n        print \"\\n\"\n    }\n}",
              "filename": "elasticsearch-main/build-tools-internal/src/main/resources/templates/breaking-changes.md"
            },
            {
              "mapped_pages": [
                "https://www.elastic.co/guide/en/elasticsearch/reference/current/snapshot-settings.html"
              ],
              "applies_to": {
                "deployment": {
                  "ess": null,
                  "self": null
                }
              },
              "content": "# Snapshot and restore settings [snapshot-settings]\n\nThe following cluster settings configure [snapshot and restore](docs-content://deploy-manage/tools/snapshot-and-restore.md).\n\n$$$snapshot-max-concurrent-ops$$$\n\n`snapshot.max_concurrent_operations`\n:   ([Dynamic](docs-content://deploy-manage/stack-settings.md#dynamic-cluster-setting), integer) Maximum number of concurrent snapshot operations. Defaults to `1000`.\n\n    This limit applies in total to all ongoing snapshot creation, cloning, and deletion operations. {{es}} will reject any operations that would exceed this limit.\n\n`azure.client.CLIENT_NAME.endpoint_suffix` ![logo cloud](https://doc-icons.s3.us-east-2.amazonaws.com/logo_cloud.svg \"Supported on Elastic Cloud Hosted\")\n:   Allows providing the [endpoint_suffix client setting](docs-content://deploy-manage/tools/snapshot-and-restore/azure-repository.md#repository-azure-client-settings) for a non-internal Azure client used for snapshot/restore. Note that `CLIENT_NAME` should be replaced with the name of the created client.\n\n\n## {{slm-init}} settings [_slm_init_settings]\n\nThe following cluster settings configure [{{slm}} ({{slm-init}})](docs-content://deploy-manage/tools/snapshot-and-restore/create-snapshots.md#automate-snapshots-slm).\n\n$$$slm-history-index-enabled$$$\n\n`slm.history_index_enabled`\n:   ([Dynamic](docs-content://deploy-manage/stack-settings.md#dynamic-cluster-setting), Boolean) Controls whether {{slm-init}} records the history of actions taken as part of {{slm-init}} policies to the `slm-history-*` indices. Defaults to `true`.\n\n$$$slm-retention-schedule$$$\n\n`slm.retention_schedule`\n:   ([Dynamic](docs-content://deploy-manage/stack-settings.md#dynamic-cluster-setting), [cron scheduler value](docs-content://explore-analyze/alerts-cases/watcher/schedule-types.md#schedule-cron)) Controls when the [retention task](docs-content://deploy-manage/tools/snapshot-and-restore/create-snapshots.md#slm-retention-task) runs. Can be a periodic or absolute time schedule. Supports all values supported by the [cron scheduler](docs-content://explore-analyze/alerts-cases/watcher/schedule-types.md#schedule-cron). Defaults to daily at 1:30am UTC: `0 30 1 * * ?`.\n\n$$$slm-retention-duration$$$\n\n`slm.retention_duration`\n:   ([Dynamic](docs-content://deploy-manage/stack-settings.md#dynamic-cluster-setting), [time value](/reference/elasticsearch/rest-apis/api-conventions.md#time-units)) Limits how long {{slm-init}} should spend deleting old snapshots. Defaults to one hour: `1h`.\n\n$$$slm-health-failed-snapshot-warn-threshold$$$\n\n`slm.health.failed_snapshot_warn_threshold`\n:   ([Dynamic](docs-content://deploy-manage/stack-settings.md#dynamic-cluster-setting), Long) The number of failed invocations since last successful snapshot that indicate a problem with the policy in the health api. Defaults to a health api warning after five repeated failures: `5L`.\n\n$$$repositories-url-allowed$$$\n\n`repositories.url.allowed_urls` ![logo cloud](https://doc-icons.s3.us-east-2.amazonaws.com/logo_cloud.svg \"Supported on Elastic Cloud Hosted\")\n:   ([Static](docs-content://deploy-manage/stack-settings.md#static-cluster-setting)) Specifies the [read-only URL repositories](docs-content://deploy-manage/tools/snapshot-and-restore/read-only-url-repository.md) that snapshots can be restored from.",
              "filename": "elasticsearch-main/docs/reference/elasticsearch/configuration-reference/snapshot-restore-settings.md"
            },
            {
              "navigation_title": "Elasticsearch",
              "mapped_pages": [
                "https://www.elastic.co/guide/en/elasticsearch/reference/current/es-release-notes.html"
              ],
              "content": "# Elasticsearch release notes [elasticsearch-release-notes]\n\nReview the changes, fixes, and more in each version of Elasticsearch.\n\nTo check for security updates, go to [Security announcements for the Elastic stack](https://discuss.elastic.co/c/announcements/security-announcements/31).\n\n% Release notes include only features, enhancements, and fixes. Add breaking changes, deprecations, and known issues to the applicable release notes sections.\n\n% ## version.next [elasticsearch-next-release-notes]\n\n% ### Features and enhancements [elasticsearch-next-features-enhancements]\n% *\n\n% ### Fixes [elasticsearch-next-fixes]\n% *\n\n## 9.1.4 [elasticsearch-9.1.4-release-notes]\n\n### Features and enhancements [elasticsearch-9.1.4-features-enhancements]\n\nAuthorization:\n* [Sentinel One] Add `manage`, `create_index`, `read`, `index`, `write`, `delete`, permission for third party agent indices `kibana_system` [#133793](https://github.com/elastic/elasticsearch/pull/133793) (issue: [#133703](https://github.com/elastic/elasticsearch/issues/133703))\n\nFIPS:\n* Bump bc-fips to 1.0.2.6 [#133198](https://github.com/elastic/elasticsearch/pull/133198)\n\nInfra/Plugins:\n* Add Reason field to elastic-agent upgrade details metadata [#134711](https://github.com/elastic/elasticsearch/pull/134711)\n\nNetwork:\n* Upgrade Netty to 4.1.126.Final [#134182](https://github.com/elastic/elasticsearch/pull/134182)\n\nSecurity:\n* Bump bcpkix version [#132853](https://github.com/elastic/elasticsearch/pull/132853)\n\n\n### Fixes [elasticsearch-9.1.4-fixes]\n\nAggregations:\n* Aggs: Fix CB on reduction phase [#133398](https://github.com/elastic/elasticsearch/pull/133398)\n\nAuthorization:\n* Remove `DocumentSubsetBitsetCache` locking [#133681](https://github.com/elastic/elasticsearch/pull/133681) (issue: [#132842](https://github.com/elastic/elasticsearch/issues/132842))\n\nES|QL:\n* Reserve memory for Lucene's TopN [#134235](https://github.com/elastic/elasticsearch/pull/134235)\n* Track memory in evaluators [#133392](https://github.com/elastic/elasticsearch/pull/133392)\n\nIndices APIs:\n* Fix unnecessary determinization in index pattern conflict checks [#134231](https://github.com/elastic/elasticsearch/pull/134231) (issue: [#133652](https://github.com/elastic/elasticsearch/issues/133652))\n\nInfra/Core:\n* Remove `java.xml` from system modules [#133671](https://github.com/elastic/elasticsearch/pull/133671)\n\nInfra/Scripting:\n* Update `DefBootstrap` to handle Error from `ClassValue` [#133604](https://github.com/elastic/elasticsearch/pull/133604)\n\nInfra/Settings:\n* Use latest setting value when initializing setting watch [#134091](https://github.com/elastic/elasticsearch/pull/134091) (issue: [#133701](https://github.com/elastic/elasticsearch/issues/133701))\n\nIngest Node:\n* Avoid stale enrich results after policy execution [#133752](https://github.com/elastic/elasticsearch/pull/133752)\n* Fix `allow_duplicates` edge case bug in append processor [#134319](https://github.com/elastic/elasticsearch/pull/134319)\n* Fix enrich caches outdated value after policy run [#133680](https://github.com/elastic/elasticsearch/pull/133680)\n\nMachine Learning:\n* Ensuring only a single request executor object is created [#133424](https://github.com/elastic/elasticsearch/pull/133424)\n* Fix double-counting of inference memory in the assignment rebalancer [#133919](https://github.com/elastic/elasticsearch/pull/133919)\n\nMapping:\n* Allow trailing empty string field names in paths of flattened field [#133611](https://github.com/elastic/elasticsearch/pull/133611) (issue: [#130139](https://github.com/elastic/elasticsearch/issues/130139))\n* Fixed a bug where text fields in LogsDB indices did not use their keyword multi fields for block loading [#134253](https://github.com/elastic/elasticsearch/pull/134253)\n\nNetwork:\n* Remove Transfer-Encoding from HTTP request with no content [#133775](https://github.com/elastic/elasticsearch/pull/133775)\n\nRelevance:\n* Disallow creating `semantic_text` fields in indices created prior to 8.11.0 [#133080](https://github.com/elastic/elasticsearch/pull/133080)\n\nSearch:\n* KQL: Support boolean operators in field queries [#133737](https://github.com/elastic/elasticsearch/pull/133737) (issue: [#132366](https://github.com/elastic/elasticsearch/issues/132366))\n* Prevent field caps from failing due to can match failure [#134134](https://github.com/elastic/elasticsearch/pull/134134) (issue: [#116106](https://github.com/elastic/elasticsearch/issues/116106))\n* Use inner query for equals/hashCode() in `SourceConfirmedTextQuery` [#134451](https://github.com/elastic/elasticsearch/pull/134451) (issue: [#134432](https://github.com/elastic/elasticsearch/issues/134432))\n\nSnapshot/Restore:\n* Delay S3 repo warning if default region absent [#133848](https://github.com/elastic/elasticsearch/pull/133848)\n\n\n\n## 9.0.7 [elasticsearch-9.0.7-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.7-features-enhancements]\n\nAuthorization:\n* [Sentinel One] Add `manage`, `create_index`, `read`, `index`, `write`, `delete`, permission for third party agent indices `kibana_system` [#133793](https://github.com/elastic/elasticsearch/pull/133793) (issue: [#133703](https://github.com/elastic/elasticsearch/issues/133703))\n\nFIPS:\n* Bump bc-fips to 1.0.2.6 [#133198](https://github.com/elastic/elasticsearch/pull/133198)\n\nNetwork:\n* Upgrade Netty to 4.1.126.Final [#134182](https://github.com/elastic/elasticsearch/pull/134182)\n\nSecurity:\n* Bump bcpkix version [#132853](https://github.com/elastic/elasticsearch/pull/132853)\n\n\n### Fixes [elasticsearch-9.0.7-fixes]\n\nAuthorization:\n* Remove `DocumentSubsetBitsetCache` locking [#133681](https://github.com/elastic/elasticsearch/pull/133681) (issue: [#132842](https://github.com/elastic/elasticsearch/issues/132842))\n\nIndices APIs:\n* Fix unnecessary determinization in index pattern conflict checks [#134231](https://github.com/elastic/elasticsearch/pull/134231) (issue: [#133652](https://github.com/elastic/elasticsearch/issues/133652))\n\nInfra/Core:\n* Remove `java.xml` from system modules [#133671](https://github.com/elastic/elasticsearch/pull/133671)\n\nInfra/Scripting:\n* Update `DefBootstrap` to handle Error from `ClassValue` [#133604](https://github.com/elastic/elasticsearch/pull/133604)\n\nInfra/Settings:\n* Use latest setting value when initializing setting watch [#134091](https://github.com/elastic/elasticsearch/pull/134091) (issue: [#133701](https://github.com/elastic/elasticsearch/issues/133701))\n\nIngest Node:\n* Fix `allow_duplicates` edge case bug in append processor [#134319](https://github.com/elastic/elasticsearch/pull/134319)\n* Fix enrich caches outdated value after policy run [#133680](https://github.com/elastic/elasticsearch/pull/133680)\n\nMachine Learning:\n* Ensuring only a single request executor object is created [#133424](https://github.com/elastic/elasticsearch/pull/133424)\n* Fix double-counting of inference memory in the assignment rebalancer [#133919](https://github.com/elastic/elasticsearch/pull/133919)\n\nMapping:\n* Allow trailing empty string field names in paths of flattened field [#133611](https://github.com/elastic/elasticsearch/pull/133611) (issue: [#130139](https://github.com/elastic/elasticsearch/issues/130139))\n\nRelevance:\n* Disallow creating `semantic_text` fields in indices created prior to 8.11.0 [#133080](https://github.com/elastic/elasticsearch/pull/133080)\n\nSearch:\n* KQL: Support boolean operators in field queries [#133737](https://github.com/elastic/elasticsearch/pull/133737) (issue: [#132366](https://github.com/elastic/elasticsearch/issues/132366))\n\n\n\n## 9.0.6 [elasticsearch-9.0.6-release-notes]\n\n### Highlights [elasticsearch-9.0.6-highlights]\n\n::::{dropdown} Security advisory\nThe 9.0.6 release contains fixes for potential security vulnerabilities. Please see our [security advisory](https://discuss.elastic.co/c/announcements/security-announcements/31) for more details.\n::::\n\n### Features and enhancements [elasticsearch-9.0.6-features-enhancements]\n\nAuthorization:\n* [ExtraHop & QualysGAV] Add `manage`, `create_index`, `read`, `index`, `write`, `delete`, permission for third party agent indices `kibana_system` [#132387](https://github.com/elastic/elasticsearch/pull/132387) (issue: [#131825](https://github.com/elastic/elasticsearch/issues/131825))\n\nInfra/REST API:\n* Limit the depth of a filter [#133113](https://github.com/elastic/elasticsearch/pull/133113)\n\nIngest Node:\n* Upgrading to tika 3.2.2 [#133410](https://github.com/elastic/elasticsearch/pull/133410)\n\nPackaging:\n* Update bundled JDK to Java 24.0.2+12 [#133119](https://github.com/elastic/elasticsearch/pull/133119)\n\n\n### Fixes [elasticsearch-9.0.6-fixes]\n\nEQL:\n* Better error message for sequences with only one clause plus UNTIL [#132638](https://github.com/elastic/elasticsearch/pull/132638)\n* Fix sequences with conditions involving keys and non-keys [#133134](https://github.com/elastic/elasticsearch/pull/133134)\n\nIngest Node:\n* Change GeoIpCache and EnrichCache to LongAdder [#132922](https://github.com/elastic/elasticsearch/pull/132922)\n\nLicense:\n* Limit frequency of feature last-used time updates [#133004](https://github.com/elastic/elasticsearch/pull/133004)\n\nMachine Learning:\n* Disable child span for streaming tasks [#132945](https://github.com/elastic/elasticsearch/pull/132945)\n* Improve EIS auth call logs and fix revocation bug [#132546](https://github.com/elastic/elasticsearch/pull/132546)\n* Preserve lost thread context in node inference action. A lost context causes a memory leak if APM tracing is enabled [#132973](https://github.com/elastic/elasticsearch/pull/132973)\n\n\n\n## 9.1.3 [elasticsearch-9.1.3-release-notes]\n\n### Highlights [elasticsearch-9.1.3-highlights]\n\n::::{dropdown} Security advisory\nThe 9.1.3 release contains fixes for potential security vulnerabilities. Please see our [security advisory](https://discuss.elastic.co/c/announcements/security-announcements/31) for more details.\n::::\n\n### Features and enhancements [elasticsearch-9.1.3-features-enhancements]\n\nInfra/REST API:\n* Limit the depth of a filter [#133113](https://github.com/elastic/elasticsearch/pull/133113)\n\nIngest Node:\n* Upgrading to tika 3.2.2 [#133410](https://github.com/elastic/elasticsearch/pull/133410)\n\nPackaging:\n* Update bundled JDK to Java 24.0.2+12 [#133119](https://github.com/elastic/elasticsearch/pull/133119)\n\n\n### Fixes [elasticsearch-9.1.3-fixes]\n\nData streams:\n* Force rollover on write to true when data stream indices list is empty [#133347](https://github.com/elastic/elasticsearch/pull/133347) (issue: [#133176](https://github.com/elastic/elasticsearch/issues/133176))\n\nEQL:\n* Better error message for sequences with only one clause plus UNTIL [#132638](https://github.com/elastic/elasticsearch/pull/132638)\n* Fix sequences with conditions involving keys and non-keys [#133134](https://github.com/elastic/elasticsearch/pull/133134)\n\nES|QL:\n* Fix update expiration for async query [#133021](https://github.com/elastic/elasticsearch/pull/133021) (issue: [#130619](https://github.com/elastic/elasticsearch/issues/130619))\n\nIngest Node:\n* Change GeoIpCache and EnrichCache to LongAdder [#132922](https://github.com/elastic/elasticsearch/pull/132922)\n\nLicense:\n* Limit frequency of feature last-used time updates [#133004](https://github.com/elastic/elasticsearch/pull/133004)\n\nMachine Learning:\n* Disable child span for streaming tasks [#132945](https://github.com/elastic/elasticsearch/pull/132945)\n* Improve EIS auth call logs and fix revocation bug [#132546](https://github.com/elastic/elasticsearch/pull/132546)\n* Preserve lost thread context in node inference action. A lost context causes a memory leak if APM tracing is enabled [#132973](https://github.com/elastic/elasticsearch/pull/132973)\n* Update EIS sparse and dense embedding max batch size to 16 [#132646](https://github.com/elastic/elasticsearch/pull/132646)\n* [EIS] Rename the elser 2 default model and the default inference endpoint [#130336](https://github.com/elastic/elasticsearch/pull/130336)\n\nSearch:\n* Don't fail search if bottom doc can't be formatted [#133188](https://github.com/elastic/elasticsearch/pull/133188) (issue: [#125321](https://github.com/elastic/elasticsearch/issues/125321))\n\n\n\n## 9.1.2 [elasticsearch-9.1.2-release-notes]\n\n### Features and enhancements [elasticsearch-9.1.2-features-enhancements]\n\nAuthorization:\n* [ExtraHop & QualysGAV] Add `manage`, `create_index`, `read`, `index`, `write`, `delete`, permission for third party agent indices `kibana_system` [#132387](https://github.com/elastic/elasticsearch/pull/132387) (issue: [#131825](https://github.com/elastic/elasticsearch/issues/131825))\n\n\n### Fixes [elasticsearch-9.1.2-fixes]\n\nAggregations:\n:::{dropdown} Validates parent aggregation type in `bucket_script`\nThe `bucket_script` pipeline aggregation didn\u2019t validate that its parent aggregation was a multi-bucket aggregation.\nThis caused a `ClassCastException` at runtime when the parent was not multi-bucket.\n[#132320](https://github.com/elastic/elasticsearch/pull/132320) adds a validation step so the aggregation fails early, preventing the runtime error. (issue: [#132272](https://github.com/elastic/elasticsearch/issues/132272))\n:::\n\nCodec:\n:::{dropdown} Uses local segment `fieldInfos` for TSDB merge stats\nMerging shrink TSDB or LogsDB indices in versions 8.19 or 9.1+ could fail when using `addIndexes` to combine Lucene segments directly.\nIn these cases, the `fieldInfos` value could differ between shards and the merged segment, causing incorrect merge statistics.\nPR [#132597](https://github.com/elastic/elasticsearch/pull/132597) updates the process to use `fieldInfos` from each segment instead of the merged segment, ensuring accurate stats and preventing merge failures.\n:::\n\nES|QL:\n:::{dropdown} Fixes for `COPY_SIGN` function in ESQL\nThe `COPY_SIGN` function has been updated to better support the literal `NULL` in parameters.\n[#132459](https://github.com/elastic/elasticsearch/pull/132459)\n:::\n\nMapping:\n:::{dropdown} Calculates text string length correctly for code points outside BMP\nStrings parsed with the optimized UTF-8 parsing path had incorrect length calculations for characters outside the basic multilingual plane (BMP).\nThese characters require two UTF-16 code units, but the optimized path did not account for this, causing mismatches with the non-optimized path.\n[#132593](https://github.com/elastic/elasticsearch/pull/132593) fixes the calculation to ensure consistent and correct string lengths.\n:::\n\nSearch:\n:::{dropdown} Always stops the timer when profiling the fetch phase\nExceptions in fetch sub-phases (for example, `setNextReader`) left the profiling timer running, causing mismatched start/stop calls and errors.\n[#132570](https://github.com/elastic/elasticsearch/pull/132570) ensures the `timer.stop()` call always stops.\n:::\n\n\n\n## 9.0.5 [elasticsearch-9.0.5-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.5-features-enhancements]\n\nEngine:\n* Track & log when there is insufficient disk space available to execute merges [#131711](https://github.com/elastic/elasticsearch/pull/131711)\n\n\n### Fixes [elasticsearch-9.0.5-fixes]\n\nAggregations:\n:::{dropdown} Validate parent aggregation type in `bucket_script`\nThe `bucket_script` pipeline aggregation didn\u2019t validate that its parent aggregation was a multi-bucket aggregation.\nThis caused a `ClassCastException` at runtime when the parent was not multi-bucket.\n[#132320](https://github.com/elastic/elasticsearch/pull/132320) adds a validation step so the aggregation fails early, preventing the runtime error. (issue: [#132272](https://github.com/elastic/elasticsearch/issues/132272))\n:::\n\nData streams:\n:::{dropdown} Disables auto-sharding for LOOKUP index mode\nAuto-sharding for data streams caused unsupported replica scaling when the index mode was set to `LOOKUP`.\nThis happened because lookup mappers do not support scaling beyond one replica.\n[#131429](https://github.com/elastic/elasticsearch/pull/131429) resolves this issue by disabling auto-sharding for data streams with `LOOKUP` index modes, avoiding unsupported replica settings.\n:::\n\nEQL:\n:::{dropdown} Resolves EQL parsing failure for IP-mapped fields in `OR` expressions\nParsing EQL queries failed when comparing the same IP-mapped field to multiple values joined by an `OR` expression.\nThis occurred because lookup operators were internally rewritten into `IN` expressions, which are unsupported for IP-type fields.\n[#132167](https://github.com/elastic/elasticsearch/pull/132167) resolves the issue and ensures EQL can now successfully parse and execute such or queries involving IP fields. (issue: [#118621](https://github.com/elastic/elasticsearch/issues/118621))\n:::\n:::{dropdown} Prevent double invocation of EQL listener\nIn some cases, the EQL listener could be resolved twice, potentially leading to unexpected behavior.\n[#124918](https://github.com/elastic/elasticsearch/pull/124918) updates the control flow to exit early and ensure the listener is only invoked once.\n:::\n\nES|QL:\n:::{dropdown} Disallow remote `ENRICH` after `LOOKUP JOIN`\nCombining a `LOOKUP JOIN` with remote `ENRICH` could trigger a `ClassCastException` due to pipeline breaker interactions when limits or top-N queries were involved. [#131426](https://github.com/elastic/elasticsearch/pull/131426) adds a validation that forbids remote `ENRICH` after `LOOKUP JOIN`, preventing the runtime error. (issue: [#129372](https://github.com/elastic/elasticsearch/issues/129372))\n:::\n:::{dropdown} Fix `mv_expand` inconsistent column order\nThe `mv_expand` command could return columns in a different order depending on query execution paths. Now, the new attribute generated by `mv_expand` preserves the original field positions in the output. [#129745](https://github.com/elastic/elasticsearch/pull/129745) (issue: [#129000](https://github.com/elastic/elasticsearch/issues/129000))\n:::\n:::{dropdown} Fixes `ConcurrentModificationException` caused by live operator list\nA `ConcurrentModificationException` caused test failures in `CrossClusterAsyncEnrichStopIT.testEnrichAfterStop` under certain conditions.\nThis happened because the ES|QL driver added a live operator list to the `DriverStatus` object, which could be modified while the status was being serialized.\n[#132260](https://github.com/elastic/elasticsearch/pull/132260) fixes the issue by copying the operator list before storing it, preventing concurrent changes during status reads.\n(issue: [#131564](https://github.com/elastic/elasticsearch/issues/131564))\n:::\n\nInfra/Core:\n:::{dropdown} Grants server module read/write permissions for deprecated `path.shared_data` setting\nThe server module is now granted read/write permissions for the deprecated `path.shared_data` setting.\n[#131680](https://github.com/elastic/elasticsearch/pull/131680) resolves issues surfaced in internal testing and ensures compatibility with legacy configurations.\n:::\n\nIngest Node:\n:::{dropdown} Correctly handle `download_database_on_pipeline_creation` in default or final pipelines\nA bug in the `download_database_on_pipeline_creation` setting caused geoip databases not to download when the geoip processor was referenced from a pipeline processor in a default or final pipeline.\nThis resulted in documents being tagged with `_geoip_database_unavailable_GeoLite2-City.mmdb` instead of having geo data.\n[#131236](https://github.com/elastic/elasticsearch/pull/131236) resolves the issue and ensures geoip databases download correctly in this scenario.\n:::\n:::{dropdown} Fixes incorrect mapping resolution in simulate ingest API when `mapping_addition` is provided\nWhen using the simulate ingest API with a `mapping_addition`, the system incorrectly ignored the existing mapping of the target index and instead applied the mapping from a matching index template, if one existed.\nThis caused mismatches between the index and simulation behavior.\n[#132101](https://github.com/elastic/elasticsearch/pull/132101) resolves the issue and ensures that the index\u2019s actual mapping is used when available, preserving consistency between simulation and execution.\n:::\n\nMachine Learning:\n:::{dropdown} Fix memory usage estimation for ELSER models\nUsing the deployment ID instead of the model ID caused `isElserV1Or2Model` to fail for ELSER models, because deployment IDs don\u2019t start with `.elser_model_2`.\n[#131630](https://github.com/elastic/elasticsearch/pull/131630) updates the code to pass the model ID, ensuring memory usage is estimated correctly.\n:::\n:::{dropdown} Prevents double-counting of allocations in trained model deployment memory estimation\nA recent refactor introduced a bug that caused the trained model memory estimation to double-count the number of allocations, leading to inflated memory usage projections.\n[#131990](https://github.com/elastic/elasticsearch/pull/131990) resolves the issue by reverting the change and restoring accurate memory estimation for trained model deployments.\n:::\n\nMapping:\n:::{dropdown} Fixes decoding failure for non-ASCII field names in `_ignored_source`\nA decoding error occurred when field names in `_ignored_source` contained non-ASCII characters.\nThis happened because `String.length()` was used to calculate the byte length of the field name, which only works correctly for ASCII characters.\n[#132018](https://github.com/elastic/elasticsearch/pull/132018) resolves the issue by using the actual byte array length of the encoded field name, ensuring proper decoding regardless of character encoding.\n:::\n\nSearch:\n:::{dropdown} Correct shard status reporting in point-in-time responses\nThe Open PIT API incorrectly swapped the skipped and failed shard counts when partial search results were allowed. This caused the API to report failed shards as skipped and vice versa. [#131391](https://github.com/elastic/elasticsearch/pull/131391) fixes the field mapping so shard status is reported accurately. (issue: [#131026](https://github.com/elastic/elasticsearch/issues/131026))\n:::\n:::{dropdown} Fix missing removal of query cancellation callback in QueryPhase\nA missing removal of a query cancellation callback caused unintended timeouts or cancellations in later search phases when `allow_partial_search_results` was enabled, which could lead to `ArrayIndexOutOfBoundsException` errors.\n[#130279](https://github.com/elastic/elasticsearch/pull/130279) resolves the issue and ensures predictable search execution. (issue: [#130071](https://github.com/elastic/elasticsearch/issues/130071))\n:::\n:::{dropdown} Preserve `boost` and `queryName` for semantic queries\nQuery rewrite logic dropped `boost` and `queryName` values for `match`, `knn`, and `sparse_vector` queries on `semantic_text` fields, causing query weighting and naming to be lost. [#129282](https://github.com/elastic/elasticsearch/pull/129282) resolves the issue so these values are now preserved correctly during query rewriting.\n:::\n\nSnapshot/Restore:\n:::{dropdown} Improve error handling when verifying an empty snapshot repository\n\nVerifying the integrity of a brand-new snapshot repository without any index blobs failed with a low-level error because the repository generation was `-1`, which cannot be sent over the wire. [#131677](https://github.com/elastic/elasticsearch/pull/131677) updates the logic to reject such requests early with a clearer, more helpful error message.\n:::\n\n\n\n## 9.1.1 [elasticsearch-9.1.1-release-notes]\n\n### Fixes [elasticsearch-9.1.1-fixes]\n\nData streams:\n:::{dropdown} Disables auto-sharding for LOOKUP index mode\nAuto-sharding for data streams caused unsupported replica scaling when the index mode was set to `LOOKUP`.\nThis happened because lookup mappers do not support scaling beyond one replica.\n[#131429](https://github.com/elastic/elasticsearch/pull/131429) resolves this issue by disabling auto-sharding for data streams with `LOOKUP` index mode, avoiding unsupported replica settings.\n:::\n\nEQL:\n:::{dropdown} Resolves EQL parsing failure for IP-mapped fields in `OR` expressions\nParsing EQL queries failed when comparing the same IP-mapped field to multiple values joined by an `OR` expression.\nThis occurred because lookup operators were internally rewritten into `IN` expressions, which are unsupported for IP-type fields.\n[#132167](https://github.com/elastic/elasticsearch/pull/132167) resolves the issue and ensures EQL can now successfully parse and execute such or queries involving IP fields. (issue: [#118621](https://github.com/elastic/elasticsearch/issues/118621))\n\nES|QL:\n:::{dropdown} Fixes inconsistent equality and hashcode behavior for `ConstantNullBlock`\nInconsistent equality checks caused `constantNullBlock.equals(anyDoubleBlock)` to return false, even when `doubleBlock.equals(constantNullBlock)` returned true.\nThis asymmetry led to unreliable comparisons and mismatched hashcodes when `ConstantNullBlock` was functionally equivalent to other standard blocks.\n[#131817](https://github.com/elastic/elasticsearch/pull/131817) resolves the issue and ensures both equality and hashcode functions are symmetric for these block types.\n:::\n:::{dropdown} Fixes `ConcurrentModificationException` caused by live operator list\nA `ConcurrentModificationException` caused test failures in `CrossClusterAsyncEnrichStopIT.testEnrichAfterStop` under certain conditions.\nThis happened because the ES|QL driver added a live operator list to the `DriverStatus` object, which could be modified while the status was being serialized.\n[#132260](https://github.com/elastic/elasticsearch/pull/132260) fixes the issue by copying the operator list before storing it, preventing concurrent changes during status reads.\n(issue: [#131564](https://github.com/elastic/elasticsearch/issues/131564))\n:::\n:::{dropdown} Prevents null pointer exception for `to_lower` and `to_upper` with no parameters\nCalling the `to_lower` or `to_upper` functions with no parameters caused a null pointer exception (NPE), instead of returning a clear error.\nThis behavior was a result of an older implementation of these functions.\n[#131917](https://github.com/elastic/elasticsearch/pull/131917) resolves the issue and ensures that empty parameter calls now return the correct error message. (issue: [#131913](https://github.com/elastic/elasticsearch/issues/131913))\n:::\n:::{dropdown} Fixes `aggregate_metric_double` decoding and `mv_expand` behavior on multi-index queries\nSorting across multiple indices failed when one index contained an `aggregate_metric_double` field and another did not.\nIn this case, the missing field was encoded as `NullBlock` but later incorrectly decoded as `AggregateMetricDoubleBlock`, which expects four values. This mismatch caused decoding errors.\n[#131658](https://github.com/elastic/elasticsearch/pull/131658) resolves the issue and also improves `mv_expand` by returning the input block unchanged for unsupported `AggregateMetricDoubleBlock` values, avoiding unnecessary errors.\n:::\n:::{dropdown} Fixes incorrect `ingest_took` value when combining bulk responses\nCombining two `BulkResponse` objects with `ingest_took` set to `NO_INGEST_TOOK` resulted in a combined `ingest_took` value of `-2`, which was invalid.\nThis occurred because the combination logic failed to preserve the sentinel `NO_INGEST_TOOK` constant.\n[#132088](https://github.com/elastic/elasticsearch/pull/132088) resolves the issue and ensures the result is correctly set to `NO_INGEST_TOOK` when applicable.\n:::\n:::{dropdown} Disallows remote ENRICH after FORK in query plans\nAn invalid combination of `FORK` followed by a remote-only `ENRICH` caused incorrect query planning and failed executions. [#131945](https://github.com/elastic/elasticsearch/pull/131945) resolves the issue by explicitly disallowing this combination, preventing invalid plans from being executed. (issue: [#131445](https://github.com/elastic/elasticsearch/issues/131445))\n:::\n:::{dropdown} Adds support for splitting large pages on load to avoid memory pressure\nLoading large rows from a single segment occasionally created oversized pages when decoding values row-by-row, particularly for text and geo fields.\nThis could cause memory pressure or degraded performance.\n[#131053](https://github.com/elastic/elasticsearch/pull/131053) resolves the issue by estimating the size of each page as rows are loaded.\nIf the estimated size exceeds a configurable `jumbo` threshold (defaulting to one megabyte), row loading stops early, the page is returned, and remaining rows are processed in subsequent iterations.\nThis prevents loading incomplete or oversized pages during data aggregation.\n:::\n\nInfra/Core:\n:::{dropdown} Grants server module read/write permissions for deprecated `path.shared_data` setting\nGrants the server module read/write access to the deprecated `path.shared_data` setting.\n[#131680](https://github.com/elastic/elasticsearch/pull/131680) resolves issues surfaced in internal testing and ensures compatibility with legacy configurations.\n:::\n\nIngest Node:\n:::{dropdown} Fixes incorrect mapping resolution in simulate ingest API when `mapping_addition` is provided\nWhen using the simulate ingest API with a `mapping_addition`, the system incorrectly ignored the existing mapping of the target index and instead applied the mapping from a matching index template, if one existed.\nThis caused mismatches between the index and simulation behavior.\n[#132101](https://github.com/elastic/elasticsearch/pull/132101) resolves the issue and ensures that the index\u2019s actual mapping is used when available, preserving consistency between simulation and execution.\n:::\n\nMachine Learning:\n:::{dropdown} Prevents double-counting of allocations in trained model deployment memory estimation\nA recent refactor introduced a bug that caused the trained model memory estimation to double-count the number of allocations, leading to inflated memory usage projections.\n[#131990](https://github.com/elastic/elasticsearch/pull/131990) resolves the issue by reverting the change and restoring accurate memory estimation for trained model deployments.\n:::\n\nMapping:\n:::{dropdown} Fixes decoding failure for non-ASCII field names in `_ignored_source`\nA decoding error occurred when field names in `_ignored_source` contained non-ASCII characters.\nThis happened because `String.length()` was used to calculate the byte length of the field name, which only works correctly for ASCII characters.\n[#132018](https://github.com/elastic/elasticsearch/pull/132018) resolves the issue by using the actual byte array length of the encoded field name, ensuring proper decoding regardless of character encoding.\n:::\n\nSearch:\n:::{dropdown} Fixes index sort compatibility for `date_nanos` fields in indices created before 7.14\nIndices created prior to version 7.14 that used an index sort on a `date_nanos` field could not be opened in more recent versions due to a mismatch in the default `index.sort.missing` value.\nA change in version 7.14 modified the default from `Long.MIN_VALUE` to `0L`, which caused newer versions to reject those older indices.\n[#132162](https://github.com/elastic/elasticsearch/pull/132162) resolves the issue by restoring the expected default value for indices created before 7.14, allowing them to open successfully in newer versions. (issue: [#132040](https://github.com/elastic/elasticsearch/issues/132040))\n:::\n:::{dropdown} Fix missing removal of query cancellation callback in QueryPhase\nThe timeout cancellation callback registered in `QueryPhase` via `addQueryCancellation` was not removed after the query phase completed.\nThis caused unintended timeouts or cancellations during subsequent phases under specific conditions (such as large datasets, low timeouts, and partial search results enabled).\n[#130279](https://github.com/elastic/elasticsearch/pull/130279) resolves the issue and ensures predictable behavior by reintroducing the cleanup logic. (issue: [#130071](https://github.com/elastic/elasticsearch/issues/130071))\n:::\n\n\n\n## 9.1.0 [elasticsearch-9.1.0-release-notes]\n\n### Highlights [elasticsearch-9.1.0-highlights]\n\n::::{dropdown} Upgrade `repository-s3` to AWS SDK v2\nIn earlier versions of {{es}} the `repository-s3` plugin was based on the AWS SDK v1. AWS will withdraw support for this SDK before the end of the life of {{es}} 9.1 so we have migrated this plugin to the newer AWS SDK v2.\nThe two SDKs are not quite compatible, so please check the breaking changes documentation and test the new version thoroughly before upgrading any production workloads.\n::::\n\n::::{dropdown} Add ability to redirect ingestion failures on data streams to a failure store\nDocuments that encountered ingest pipeline failures or mapping conflicts\nwould previously be returned to the client as errors in the bulk and\nindex operations. Many client applications are not equipped to respond\nto these failures. This leads to the failed documents often being\ndropped by the client which cannot hold the broken documents\nindefinitely. In many end user workloads, these failed documents\nrepresent events that could be critical signals for observability or\nsecurity use cases.\n\nTo help mitigate this problem, data streams can now maintain a \"failure\nstore\" which is used to accept and hold documents that fail to be\ningested due to preventable configuration errors. The data stream's\nfailure store operates like a separate set of backing indices with their\nown mappings and access patterns that allow Elasticsearch to accept\ndocuments that would otherwise be rejected due to unhandled ingest\npipeline exceptions or mapping conflicts.\n\nUsers can enable redirection of ingest failures to the failure store on\nnew data streams by specifying it in the new `data_stream_options` field\ninside of a component or index template:\n\n```yaml\nPUT _index_template/my-template\n{\n  \"index_patterns\": [\"logs-test-*\"],\n  \"data_stream\": {},\n  \"template\": {\n    \"data_stream_options\": {\n      \"failure_store\": {\n        \"enabled\": true\n      }\n    }\n  }\n}\n```\n\nExisting data streams can be configured with the new data stream\n`_options` endpoint:\n\n```yaml\nPUT _data_stream/logs-test-apache/_options\n{\n  \"failure_store\": {\n    \"enabled\": \"true\"\n  }\n}\n```\n\nWhen redirection is enabled, any ingestion related failures will be\ncaptured in the failure store if the cluster is able to, along with the\ntimestamp that the failure occurred, details about the error\nencountered, and the document that could not be ingested. Since failure\nstores are a kind of Elasticsearch index, we can search the data stream\nfor the failures that it has collected. The failures are not shown by\ndefault as they are stored in different indices than the normal data\nstream data. In order to retrieve the failures, we use the `_search` API\nalong with a new bit of index pattern syntax, the `::` selector.\n\n```yaml\nPOST logs-test-apache::failures/_search\n```\n\nThis index syntax informs the search operation to target the indices in\nits failure store instead of its backing indices. It can be mixed in a\nnumber of ways with other index patterns to include their failure store\nindices in the search operation:\n\n```yaml\nPOST logs-*::failures/_search\nPOST logs-*,logs-*::failures/_search\nPOST *::failures/_search\nPOST _query\n{\n  \"query\": \"FROM my_data_stream*::failures\"\n}\n```\n::::\n\n::::{dropdown} Mark Token Pruning for Sparse Vector as GA\nToken pruning for sparse_vector queries has been live since 8.13 as tech preview.\nAs of 8.19.0 and 9.1.0, this is now generally available.\n::::\n\n::::{dropdown} Upgrade to lucene 10.2.2\n* Reduce NeighborArray on-heap memory during HNSW graph building\n* Fix IndexSortSortedNumericDocValuesRangeQuery for integer sorting\n* ValueSource.fromDoubleValuesSource(dvs).getSortField() would throw errors when used if the DoubleValuesSource needed scores\n----\n::::\n\n::::{dropdown} Release FORK in tech preview\nFork is a foundational building block that allows multiple branches of execution.\nConceptually, fork is:\n- a bifurcation of the stream, with all data going to each fork branch, followed by\n- a merge of the branches, enhanced with a discriminator column called FORK:\n\nExample:\n\n```yaml\nFROM test\n| FORK\n( WHERE content:\"fox\" )\n( WHERE content:\"dog\" )\n| SORT _fork\n```\n\nThe FORK command add a discriminator column called `_fork`:\n\n```yaml\n| id  | content   | _fork |\n|-----|-----------|-------|\n| 3   | brown fox | fork1 |\n| 4   | white dog | fork2 |\n```\n::::\n\n::::{dropdown} ES|QL cross-cluster querying is now generally available\nThe ES|QL Cross-Cluster querying feature has been in technical preview since 8.13.\nAs of releases 8.19.0 and 9.1.0 this is now generally available.\nThis feature allows you to run ES|QL queries across multiple clusters.\n::::\n\n### Features and enhancements [elasticsearch-9.1.0-features-enhancements]\n\nAllocation:\n* Accumulate compute() calls and iterations between convergences [#126008](https://github.com/elastic/elasticsearch/pull/126008) (issue: [#100850](https://github.com/elastic/elasticsearch/issues/100850))\n* Add `FailedShardEntry` info to shard-failed task source string [#125520](https://github.com/elastic/elasticsearch/pull/125520) (issue: [#102606](https://github.com/elastic/elasticsearch/issues/102606))\n* Add cache support in `TransportGetAllocationStatsAction` [#124898](https://github.com/elastic/elasticsearch/pull/124898) (issue: [#110716](https://github.com/elastic/elasticsearch/issues/110716))\n* Add cancellation support in `TransportGetAllocationStatsAction` [#127371](https://github.com/elastic/elasticsearch/pull/127371) (issue: [#123248](https://github.com/elastic/elasticsearch/issues/123248))\n* Allow balancing weights to be set per tier [#126091](https://github.com/elastic/elasticsearch/pull/126091)\n* Introduce `AllocationBalancingRoundSummaryService` [#120957](https://github.com/elastic/elasticsearch/pull/120957)\n* More efficient sort in `tryRelocateShard` [#128063](https://github.com/elastic/elasticsearch/pull/128063)\n\nAnalysis:\n* Synonyms API - Add refresh parameter to check synonyms index and reload analyzers [#126935](https://github.com/elastic/elasticsearch/pull/126935) (issue: [#121441](https://github.com/elastic/elasticsearch/issues/121441))\n\nAuthentication:\n* Add Support for Providing a custom `ServiceAccountTokenStore` through `SecurityExtensions` [#126612](https://github.com/elastic/elasticsearch/pull/126612)\n* Implement SAML custom attributes support for Identity Provider [#128176](https://github.com/elastic/elasticsearch/pull/128176)\n* Permit at+jwt typ header value in jwt access tokens [#126687](https://github.com/elastic/elasticsearch/pull/126687) (issue: [#119370](https://github.com/elastic/elasticsearch/issues/119370))\n\nAuthorization:\n* Add Microsoft Graph Delegated Authorization Realm Plugin [#127910](https://github.com/elastic/elasticsearch/pull/127910)\n* Check `TooComplex` exception for `HasPrivileges` body [#128870](https://github.com/elastic/elasticsearch/pull/128870)\n* Delegated authorization using Microsoft Graph (SDK) [#128396](https://github.com/elastic/elasticsearch/pull/128396)\n* Fix unsupported privileges error message during role and API key crea\u2026 [#128858](https://github.com/elastic/elasticsearch/pull/128858) (issue: [#128132](https://github.com/elastic/elasticsearch/issues/128132))\n* Granting `kibana_system` reserved role access to \"all\" privileges to `.adhoc.alerts*` and `.internal.adhoc.alerts*` indices [#127321](https://github.com/elastic/elasticsearch/pull/127321)\n* [Security Solution] Add `read` index privileges to `kibana_system` role for Microsoft Defender integration indexes [#126803](https://github.com/elastic/elasticsearch/pull/126803)\n\nCCS:\n* Check if index patterns conform to valid format before validation [#122497](https://github.com/elastic/elasticsearch/pull/122497)\n\nCRUD:\n* Add `IndexingPressureMonitor` to monitor large indexing operations [#126372](https://github.com/elastic/elasticsearch/pull/126372)\n* Enhance memory accounting for document expansion and introduce max document size limit [#123543](https://github.com/elastic/elasticsearch/pull/123543)\n\nCodec:\n* First step optimizing tsdb doc values codec merging [#125403](https://github.com/elastic/elasticsearch/pull/125403)\n* Use default Lucene postings format when index mode is standard. [#128509](https://github.com/elastic/elasticsearch/pull/128509)\n\nData streams:\n* Add ability to redirect ingestion failures on data streams to a failure store [#126973](https://github.com/elastic/elasticsearch/pull/126973)\n* Add index mode to get data stream API [#122486](https://github.com/elastic/elasticsearch/pull/122486)\n* Run `TransportGetDataStreamLifecycleAction` on local node [#125214](https://github.com/elastic/elasticsearch/pull/125214)\n* Run `TransportGetDataStreamOptionsAction` on local node [#125213](https://github.com/elastic/elasticsearch/pull/125213)\n* Run `TransportGetDataStreamsAction` on local node [#122852](https://github.com/elastic/elasticsearch/pull/122852)\n* Update ecs@mappings.json with new GenAI fields [#129122](https://github.com/elastic/elasticsearch/pull/129122)\n* [Failure store] Introduce dedicated failure store lifecycle configuration [#127314](https://github.com/elastic/elasticsearch/pull/127314)\n* [Failure store] Introduce default retention for failure indices [#127573](https://github.com/elastic/elasticsearch/pull/127573)\n* [apm-data] Enable 'date_detection' for all apm data streams [#128913](https://github.com/elastic/elasticsearch/pull/128913)\n\nDistributed:\n* Account for time taken to write index buffers in `IndexingMemoryController` [#126786](https://github.com/elastic/elasticsearch/pull/126786)\n\nES|QL:\n* Add MATCH_PHRASE [#127661](https://github.com/elastic/elasticsearch/pull/127661)\n* Add Support for LIKE (LIST) [#129170](https://github.com/elastic/elasticsearch/pull/129170)\n* Add `documents_found` and `values_loaded` [#125631](https://github.com/elastic/elasticsearch/pull/125631)\n* Add `suggested_cast` [#127139](https://github.com/elastic/elasticsearch/pull/127139)\n* Add emit time to hash aggregation status [#127988](https://github.com/elastic/elasticsearch/pull/127988)\n* Add initial grammar and changes for FORK [#121948](https://github.com/elastic/elasticsearch/pull/121948)\n* Add initial grammar and planning for RRF (snapshot) [#123396](https://github.com/elastic/elasticsearch/pull/123396)\n* Add local optimizations for `constant_keyword` [#127549](https://github.com/elastic/elasticsearch/pull/127549)\n* Add optimization to purge join on null merge key [#127583](https://github.com/elastic/elasticsearch/pull/127583) (issue: [#125577](https://github.com/elastic/elasticsearch/issues/125577))\n* Add support for LOOKUP JOIN on aliases [#128519](https://github.com/elastic/elasticsearch/pull/128519)\n* Add support for parameters in LIMIT command [#128464](https://github.com/elastic/elasticsearch/pull/128464)\n* Aggressive release of shard contexts [#129454](https://github.com/elastic/elasticsearch/pull/129454)\n* Allow lookup join on mixed numeric fields [#128263](https://github.com/elastic/elasticsearch/pull/128263)\n* Allow partial results in ES|QL [#121942](https://github.com/elastic/elasticsearch/pull/121942)\n* Avoid `NamedWritable` in block serialization [#124394](https://github.com/elastic/elasticsearch/pull/124394)\n* COMPLETION command grammar and logical plan [#126319](https://github.com/elastic/elasticsearch/pull/126319)\n* Calculate concurrent node limit [#124901](https://github.com/elastic/elasticsearch/pull/124901)\n* Change queries ID to be the same as the async [#127472](https://github.com/elastic/elasticsearch/pull/127472) (issue: [#127187](https://github.com/elastic/elasticsearch/issues/127187))\n* Double parameter markers for identifiers [#122459](https://github.com/elastic/elasticsearch/pull/122459)\n* ESQL: Enhanced `DATE_TRUNC` with arbitrary intervals [#120302](https://github.com/elastic/elasticsearch/pull/120302) (issue: [#120094](https://github.com/elastic/elasticsearch/issues/120094))\n* ES|QL - Add COMPLETION command as a tech preview feature [#128948](https://github.com/elastic/elasticsearch/pull/128948) (issue: [#124405](https://github.com/elastic/elasticsearch/issues/124405))\n* ES|QL - Add `match_phrase` full text function (tech preview) [#128925](https://github.com/elastic/elasticsearch/pull/128925)\n* ES|QL - Allow full text functions to be used in STATS [#125479](https://github.com/elastic/elasticsearch/pull/125479) (issue: [#125481](https://github.com/elastic/elasticsearch/issues/125481))\n* ES|QL cross-cluster querying is now generally available [#130032](https://github.com/elastic/elasticsearch/pull/130032)\n* ES|QL slow log [#124094](https://github.com/elastic/elasticsearch/pull/124094)\n* ES|QL: Support `::date` in inline cast [#123460](https://github.com/elastic/elasticsearch/pull/123460) (issue: [#116746](https://github.com/elastic/elasticsearch/issues/116746))\n* Emit ordinal output block for values aggregate [#127201](https://github.com/elastic/elasticsearch/pull/127201)\n* Fix sorting when `aggregate_metric_double` present [#125191](https://github.com/elastic/elasticsearch/pull/125191)\n* Heuristics to pick efficient partitioning [#125739](https://github.com/elastic/elasticsearch/pull/125739)\n* Implement runtime skip_unavailable=true [#121240](https://github.com/elastic/elasticsearch/pull/121240)\n* Include failures in partial response [#124929](https://github.com/elastic/elasticsearch/pull/124929)\n* Infer the score mode to use from the Lucene collector [#125930](https://github.com/elastic/elasticsearch/pull/125930)\n* Introduce `AggregateMetricDoubleBlock` [#127299](https://github.com/elastic/elasticsearch/pull/127299)\n* Introduce `allow_partial_results` setting in ES|QL [#122890](https://github.com/elastic/elasticsearch/pull/122890)\n* Introduce a pre-mapping logical plan processing step [#121260](https://github.com/elastic/elasticsearch/pull/121260)\n* Keep ordinals in conversion functions [#125357](https://github.com/elastic/elasticsearch/pull/125357)\n* List/get query API [#124832](https://github.com/elastic/elasticsearch/pull/124832) (issue: [#124827](https://github.com/elastic/elasticsearch/issues/124827))\n* Log partial failures [#129164](https://github.com/elastic/elasticsearch/pull/129164)\n* Optimize ordinal inputs in Values aggregation [#127849](https://github.com/elastic/elasticsearch/pull/127849)\n* Pragma to load from stored fields [#122891](https://github.com/elastic/elasticsearch/pull/122891)\n* Push more `==`s on text fields to lucene [#126641](https://github.com/elastic/elasticsearch/pull/126641)\n* Pushdown Lookup Join past Project [#129503](https://github.com/elastic/elasticsearch/pull/129503) (issue: [#119082](https://github.com/elastic/elasticsearch/issues/119082))\n* Pushdown constructs doing case-insensitive regexes [#128393](https://github.com/elastic/elasticsearch/pull/128393) (issue: [#127479](https://github.com/elastic/elasticsearch/issues/127479))\n* Pushdown for LIKE (LIST) [#129557](https://github.com/elastic/elasticsearch/pull/129557)\n* ROUND_TO function [#128278](https://github.com/elastic/elasticsearch/pull/128278)\n* Release FORK in tech preview [#129606](https://github.com/elastic/elasticsearch/pull/129606)\n* Remove page alignment in exchange sink [#124610](https://github.com/elastic/elasticsearch/pull/124610)\n* Render `aggregate_metric_double` [#122660](https://github.com/elastic/elasticsearch/pull/122660)\n* Report `original_types` [#124913](https://github.com/elastic/elasticsearch/pull/124913)\n* Report failures on partial results [#124823](https://github.com/elastic/elasticsearch/pull/124823)\n* Retry ES|QL node requests on shard level failures [#120774](https://github.com/elastic/elasticsearch/pull/120774)\n* Retry shard movements during ESQL query [#126653](https://github.com/elastic/elasticsearch/pull/126653)\n* Run coordinating `can_match` in field-caps [#127734](https://github.com/elastic/elasticsearch/pull/127734)\n* Skip unused STATS groups by adding a Top N `BlockHash` implementation [#127148](https://github.com/elastic/elasticsearch/pull/127148)\n* Specialize ags `AddInput` for each block type [#127582](https://github.com/elastic/elasticsearch/pull/127582)\n* Speed loading stored fields [#127348](https://github.com/elastic/elasticsearch/pull/127348)\n* Support partial results in CCS in ES|QL [#122708](https://github.com/elastic/elasticsearch/pull/122708)\n* Support subset of metrics in aggregate metric double [#121805](https://github.com/elastic/elasticsearch/pull/121805)\n* Take double parameter markers for identifiers out of snapshot [#125690](https://github.com/elastic/elasticsearch/pull/125690)\n* `ToAggregateMetricDouble` function [#124595](https://github.com/elastic/elasticsearch/pull/124595)\n* `text ==` and `text !=` pushdown [#127355](https://github.com/elastic/elasticsearch/pull/127355)\n\nEngine:\n* Throttle indexing when disk IO throttling is disabled [#129245](https://github.com/elastic/elasticsearch/pull/129245)\n* Track & log when there is insufficient disk space available to execute merges [#131711](https://github.com/elastic/elasticsearch/pull/131711)\n\nGeo:\n* Support explicit Z/M attributes using WKT geometry [#125896](https://github.com/elastic/elasticsearch/pull/125896) (issue: [#123111](https://github.com/elastic/elasticsearch/issues/123111))\n\nHealth:\n* Add health indicator impact to `HealthPeriodicLogger` [#122390](https://github.com/elastic/elasticsearch/pull/122390)\n\nILM+SLM:\n* Add `index.lifecycle.skip` index-scoped setting to instruct ILM to skip processing specific indices [#128736](https://github.com/elastic/elasticsearch/pull/128736)\n* Batch ILM policy cluster state updates [#122917] [#126529](https://github.com/elastic/elasticsearch/pull/126529) (issue: [#122917](https://github.com/elastic/elasticsearch/issues/122917))\n* Improve SLM Health Indicator to cover missing snapshot [#121370](https://github.com/elastic/elasticsearch/pull/121370)\n* Optimize usage calculation in ILM policies retrieval API [#106953](https://github.com/elastic/elasticsearch/pull/106953) (issue: [#105773](https://github.com/elastic/elasticsearch/issues/105773))\n* Process ILM cluster state updates on another thread [#123712](https://github.com/elastic/elasticsearch/pull/123712)\n* Run `TransportExplainLifecycleAction` on local node [#122885](https://github.com/elastic/elasticsearch/pull/122885)\n* Run `TransportGetLifecycleAction` on local node [#126002](https://github.com/elastic/elasticsearch/pull/126002)\n* Run `TransportGetStatusAction` on local node [#129367](https://github.com/elastic/elasticsearch/pull/129367)\n* Truncate `step_info` and error reason in ILM execution state and history [#125054](https://github.com/elastic/elasticsearch/pull/125054) (issue: [#124181](https://github.com/elastic/elasticsearch/issues/124181))\n\nIdentityProvider:\n* Add \"extension\" attribute validation to IdP SPs [#128805](https://github.com/elastic/elasticsearch/pull/128805)\n* Add transport version support for IDP_CUSTOM_SAML_ATTRIBUTES_ADDED_8_19 [#128798](https://github.com/elastic/elasticsearch/pull/128798)\n\nIndices APIs:\n* Add RemoveBlock API to allow `DELETE /{index}/_block/{block}` [#129128](https://github.com/elastic/elasticsearch/pull/129128)\n* Avoid creating known_fields for every check in Alias [#124690](https://github.com/elastic/elasticsearch/pull/124690)\n* Run `TransportGetIndexAction` on local node [#125652](https://github.com/elastic/elasticsearch/pull/125652)\n* Run `TransportGetMappingsAction` on local node [#122921](https://github.com/elastic/elasticsearch/pull/122921)\n* Run `TransportGetSettingsAction` on local node [#126051](https://github.com/elastic/elasticsearch/pull/126051)\n* Throw exception for unknown token in RestIndexPutAliasAction [#124708](https://github.com/elastic/elasticsearch/pull/124708)\n* Throw exception for unsupported values type in Alias [#124737](https://github.com/elastic/elasticsearch/pull/124737)\n\nInference:\n* Adding Google VertexAI chat completion integration [#128105](https://github.com/elastic/elasticsearch/pull/128105)\n* Adding Google VertexAI completion integration [#128694](https://github.com/elastic/elasticsearch/pull/128694)\n* [Inference API] Rename `model_id` prop to model in EIS sparse inference request body [#122272](https://github.com/elastic/elasticsearch/pull/122272)\n\nInfra/CLI:\n* Use logs dir as working directory [#124966](https://github.com/elastic/elasticsearch/pull/124966)\n\nInfra/Core:\n* Give Kibana user 'all' permissions for .entity_analytics.* indices [#123588](https://github.com/elastic/elasticsearch/pull/123588)\n* Improve support for bytecode patching signed jars [#128613](https://github.com/elastic/elasticsearch/pull/128613)\n* Permanently switch from Java SecurityManager to Entitlements. The Java SecurityManager has been deprecated since Java 17, and it is now completely disabled in Java 24. In order to retain an similar level of protection, Elasticsearch implemented its own protection mechanism, Entitlements. Starting with this version, Entitlements will permanently replace the Java SecurityManager. [#125117](https://github.com/elastic/elasticsearch/pull/125117)\n\nInfra/Metrics:\n* Add thread pool utilization metric [#120363](https://github.com/elastic/elasticsearch/pull/120363)\n* Publish queue latency metrics from tracked thread pools [#120488](https://github.com/elastic/elasticsearch/pull/120488)\n\nInfra/Settings:\n* Allow float settings to be configured with other settings as default [#126751](https://github.com/elastic/elasticsearch/pull/126751)\n* Allow passing several reserved state chunks in single process call [#124574](https://github.com/elastic/elasticsearch/pull/124574)\n* Ensure config reload on ..data symlink switch for CSI driver support [#127628](https://github.com/elastic/elasticsearch/pull/127628)\n* `FileWatchingService` shoudld not throw for missing file [#126264](https://github.com/elastic/elasticsearch/pull/126264)\n\nIngest Node:\n* Adding `NormalizeForStreamProcessor` [#125699](https://github.com/elastic/elasticsearch/pull/125699)\n* Run `TransportEnrichStatsAction` on local node [#121256](https://github.com/elastic/elasticsearch/pull/121256)\n\nLogs:\n* Conditionally force sequential reading in `LuceneSyntheticSourceChangesSnapshot` [#128473](https://github.com/elastic/elasticsearch/pull/128473)\n\nMachine Learning:\n* Add Custom inference service [#127939](https://github.com/elastic/elasticsearch/pull/127939)\n* Add Telemetry for models without adaptive allocations [#129161](https://github.com/elastic/elasticsearch/pull/129161)\n* Add `ModelRegistryMetadata` to Cluster State [#121106](https://github.com/elastic/elasticsearch/pull/121106)\n* Add `none` chunking strategy to disable automatic chunking for inference endpoints [#129150](https://github.com/elastic/elasticsearch/pull/129150)\n* Add recursive chunker [#126866](https://github.com/elastic/elasticsearch/pull/126866)\n* Added Mistral Chat Completion support to the Inference Plugin [#128538](https://github.com/elastic/elasticsearch/pull/128538)\n* Adding VoyageAI's v3.5 models [#128241](https://github.com/elastic/elasticsearch/pull/128241)\n* Adding common rerank options to Perform Inference API [#125239](https://github.com/elastic/elasticsearch/pull/125239) (issue: [#111273](https://github.com/elastic/elasticsearch/issues/111273))\n* Adding elser default endpoint for EIS [#122066](https://github.com/elastic/elasticsearch/pull/122066)\n* Adding endpoint creation validation to `ElasticInferenceService` [#117642](https://github.com/elastic/elasticsearch/pull/117642)\n* Adding integration for VoyageAI embeddings and rerank models [#122134](https://github.com/elastic/elasticsearch/pull/122134)\n* Adding support for binary embedding type to Cohere service embedding type [#120751](https://github.com/elastic/elasticsearch/pull/120751)\n* Adding support for specifying embedding type to Jina AI service settings [#121548](https://github.com/elastic/elasticsearch/pull/121548)\n* Adding validation to `ElasticsearchInternalService` [#123044](https://github.com/elastic/elasticsearch/pull/123044)\n* Bedrock Cohere Task Settings Support [#126493](https://github.com/elastic/elasticsearch/pull/126493) (issue: [#126156](https://github.com/elastic/elasticsearch/issues/126156))\n* ES|QL SAMPLE aggregation function [#127629](https://github.com/elastic/elasticsearch/pull/127629)\n* ES|QL `change_point` processing command [#120998](https://github.com/elastic/elasticsearch/pull/120998)\n* ES|QL random sampling [#125570](https://github.com/elastic/elasticsearch/pull/125570)\n* Expose `input_type` option at root level for `text_embedding` task type in Perform Inference API [#122638](https://github.com/elastic/elasticsearch/pull/122638) (issue: [#117856](https://github.com/elastic/elasticsearch/issues/117856))\n* Improve exception for trained model deployment scale up timeout [#128218](https://github.com/elastic/elasticsearch/pull/128218)\n* Increment inference stats counter for shard bulk inference calls [#129140](https://github.com/elastic/elasticsearch/pull/129140)\n* Integrate `OpenAi` Chat Completion in `SageMaker` [#127767](https://github.com/elastic/elasticsearch/pull/127767)\n* Integrate with `DeepSeek` API [#122218](https://github.com/elastic/elasticsearch/pull/122218)\n* Limit the number of chunks for semantic text to prevent high memory usage [#123150](https://github.com/elastic/elasticsearch/pull/123150)\n* Make Adaptive Allocations Scale to Zero configurable and set default to 24h [#128914](https://github.com/elastic/elasticsearch/pull/128914)\n* Mark token pruning for sparse vector as GA [#128854](https://github.com/elastic/elasticsearch/pull/128854)\n* Move to the Cohere V2 API for new inference endpoints [#129884](https://github.com/elastic/elasticsearch/pull/129884)\n* Semantic Text Chunking Indexing Pressure [#125517](https://github.com/elastic/elasticsearch/pull/125517)\n* Track memory used in the hierarchical results normalizer [#2831](https://github.com/elastic/elasticsearch/pull/2831)\n* Upgrade AWS v2 SDK to 2.30.38 [#124738](https://github.com/elastic/elasticsearch/pull/124738)\n* [Inference API] Propagate product use case http header to EIS [#124025](https://github.com/elastic/elasticsearch/pull/124025)\n* [ML] Add HuggingFace Chat Completion support to the Inference Plugin [#127254](https://github.com/elastic/elasticsearch/pull/127254)\n* [ML] Add Rerank support to the Inference Plugin [#127966](https://github.com/elastic/elasticsearch/pull/127966)\n* [ML] Integrate SageMaker with OpenAI Embeddings [#126856](https://github.com/elastic/elasticsearch/pull/126856)\n* `InferenceService` support aliases [#128584](https://github.com/elastic/elasticsearch/pull/128584)\n* `SageMaker` Elastic Payload [#129413](https://github.com/elastic/elasticsearch/pull/129413)\n\nMapping:\n* Add `index_options` to `semantic_text` field mappings [#119967](https://github.com/elastic/elasticsearch/pull/119967)\n* Add block loader from stored field and source for ip field [#126644](https://github.com/elastic/elasticsearch/pull/126644)\n* Do not respect synthetic_source_keep=arrays if type parses arrays [#127796](https://github.com/elastic/elasticsearch/pull/127796) (issue: [#126155](https://github.com/elastic/elasticsearch/issues/126155))\n* Enable synthetic recovery source by default when synthetic source is enabled. Using synthetic recovery source significantly improves indexing performance compared to regular recovery source. [#122615](https://github.com/elastic/elasticsearch/pull/122615) (issue: [#116726](https://github.com/elastic/elasticsearch/issues/116726))\n* Enable the use of nested field type with index.mode=time_series [#122224](https://github.com/elastic/elasticsearch/pull/122224) (issue: [#120874](https://github.com/elastic/elasticsearch/issues/120874))\n* Exclude `semantic_text` subfields from field capabilities API [#127664](https://github.com/elastic/elasticsearch/pull/127664)\n* Improved error message when index field type is invalid [#122860](https://github.com/elastic/elasticsearch/pull/122860)\n* Introduce `FallbackSyntheticSourceBlockLoader` and apply it to keyword fields [#119546](https://github.com/elastic/elasticsearch/pull/119546)\n* Refactor `SourceProvider` creation to consistently use `MappingLookup` [#128213](https://github.com/elastic/elasticsearch/pull/128213)\n* Skip indexing points for `seq_no` in tsdb and logsdb [#128139](https://github.com/elastic/elasticsearch/pull/128139)\n* Store arrays offsets for boolean fields natively with synthetic source [#125529](https://github.com/elastic/elasticsearch/pull/125529)\n* Store arrays offsets for ip fields natively with synthetic source [#122999](https://github.com/elastic/elasticsearch/pull/122999)\n* Store arrays offsets for keyword fields natively with synthetic source instead of falling back to ignored source. [#113757](https://github.com/elastic/elasticsearch/pull/113757)\n* Store arrays offsets for numeric fields natively with synthetic source [#124594](https://github.com/elastic/elasticsearch/pull/124594)\n* Store arrays offsets for unsigned long fields natively with synthetic source [#125709](https://github.com/elastic/elasticsearch/pull/125709)\n* Update `sparse_vector` field mapping to include default setting for token pruning [#129089](https://github.com/elastic/elasticsearch/pull/129089)\n* Use `FallbackSyntheticSourceBlockLoader` for `shape` and `geo_shape` [#124927](https://github.com/elastic/elasticsearch/pull/124927)\n* Use `FallbackSyntheticSourceBlockLoader` for `unsigned_long` and `scaled_float` fields [#122637](https://github.com/elastic/elasticsearch/pull/122637)\n* Use `FallbackSyntheticSourceBlockLoader` for boolean and date fields [#124050](https://github.com/elastic/elasticsearch/pull/124050)\n* Use `FallbackSyntheticSourceBlockLoader` for number fields [#122280](https://github.com/elastic/elasticsearch/pull/122280)\n* Use `FallbackSyntheticSourceBlockLoader` for point and `geo_point` [#125816](https://github.com/elastic/elasticsearch/pull/125816)\n* Use `FallbackSyntheticSourceBlockLoader` for text fields [#126237](https://github.com/elastic/elasticsearch/pull/126237)\n\nNetwork:\n* Move HTTP content aggregation from Netty into `RestController` [#129302](https://github.com/elastic/elasticsearch/pull/129302) (issue: [#120746](https://github.com/elastic/elasticsearch/issues/120746))\n* Remove first `FlowControlHandler` from HTTP pipeline [#128099](https://github.com/elastic/elasticsearch/pull/128099)\n* Replace auto-read with proper flow-control in HTTP pipeline [#127817](https://github.com/elastic/elasticsearch/pull/127817)\n* Set `connection: close` header on shutdown [#128025](https://github.com/elastic/elasticsearch/pull/128025) (issue: [#127984](https://github.com/elastic/elasticsearch/issues/127984))\n\nRanking:\n* Adding ES|QL Reranker command in snapshot builds [#123074](https://github.com/elastic/elasticsearch/pull/123074)\n* Leverage scorer supplier in `QueryFeatureExtractor` [#125259](https://github.com/elastic/elasticsearch/pull/125259)\n\nRecovery:\n* Move unpromotable relocations to its own transport action [#127330](https://github.com/elastic/elasticsearch/pull/127330)\n\nRelevance:\n* Add l2_norm normalization support to linear retriever [#128504](https://github.com/elastic/elasticsearch/pull/128504)\n* Add pinned retriever [#126401](https://github.com/elastic/elasticsearch/pull/126401)\n* Default new `semantic_text` fields to use BBQ when models are compatible [#126629](https://github.com/elastic/elasticsearch/pull/126629)\n* Skip semantic_text embedding generation when no content is provided. [#123763](https://github.com/elastic/elasticsearch/pull/123763)\n* Support configurable chunking in `semantic_text` fields [#121041](https://github.com/elastic/elasticsearch/pull/121041)\n\nSearch:\n* Account for the `SearchHit` source in circuit breaker [#121920](https://github.com/elastic/elasticsearch/pull/121920) (issue: [#89656](https://github.com/elastic/elasticsearch/issues/89656))\n* Add `bucketedSort` based on int [#128848](https://github.com/elastic/elasticsearch/pull/128848)\n* Add initial version (behind snapshot) of `multi_match` function #121525 [#125062](https://github.com/elastic/elasticsearch/pull/125062) (issue: [#121525](https://github.com/elastic/elasticsearch/issues/121525))\n* Add min score linear retriever [#129359](https://github.com/elastic/elasticsearch/pull/129359)\n* ESQL - Enable telemetry for COMPLETION command [#127731](https://github.com/elastic/elasticsearch/pull/127731)\n* Enable sort optimization on int, short and byte fields [#127968](https://github.com/elastic/elasticsearch/pull/127968) (issue: [#127965](https://github.com/elastic/elasticsearch/issues/127965))\n* Introduce batched query execution and data-node side reduce [#121885](https://github.com/elastic/elasticsearch/pull/121885)\n* Optimize memory usage in `ShardBulkInferenceActionFilter` [#124313](https://github.com/elastic/elasticsearch/pull/124313)\n* Optionally allow text similarity reranking to fail [#121784](https://github.com/elastic/elasticsearch/pull/121784)\n* Restore model registry validation for the semantic text field [#127285](https://github.com/elastic/elasticsearch/pull/127285)\n* Return float[] instead of List<Double> in `valueFetcher` [#126702](https://github.com/elastic/elasticsearch/pull/126702)\n* Simplified Linear Retriever [#129200](https://github.com/elastic/elasticsearch/pull/129200)\n* Simplified RRF Retriever [#129659](https://github.com/elastic/elasticsearch/pull/129659)\n* Upgrade to Lucene 10.2.0 [#126594](https://github.com/elastic/elasticsearch/pull/126594)\n* Upgrade to Lucene 10.2.1 [#127343](https://github.com/elastic/elasticsearch/pull/127343)\n* Upgrade to Lucene 10.2.2 [#129546](https://github.com/elastic/elasticsearch/pull/129546)\n* Wrap remote errors with cluster name to provide more context [#123156](https://github.com/elastic/elasticsearch/pull/123156)\n\nSnapshot/Restore:\n* Add GCS telemetry with `ThreadLocal` [#125452](https://github.com/elastic/elasticsearch/pull/125452)\n* Add `state` query param to Get snapshots API [#128635](https://github.com/elastic/elasticsearch/pull/128635) (issue: [#97446](https://github.com/elastic/elasticsearch/issues/97446))\n* Allow missing shard stats for restarted nodes for `_snapshot/_status` [#128399](https://github.com/elastic/elasticsearch/pull/128399)\n* GCS blob store: add `OperationPurpose/Operation` stats counters [#122991](https://github.com/elastic/elasticsearch/pull/122991)\n* Improve get-snapshots message for unreadable repository [#128273](https://github.com/elastic/elasticsearch/pull/128273)\n* Optimize shared blob cache evictions on shard removal Shared blob cache evictions occur on the cluster applier thread when shards are removed from a node. These can be expensive if a large number of shards are being removed. This change uses the context of the removal to avoid unnecessary evictions that might hold up the applier thread.  [#126581](https://github.com/elastic/elasticsearch/pull/126581)\n* Retry when the server can't be resolved (Google Cloud Storage) [#123852](https://github.com/elastic/elasticsearch/pull/123852)\n* Upgrade AWS Java SDK to 2.31.78 [#131050](https://github.com/elastic/elasticsearch/pull/131050)\n* Upgrade to repository-gcs to use com.google.cloud:google-cloud-storage-bom:2.50.0 [#126087](https://github.com/elastic/elasticsearch/pull/126087)\n* [Draft] Support concurrent multipart uploads in Azure [#128449](https://github.com/elastic/elasticsearch/pull/128449)\n\nStats:\n* Run XPack usage actions on local node [#122933](https://github.com/elastic/elasticsearch/pull/122933)\n\nTask Management:\n* React more prompty to task cancellation while waiting for the cluster to unblock [#128737](https://github.com/elastic/elasticsearch/pull/128737) (issue: [#117971](https://github.com/elastic/elasticsearch/issues/117971))\n\nVector Search:\n* Add bit vector support to semantic text [#123187](https://github.com/elastic/elasticsearch/pull/123187)\n* Add dense vector off-heap stats to Node stats and Index stats APIs [#126704](https://github.com/elastic/elasticsearch/pull/126704)\n* Add option to include or exclude vectors from `_source` retrieval [#128735](https://github.com/elastic/elasticsearch/pull/128735)\n* Add panama implementations of byte-bit and float-bit script operations [#124722](https://github.com/elastic/elasticsearch/pull/124722) (issue: [#117096](https://github.com/elastic/elasticsearch/issues/117096))\n* Adds implementations of dotProduct and cosineSimilarity painless methods to operate on float vectors for byte fields [#122381](https://github.com/elastic/elasticsearch/pull/122381) (issue: [#117274](https://github.com/elastic/elasticsearch/issues/117274))\n* Allow zero for `rescore_vector.oversample` to indicate by-passing oversample and rescoring [#125599](https://github.com/elastic/elasticsearch/pull/125599)\n* Define a default oversample value for dense vectors with bbq_hnsw/bbq_flat [#127134](https://github.com/elastic/elasticsearch/pull/127134)\n* Improve HNSW filtered search speed through new heuristic [#126876](https://github.com/elastic/elasticsearch/pull/126876)\n* Make `dense_vector` fields updatable to bbq_flat/bbq_hnsw [#128291](https://github.com/elastic/elasticsearch/pull/128291)\n* Mark `rescore_vector` as generally available [#126038](https://github.com/elastic/elasticsearch/pull/126038)\n* New `vector_rescore` parameter as a quantized index type option [#124581](https://github.com/elastic/elasticsearch/pull/124581)\n* Panama vector accelerated optimized scalar quantization [#127118](https://github.com/elastic/elasticsearch/pull/127118)\n\nWatcher:\n* Run `TransportGetWatcherSettingsAction` on local node [#122857](https://github.com/elastic/elasticsearch/pull/122857)\n\n\n### Fixes [elasticsearch-9.1.0-fixes]\n\nAggregations:\n* Bypass competitive iteration in single filter bucket case [#127267](https://github.com/elastic/elasticsearch/pull/127267) (issue: [#127262](https://github.com/elastic/elasticsearch/issues/127262))\n* Temporarily bypass competitive iteration for filters aggregation [#126956](https://github.com/elastic/elasticsearch/pull/126956)\n\nAllocation:\n* `DesiredBalanceReconciler` always returns `AllocationStats` [#122458](https://github.com/elastic/elasticsearch/pull/122458)\n\nAnalysis:\n* Add refresh to synonyms put / delete APIs to wait for synonyms to be accessible and reload analyzers [#126314](https://github.com/elastic/elasticsearch/pull/126314) (issue: [#121441](https://github.com/elastic/elasticsearch/issues/121441))\n\nCluster Coordination:\n* Disable logging in `ClusterFormationFailureHelper` on shutdown [#125244](https://github.com/elastic/elasticsearch/pull/125244) (issue: [#105559](https://github.com/elastic/elasticsearch/issues/105559))\n\nData streams:\n* Move streams status actions to cluster:monitor group [#131015](https://github.com/elastic/elasticsearch/pull/131015)\n* [apm-data] Set `event.dataset` if empty for logs [#129074](https://github.com/elastic/elasticsearch/pull/129074)\n\nDistributed:\n* Fix incorrect accounting of semantic text indexing memory pressure [#130221](https://github.com/elastic/elasticsearch/pull/130221)\n* Modify the mechanism to pause indexing [#128405](https://github.com/elastic/elasticsearch/pull/128405)\n* Pass `IndexReshardingMetadata` over the wire [#124841](https://github.com/elastic/elasticsearch/pull/124841)\n\nES|QL:\n* Added Sample operator `NamedWritable` to plugin [#131541](https://github.com/elastic/elasticsearch/pull/131541)\n* Disable a bugged commit [#127199](https://github.com/elastic/elasticsearch/pull/127199) (issue: [#127197](https://github.com/elastic/elasticsearch/issues/127197))\n* Disallow remote enrich after lu join [#131426](https://github.com/elastic/elasticsearch/pull/131426) (issue: [#129372](https://github.com/elastic/elasticsearch/issues/129372))\n* ESQL: Fix `NULL` handling in `IN` clause [#125832](https://github.com/elastic/elasticsearch/pull/125832) (issue: [#119950](https://github.com/elastic/elasticsearch/issues/119950))\n* ESQL: Fix `mv_expand` inconsistent column order [#129745](https://github.com/elastic/elasticsearch/pull/129745) (issue: [#129000](https://github.com/elastic/elasticsearch/issues/129000))\n* ESQL: Fix inconsistent results in using scaled_float field [#122586](https://github.com/elastic/elasticsearch/pull/122586) (issue: [#122547](https://github.com/elastic/elasticsearch/issues/122547))\n* ESQL: Preserve single aggregate when all attributes are pruned [#126397](https://github.com/elastic/elasticsearch/pull/126397) (issue: [#126392](https://github.com/elastic/elasticsearch/issues/126392))\n* ESQL: Retain aggregate when grouping [#126598](https://github.com/elastic/elasticsearch/pull/126598) (issue: [#126026](https://github.com/elastic/elasticsearch/issues/126026))\n* Fail with 500 not 400 for `ValueExtractor` bugs [#126296](https://github.com/elastic/elasticsearch/pull/126296)\n* Fix LIMIT NPE with null value [#130914](https://github.com/elastic/elasticsearch/pull/130914) (issue: [#130908](https://github.com/elastic/elasticsearch/issues/130908))\n* Fix `PushQueriesIT.testLike()` fails [#129647](https://github.com/elastic/elasticsearch/pull/129647)\n* Fix `PushQueryIT#testEqualityOrTooBig` [#129657](https://github.com/elastic/elasticsearch/pull/129657) (issue: [#129545](https://github.com/elastic/elasticsearch/issues/129545))\n* Fix behavior for `_index` LIKE for ESQL [#130849](https://github.com/elastic/elasticsearch/pull/130849) (issue: [#129511](https://github.com/elastic/elasticsearch/issues/129511))\n* Fix constant keyword optimization [#129278](https://github.com/elastic/elasticsearch/pull/129278)\n* Fix conversion of a Lucene wildcard pattern to a regexp [#128750](https://github.com/elastic/elasticsearch/pull/128750) (issues: [#128677](https://github.com/elastic/elasticsearch/issues/128677), [#128676](https://github.com/elastic/elasticsearch/issues/128676))\n* Fix functions emitting warnings with no source [#122821](https://github.com/elastic/elasticsearch/pull/122821) (issue: [#122588](https://github.com/elastic/elasticsearch/issues/122588))\n* Fix queries with missing index, `skip_unavailable` and filters [#130344](https://github.com/elastic/elasticsearch/pull/130344)\n* Fix transport versions [#127668](https://github.com/elastic/elasticsearch/pull/127668) (issue: [#127667](https://github.com/elastic/elasticsearch/issues/127667))\n* Handle unavailable MD5 in ES|QL [#130158](https://github.com/elastic/elasticsearch/pull/130158)\n* Improve error message for ( and [ [#124177](https://github.com/elastic/elasticsearch/pull/124177) (issue: [#124145](https://github.com/elastic/elasticsearch/issues/124145))\n* Prevent search functions work with a non-STANDARD index [#130638](https://github.com/elastic/elasticsearch/pull/130638) (issues: [#130561](https://github.com/elastic/elasticsearch/issues/130561), [#129778](https://github.com/elastic/elasticsearch/issues/129778))\n* Remove duplicated nested commands [#123085](https://github.com/elastic/elasticsearch/pull/123085)\n* Resolve groupings in aggregate before resolving references to groupings in the aggregations [#127524](https://github.com/elastic/elasticsearch/pull/127524)\n* Retrieve token text only when necessary [#126578](https://github.com/elastic/elasticsearch/pull/126578)\n* Support avg on aggregate metric double [#130421](https://github.com/elastic/elasticsearch/pull/130421)\n* TO_IP can handle leading zeros [#126532](https://github.com/elastic/elasticsearch/pull/126532) (issue: [#125460](https://github.com/elastic/elasticsearch/issues/125460))\n* TO_LOWER processes all values [#124676](https://github.com/elastic/elasticsearch/pull/124676) (issue: [#124002](https://github.com/elastic/elasticsearch/issues/124002))\n* Workaround for RLike handling of empty lang pattern [#128895](https://github.com/elastic/elasticsearch/pull/128895) (issue: [#128813](https://github.com/elastic/elasticsearch/issues/128813))\n\nHighlighting:\n* Fix semantic highlighting bug on flat quantized fields [#131525](https://github.com/elastic/elasticsearch/pull/131525) (issue: [#131443](https://github.com/elastic/elasticsearch/issues/131443))\n\nILM+SLM:\n* Fix `PolicyStepsRegistry` cache concurrency issue [#126840](https://github.com/elastic/elasticsearch/pull/126840) (issue: [#118406](https://github.com/elastic/elasticsearch/issues/118406))\n* Inject an unfollow action before executing a downsample action in ILM [#105773](https://github.com/elastic/elasticsearch/pull/105773) (issue: [#105773](https://github.com/elastic/elasticsearch/issues/105773))\n* Prevent ILM from processing shrunken index before its execution state is copied over [#129455](https://github.com/elastic/elasticsearch/pull/129455) (issue: [#109206](https://github.com/elastic/elasticsearch/issues/109206))\n* The follower index should wait until the time series end time passes before unfollowing the leader index. [#128361](https://github.com/elastic/elasticsearch/pull/128361) (issue: [#128129](https://github.com/elastic/elasticsearch/issues/128129))\n\nIndices APIs:\n* Using a temp `IndexService` for template validation [#129507](https://github.com/elastic/elasticsearch/pull/129507) (issue: [#129473](https://github.com/elastic/elasticsearch/issues/129473))\n\nInfra/Core:\n* Reduce Data Loss in System Indices Migration [#121327](https://github.com/elastic/elasticsearch/pull/121327)\n* System data streams are not being upgraded in the feature migration API [#126409](https://github.com/elastic/elasticsearch/pull/126409) (issue: [#122949](https://github.com/elastic/elasticsearch/issues/122949))\n\nInfra/Node Lifecycle:\n* Better handling of node ids from shutdown metadata (avoid NPE on already removed nodes) [#128298](https://github.com/elastic/elasticsearch/pull/128298) (issue: [#100201](https://github.com/elastic/elasticsearch/issues/100201))\n\nInfra/REST API:\n* Fix NPE in APMTracer through `RestController` [#128314](https://github.com/elastic/elasticsearch/pull/128314)\n* Improve handling of empty response [#125562](https://github.com/elastic/elasticsearch/pull/125562) (issue: [#57639](https://github.com/elastic/elasticsearch/issues/57639))\n\nInfra/Scripting:\n* Add a custom `toString` to `DynamicMap` [#126562](https://github.com/elastic/elasticsearch/pull/126562) (issue: [#70262](https://github.com/elastic/elasticsearch/issues/70262))\n* Add leniency to missing array values in mustache [#126550](https://github.com/elastic/elasticsearch/pull/126550) (issue: [#55200](https://github.com/elastic/elasticsearch/issues/55200))\n* Fix painless return type cast for list shortcut [#126724](https://github.com/elastic/elasticsearch/pull/126724)\n\nInfra/Settings:\n* Add retry for `AccessDeniedException` in `AbstractFileWatchingService` [#128653](https://github.com/elastic/elasticsearch/pull/128653)\n\nIngest Node:\n* Correctly handle non-integers in nested paths in the remove processor [#127006](https://github.com/elastic/elasticsearch/pull/127006)\n* Correctly handle nulls in nested paths in the remove processor [#126417](https://github.com/elastic/elasticsearch/pull/126417)\n* Correctly handling `download_database_on_pipeline_creation` within a pipeline processor within a default or final pipeline [#131236](https://github.com/elastic/elasticsearch/pull/131236)\n* apm-data: Use representative count as event.success_count if available [#119995](https://github.com/elastic/elasticsearch/pull/119995)\n\nLogs:\n* Force niofs for fdt tmp file read access when flushing stored fields [#130308](https://github.com/elastic/elasticsearch/pull/130308)\n\nMachine Learning:\n* Adding timeout to request for creating inference endpoint [#126805](https://github.com/elastic/elasticsearch/pull/126805)\n* Change ModelLoaderUtils.split to return the correct number of chunks and ranges. [#126009](https://github.com/elastic/elasticsearch/pull/126009) (issue: [#121799](https://github.com/elastic/elasticsearch/issues/121799))\n* Fix ELAND endpoints not updating dimensions [#126537](https://github.com/elastic/elasticsearch/pull/126537)\n* Fix memory usage estimation for ELSER models [#131630](https://github.com/elastic/elasticsearch/pull/131630)\n* Prevent get datafeeds stats API returning an error when local tasks are slow to stop [#125477](https://github.com/elastic/elasticsearch/pull/125477) (issue: [#104160](https://github.com/elastic/elasticsearch/issues/104160))\n* Provide model size statistics as soon as an anomaly detection job is opened [#124638](https://github.com/elastic/elasticsearch/pull/124638) (issue: [#121168](https://github.com/elastic/elasticsearch/issues/121168))\n* Return a Conflict status code if the model deployment is stopped by a user [#125204](https://github.com/elastic/elasticsearch/pull/125204) (issue: [#123745](https://github.com/elastic/elasticsearch/issues/123745))\n* Revert endpoint creation validation for ELSER and E5 [#126792](https://github.com/elastic/elasticsearch/pull/126792)\n* Updates to allow using Cohere binary embedding response in semantic search queries [#121827](https://github.com/elastic/elasticsearch/pull/121827)\n* Use INTERNAL_INGEST for Inference [#127522](https://github.com/elastic/elasticsearch/pull/127522) (issue: [#127519](https://github.com/elastic/elasticsearch/issues/127519))\n\nMapping:\n* Synthetic source: avoid storing multi fields of type text and `match_only_text` by default [#129126](https://github.com/elastic/elasticsearch/pull/129126)\n\nRanking:\n* Restore `TextSimilarityRankBuilder` XContent output [#124564](https://github.com/elastic/elasticsearch/pull/124564)\n* Return BAD_REQUEST when a field scorer references a missing field [#127229](https://github.com/elastic/elasticsearch/pull/127229) (issue: [#127162](https://github.com/elastic/elasticsearch/issues/127162))\n\nRelevance:\n* Fix: Allow non-score secondary sorts in pinned retriever sub-retrievers [#128323](https://github.com/elastic/elasticsearch/pull/128323)\n* Prevent Query Rule Creation with Invalid Numeric Match Criteria [#122823](https://github.com/elastic/elasticsearch/pull/122823)\n\nSearch:\n* Add Cluster Feature for L2 Norm [#129181](https://github.com/elastic/elasticsearch/pull/129181)\n* Check positions on `MultiPhraseQueries` as well as phrase queries [#129326](https://github.com/elastic/elasticsearch/pull/129326) (issue: [#123871](https://github.com/elastic/elasticsearch/issues/123871))\n* Filter out empty top docs results before merging [#126385](https://github.com/elastic/elasticsearch/pull/126385) (issue: [#126118](https://github.com/elastic/elasticsearch/issues/126118))\n* Fix NPE in `SemanticTextHighlighter` [#129509](https://github.com/elastic/elasticsearch/pull/129509) (issue: [#129501](https://github.com/elastic/elasticsearch/issues/129501))\n* Fix bug in point in time response [#131391](https://github.com/elastic/elasticsearch/pull/131391) (issue: [#131026](https://github.com/elastic/elasticsearch/issues/131026))\n* Fix handling of auto expand replicas for stateless indices [#122365](https://github.com/elastic/elasticsearch/pull/122365)\n* Fix query rewrite logic to preserve `boosts` and `queryName` for `match`, `knn`, and `sparse_vector` queries on semantic_text fields [#129282](https://github.com/elastic/elasticsearch/pull/129282)\n* Improve execution of terms queries over wildcard fields [#128986](https://github.com/elastic/elasticsearch/pull/128986) (issue: [#128201](https://github.com/elastic/elasticsearch/issues/128201))\n* Remove empty results before merging [#126770](https://github.com/elastic/elasticsearch/pull/126770) (issue: [#126742](https://github.com/elastic/elasticsearch/issues/126742))\n* Simplified Linear & RRF Retrievers - Return error on empty fields param [#129962](https://github.com/elastic/elasticsearch/pull/129962)\n\nSnapshot/Restore:\n* Do not apply further shard snapshot status updates after shard snapshot is complete [#127250](https://github.com/elastic/elasticsearch/pull/127250)\n* Fix computation of last block size in Azure concurrent multipart uploads [#128746](https://github.com/elastic/elasticsearch/pull/128746)\n* Limit number of suppressed S3 deletion errors [#123630](https://github.com/elastic/elasticsearch/pull/123630) (issue: [#123354](https://github.com/elastic/elasticsearch/issues/123354))\n* Run `newShardSnapshotTask` tasks concurrently [#126452](https://github.com/elastic/elasticsearch/pull/126452)\n* Throw better exception if verifying empty repo [#131677](https://github.com/elastic/elasticsearch/pull/131677)\n\nSuggesters:\n* Support duplicate suggestions in completion field [#121324](https://github.com/elastic/elasticsearch/pull/121324) (issue: [#82432](https://github.com/elastic/elasticsearch/issues/82432))\n\nTLS:\n* Watch SSL files instead of directories [#129738](https://github.com/elastic/elasticsearch/pull/129738)\n\nTransform:\n* Check alias during update [#124825](https://github.com/elastic/elasticsearch/pull/124825)\n\nVector Search:\n* Fix and test off-heap stats when using direct IO for accessing the raw vectors [#128615](https://github.com/elastic/elasticsearch/pull/128615)\n* Fix filtered knn vector search when query timeouts are enabled [#129440](https://github.com/elastic/elasticsearch/pull/129440)\n* Fix top level knn search with scroll [#126035](https://github.com/elastic/elasticsearch/pull/126035)\n\n\n\n## 9.0.4 [elasticsearch-9.0.4-release-notes]\n\n### Fixes [elasticsearch-9.0.4-fixes]\n\nAggregations:\n* Aggs: Add cancellation checks to `FilterByFilter` aggregator [#130452](https://github.com/elastic/elasticsearch/pull/130452)\n\nDistributed:\n* Drain responses on completion for `TransportNodesAction` [#130303](https://github.com/elastic/elasticsearch/pull/130303)\n\nES|QL:\n* Avoid O(N^2) in VALUES with ordinals grouping [#130576](https://github.com/elastic/elasticsearch/pull/130576)\n* Avoid dropping aggregate groupings in local plans [#129370](https://github.com/elastic/elasticsearch/pull/129370) (issues: [#129811](https://github.com/elastic/elasticsearch/issues/129811), [#128054](https://github.com/elastic/elasticsearch/issues/128054))\n* Fix `BytesRef2BlockHash` [#130705](https://github.com/elastic/elasticsearch/pull/130705)\n* Fix wildcard drop after lookup join [#130448](https://github.com/elastic/elasticsearch/pull/130448) (issue: [#129561](https://github.com/elastic/elasticsearch/issues/129561))\n\nInfra/Core:\n* Reverse disordered-version warning message [#129904](https://github.com/elastic/elasticsearch/pull/129904)\n\nMachine Learning:\n* Check for model deployment in inference endpoints before stopping [#129325](https://github.com/elastic/elasticsearch/pull/129325) (issue: [#128549](https://github.com/elastic/elasticsearch/issues/128549))\n* Fix timeout bug in DBQ deletion of unused and orphan ML data [#130083](https://github.com/elastic/elasticsearch/pull/130083)\n* Including `max_tokens` through the Service API for Anthropic [#131113](https://github.com/elastic/elasticsearch/pull/131113)\n\nMapping:\n* Make flattened synthetic source concatenate object keys on scalar/object mismatch [#129600](https://github.com/elastic/elasticsearch/pull/129600) (issue: [#122936](https://github.com/elastic/elasticsearch/issues/122936))\n\nRelevance:\n* Fix: `GET _synonyms` returns synonyms with empty rules [#131032](https://github.com/elastic/elasticsearch/pull/131032)\n\nSearch:\n* Check field data type before casting when applying geo distance sort [#130924](https://github.com/elastic/elasticsearch/pull/130924) (issue: [#129500](https://github.com/elastic/elasticsearch/issues/129500))\n* Fix msearch request parsing when index expression is null [#130776](https://github.com/elastic/elasticsearch/pull/130776) (issue: [#129631](https://github.com/elastic/elasticsearch/issues/129631))\n* Fix text similarity reranker does not propagate min score correctly [#129223](https://github.com/elastic/elasticsearch/pull/129223)\n* Throw a 400 when sorting for all types of range fields [#129725](https://github.com/elastic/elasticsearch/pull/129725)\n* Trim to size lists created in source fetchers [#130521](https://github.com/elastic/elasticsearch/pull/130521)\n\nVector Search:\n* Fix knn search error when dimensions are not set [#131081](https://github.com/elastic/elasticsearch/pull/131081) (issue: [#129550](https://github.com/elastic/elasticsearch/issues/129550))\n\n\n\n## 9.0.3 [elasticsearch-9.0.3-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.3-features-enhancements]\n\nAuthorization:\n* Fix unsupported privileges error message during role and API key creation [#129158](https://github.com/elastic/elasticsearch/pull/129158) (issue: [#128132](https://github.com/elastic/elasticsearch/issues/128132))\n\nEngine:\n* Threadpool merge executor is aware of available disk space [#127613](https://github.com/elastic/elasticsearch/pull/127613)\n* Threadpool merge scheduler [#120869](https://github.com/elastic/elasticsearch/pull/120869)\n\nIngest Node:\n* Update traces duration mappings with appropriate unit type [#129418](https://github.com/elastic/elasticsearch/pull/129418)\n\nSnapshot/Restore:\n* Update shardGenerations for all indices on snapshot finalization [#128650](https://github.com/elastic/elasticsearch/pull/128650) (issue: [#108907](https://github.com/elastic/elasticsearch/issues/108907))\n\nStats:\n* Optimize sparse vector stats collection [#128740](https://github.com/elastic/elasticsearch/pull/128740)\n\n\n### Fixes [elasticsearch-9.0.3-fixes]\n\nAggregations:\n* Aggs: Fix significant terms not finding background docuemnts for nested fields [#128472](https://github.com/elastic/elasticsearch/pull/128472) (issue: [#101163](https://github.com/elastic/elasticsearch/issues/101163))\n\nAuthorization:\n* Prevent invalid privileges in manage roles privilege [#128532](https://github.com/elastic/elasticsearch/pull/128532) (issue: [#127496](https://github.com/elastic/elasticsearch/issues/127496))\n\nCCS:\n* Handle the indices pattern `[\"*\", \"-*\"]` when grouping indices by cluster name [#128610](https://github.com/elastic/elasticsearch/pull/128610)\n\nES|QL:\n* Fix `FieldAttribute` name usage in `InferNonNullAggConstraint` [#128910](https://github.com/elastic/elasticsearch/pull/128910)\n* Fix case insensitive comparisons to \"\" [#127532](https://github.com/elastic/elasticsearch/pull/127532) (issue: [#127431](https://github.com/elastic/elasticsearch/issues/127431))\n* Support DATE_NANOS in LOOKUP JOIN [#127962](https://github.com/elastic/elasticsearch/pull/127962) (issue: [#127249](https://github.com/elastic/elasticsearch/issues/127249))\n* Throw ISE instead of IAE for illegal block in page [#128960](https://github.com/elastic/elasticsearch/pull/128960)\n\nIdentityProvider:\n* Improve cache invalidation in IdP SP cache [#128890](https://github.com/elastic/elasticsearch/pull/128890)\n\nIndices APIs:\n* Avoid unnecessary determinization in index pattern conflict checks [#128362](https://github.com/elastic/elasticsearch/pull/128362)\n\nInfra/Core:\n* Update AbstractXContentParser to support parsers that don't provide text characters [#129005](https://github.com/elastic/elasticsearch/pull/129005)\n\nInfra/Plugins:\n* Add complete attribute to .fleet-agents docs [#127651](https://github.com/elastic/elasticsearch/pull/127651)\n\nMachine Learning:\n* Account for Java direct memory on machine learning nodes to prevent out-of-memory crashes. [#128742](https://github.com/elastic/elasticsearch/pull/128742)\n* Ensure that anomaly detection job state update retries if master node is temoporarily unavailable [#129391](https://github.com/elastic/elasticsearch/pull/129391) (issue: [#126148](https://github.com/elastic/elasticsearch/issues/126148))\n* Prevent ML data retention logic from failing when deleting documents in read-only indices [#125408](https://github.com/elastic/elasticsearch/pull/125408)\n\nMapping:\n* Check prefixes when constructing synthetic source for flattened fields [#129580](https://github.com/elastic/elasticsearch/pull/129580) (issue: [#129508](https://github.com/elastic/elasticsearch/issues/129508))\n\nSearch:\n* Fix NPE in semantic highlighter [#128989](https://github.com/elastic/elasticsearch/pull/128989) (issue: [#128975](https://github.com/elastic/elasticsearch/issues/128975))\n* Fix inner hits + aggregations concurrency bug [#128036](https://github.com/elastic/elasticsearch/pull/128036) (issue: [#122419](https://github.com/elastic/elasticsearch/issues/122419))\n* Fix minmax normalizer handling of single-doc result sets [#128689](https://github.com/elastic/elasticsearch/pull/128689)\n* Fix missing highlighting in `match_all` queries for `semantic_text` fields [#128702](https://github.com/elastic/elasticsearch/pull/128702)\n\nSearchable Snapshots:\n* Adjust unpromotable shard refresh request validation to allow `RefreshResult.NO_REFRESH` [#129176](https://github.com/elastic/elasticsearch/pull/129176) (issue: [#129036](https://github.com/elastic/elasticsearch/issues/129036))\n\nSecurity:\n* Fix error message when changing the password for a user in the file realm [#127621](https://github.com/elastic/elasticsearch/pull/127621)\n\n\n\n## 9.0.2 [elasticsearch-9.0.2-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.2-features-enhancements]\n\nAuthentication:\n* Http proxy support in JWT realm [#127337](https://github.com/elastic/elasticsearch/pull/127337) (issue: [#114956](https://github.com/elastic/elasticsearch/issues/114956))\n\nES|QL:\n* Limit Replace function memory usage [#127924](https://github.com/elastic/elasticsearch/pull/127924)\n\n\n### Fixes [elasticsearch-9.0.2-fixes]\n\nAggregations:\n* Fix a bug in `significant_terms` [#127975](https://github.com/elastic/elasticsearch/pull/127975)\n\nAudit:\n* Handle streaming request body in audit log [#127798](https://github.com/elastic/elasticsearch/pull/127798)\n\nCodec:\n* Use new source loader when lower `docId` is accessed [#128320](https://github.com/elastic/elasticsearch/pull/128320)\n\nData streams:\n* Fix system data streams incorrectly showing up in the list of template validation problems [#128161](https://github.com/elastic/elasticsearch/pull/128161)\n\nDownsampling:\n* Downsampling does not consider passthrough fields as dimensions [#127752](https://github.com/elastic/elasticsearch/pull/127752) (issue: [#125156](https://github.com/elastic/elasticsearch/issues/125156))\n\nES|QL:\n* Consider inlinestats when having `field_caps` check for field names [#127564](https://github.com/elastic/elasticsearch/pull/127564) (issue: [#127236](https://github.com/elastic/elasticsearch/issues/127236))\n* Don't push down filters on the right hand side of an inlinejoin [#127383](https://github.com/elastic/elasticsearch/pull/127383)\n* ESQL: Avoid unintended attribute removal [#127563](https://github.com/elastic/elasticsearch/pull/127563) (issue: [#127468](https://github.com/elastic/elasticsearch/issues/127468))\n* ESQL: Fix alias removal in regex extraction with JOIN [#127687](https://github.com/elastic/elasticsearch/pull/127687) (issue: [#127467](https://github.com/elastic/elasticsearch/issues/127467))\n* ESQL: Keep `DROP` attributes when resolving field names [#127009](https://github.com/elastic/elasticsearch/pull/127009) (issue: [#126418](https://github.com/elastic/elasticsearch/issues/126418))\n* Ensure ordinal builder emit ordinal blocks [#127949](https://github.com/elastic/elasticsearch/pull/127949)\n* Fix union types in CCS [#128111](https://github.com/elastic/elasticsearch/pull/128111)\n* Fix validation NPE in Enrich and add extra @Nullable annotations [#128260](https://github.com/elastic/elasticsearch/pull/128260) (issues: [#126297](https://github.com/elastic/elasticsearch/issues/126297), [#126253](https://github.com/elastic/elasticsearch/issues/126253))\n\nGeo:\n* Added geometry validation for GEO types to exit early on invalid latitudes [#128259](https://github.com/elastic/elasticsearch/pull/128259) (issue: [#128234](https://github.com/elastic/elasticsearch/issues/128234))\n\nInfra/Core:\n* Add missing `outbound_network` entitlement to x-pack-core [#126992](https://github.com/elastic/elasticsearch/pull/126992) (issue: [#127003](https://github.com/elastic/elasticsearch/issues/127003))\n* Check hidden frames in entitlements [#127877](https://github.com/elastic/elasticsearch/pull/127877)\n\nInfra/Scripting:\n* Avoid nested docs in painless execute api [#127991](https://github.com/elastic/elasticsearch/pull/127991) (issue: [#41004](https://github.com/elastic/elasticsearch/issues/41004))\n\nMachine Learning:\n* Append all data to Chat Completion buffer [#127658](https://github.com/elastic/elasticsearch/pull/127658)\n* Fix services API Google Vertex AI Rerank location field requirement [#127856](https://github.com/elastic/elasticsearch/pull/127856)\n* Pass timeout to chat completion [#128338](https://github.com/elastic/elasticsearch/pull/128338)\n* Use internal user for internal inference action [#128327](https://github.com/elastic/elasticsearch/pull/128327)\n\nRelevance:\n* Fix: Add `NamedWriteable` for `RuleQueryRankDoc` [#128153](https://github.com/elastic/elasticsearch/pull/128153) (issue: [#126071](https://github.com/elastic/elasticsearch/issues/126071))\n\nSecurity:\n* Remove dangling spaces wherever found [#127475](https://github.com/elastic/elasticsearch/pull/127475)\n\nSnapshot/Restore:\n* Add missing entitlement to `repository-azure` [#128047](https://github.com/elastic/elasticsearch/pull/128047) (issue: [#128046](https://github.com/elastic/elasticsearch/issues/128046))\n\nTSDB:\n* Skip the validation when retrieving the index mode during reindexing a time series data stream [#127824](https://github.com/elastic/elasticsearch/pull/127824)\n\nVector Search:\n* [9.x] Revert \"Enable madvise by default for all builds\" [#127921](https://github.com/elastic/elasticsearch/pull/127921)\n\n\n\n## 9.0.1 [elasticsearch-9.0.1-release-notes]\n\n### Features and enhancements [elasticsearch-9.0.1-features-enhancements]\n\nInfra/Core:\n* Validation checks on paths allowed for 'files' entitlements. Restrict the paths we allow access to, forbidding plugins to specify/request entitlements for reading or writing to specific protected directories. [#126852](https://github.com/elastic/elasticsearch/pull/126852)\n\nIngest Node:\n* Updating tika to 2.9.3 [#127353](https://github.com/elastic/elasticsearch/pull/127353)\n\nSearch:\n* Enable sort optimization on float and `half_float` [#126342](https://github.com/elastic/elasticsearch/pull/126342)\n\nSecurity:\n* Add Issuer to failed SAML Signature validation logs when available [#126310](https://github.com/elastic/elasticsearch/pull/126310) (issue: [#111022](https://github.com/elastic/elasticsearch/issues/111022))\n\n\n### Fixes [elasticsearch-9.0.1-fixes]\n\nAggregations:\n* Rare terms aggregation false **positive** fix [#126884](https://github.com/elastic/elasticsearch/pull/126884)\n\nAllocation:\n* Fix shard size of initializing restored shard [#126783](https://github.com/elastic/elasticsearch/pull/126783) (issue: [#105331](https://github.com/elastic/elasticsearch/issues/105331))\n\nCCS:\n* Cancel expired async search task when a remote returns its results [#126583](https://github.com/elastic/elasticsearch/pull/126583)\n\nData streams:\n* [otel-data] Bump plugin version to release _metric_names_hash changes [#126850](https://github.com/elastic/elasticsearch/pull/126850)\n\nES|QL:\n* Fix count optimization with pushable union types [#127225](https://github.com/elastic/elasticsearch/pull/127225) (issue: [#127200](https://github.com/elastic/elasticsearch/issues/127200))\n* Fix join masking eval [#126614](https://github.com/elastic/elasticsearch/pull/126614)\n* Fix sneaky bug in single value query [#127146](https://github.com/elastic/elasticsearch/pull/127146)\n* No, line noise isn't a valid ip [#127527](https://github.com/elastic/elasticsearch/pull/127527)\n\nILM+SLM:\n* Fix equality bug in `WaitForIndexColorStep` [#126605](https://github.com/elastic/elasticsearch/pull/126605)\n\nInfra/CLI:\n* Use terminal reader in keystore add command [#126729](https://github.com/elastic/elasticsearch/pull/126729) (issue: [#98115](https://github.com/elastic/elasticsearch/issues/98115))\n\nInfra/Core:\n* Fix: consider case sensitiveness differences in Windows/Unix-like filesystems for files entitlements [#126990](https://github.com/elastic/elasticsearch/pull/126990) (issue: [#127047](https://github.com/elastic/elasticsearch/issues/127047))\n* Rework uniquify to not use iterators [#126889](https://github.com/elastic/elasticsearch/pull/126889) (issue: [#126883](https://github.com/elastic/elasticsearch/issues/126883))\n* Workaround max name limit imposed by Jackson 2.17 [#126806](https://github.com/elastic/elasticsearch/pull/126806)\n\nMachine Learning:\n* Adding missing `onFailure` call for Inference API start model request [#126930](https://github.com/elastic/elasticsearch/pull/126930)\n* Fix text structure NPE when fields in list have null value [#125922](https://github.com/elastic/elasticsearch/pull/125922)\n* Leverage threadpool schedule for inference api to avoid long running thread [#126858](https://github.com/elastic/elasticsearch/pull/126858) (issue: [#126853](https://github.com/elastic/elasticsearch/issues/126853))\n\nRanking:\n* Fix LTR rescorer with model alias [#126273](https://github.com/elastic/elasticsearch/pull/126273)\n* LTR score bounding [#125694](https://github.com/elastic/elasticsearch/pull/125694)\n\nSearch:\n* Fix npe when using source confirmed text query against missing field [#127414](https://github.com/elastic/elasticsearch/pull/127414)\n\nTSDB:\n* Improve resiliency of `UpdateTimeSeriesRangeService` [#126637](https://github.com/elastic/elasticsearch/pull/126637)\n\nTask Management:\n* Fix race condition in `RestCancellableNodeClient` [#126686](https://github.com/elastic/elasticsearch/pull/126686) (issue: [#88201](https://github.com/elastic/elasticsearch/issues/88201))\n\nVector Search:\n* Fix `vec_caps` to test for OS support too (on x64) [#126911](https://github.com/elastic/elasticsearch/pull/126911) (issue: [#126809](https://github.com/elastic/elasticsearch/issues/126809))\n* Fix bbq quantization algorithm but for differently distributed components [#126778](https://github.com/elastic/elasticsearch/pull/126778)\n\n\n\n## 9.0.0 [elasticsearch-900-release-notes]\n\n### Highlights [elasticsearch-900-highlights]\n\n::::{dropdown} rank_vectors field type is now available for late-interaction ranking\n[`rank_vectors`](../reference/elasticsearch/mapping-reference/rank-vectors.md) is a new field type released as an experimental feature in Elasticsearch 9.0. It is designed to be used with dense vectors and allows for late-interaction second order ranking.\n\nLate-interaction models are powerful rerankers. While their size and overall cost doesn\u2019t lend itself for HNSW indexing, utilizing them as second order reranking can provide excellent boosts in relevance. The new `rank_vectors` mapping allows for rescoring over new and novel multi-vector late-interaction models like ColBERT or ColPali.\n::::\n\n::::{dropdown} ES|QL LOOKUP JOIN is now available in technical preview\n[LOOKUP JOIN](../reference/query-languages/esql/esql-commands.md) is now available in technical preview. LOOKUP JOIN combines data from your ES|QL queries with matching records from a lookup index, enabling you to:\n\n- Enrich your search results with reference data\n- Speed up root-cause analysis and security investigations\n- Join data across indices without complex queries\n- Reduce operational overhead when correlating events\n::::\n\n::::{dropdown} The semantic_text field type is now GA\n[`semantic_text`](../reference/elasticsearch/mapping-reference/semantic-text.md) is now an official GA (generally available) feature! This field type allows you to easily set up and perform semantic search with minimal ramp up time.\n::::\n\n### Features and enhancements [elasticsearch-900-features-enhancements]\n\nAllocation:\n* Add a not-master state for desired balance [#116904](https://github.com/elastic/elasticsearch/pull/116904)\n* Only publish desired balance gauges on master [#115383](https://github.com/elastic/elasticsearch/pull/115383)\n* Reset relocation/allocation failure counter on node join/shutdown [#119968](https://github.com/elastic/elasticsearch/pull/119968)\n\nAuthentication:\n* Allow `SSHA-256` for API key credential hash [#120997](https://github.com/elastic/elasticsearch/pull/120997)\n\nAuthorization:\n* Allow kibana_system user to manage .reindexed-v8-internal.alerts indices [#118959](https://github.com/elastic/elasticsearch/pull/118959)\n* Do not fetch reserved roles from native store when Get Role API is called [#121971](https://github.com/elastic/elasticsearch/pull/121971)\n* Grant necessary Kibana application privileges to `reporting_user` role [#118058](https://github.com/elastic/elasticsearch/pull/118058)\n* Make reserved built-in roles queryable [#117581](https://github.com/elastic/elasticsearch/pull/117581)\n* [Security Solution] Add `create_index` to `kibana_system` role for index/DS `.logs-endpoint.action.responses-*` [#115241](https://github.com/elastic/elasticsearch/pull/115241)\n* [Security Solution] allows `kibana_system` user to manage .reindexed-v8-* Security Solution indices [#119054](https://github.com/elastic/elasticsearch/pull/119054)\n\nCCS:\n* Resolve/cluster allows querying for cluster info only (no index expression required) [#119898](https://github.com/elastic/elasticsearch/pull/119898)\n\nCRUD:\n* Metrics for indexing failures due to version conflicts [#119067](https://github.com/elastic/elasticsearch/pull/119067)\n* Remove INDEX_REFRESH_BLOCK after index becomes searchable [#120807](https://github.com/elastic/elasticsearch/pull/120807)\n* Suppress merge-on-recovery for older indices [#113462](https://github.com/elastic/elasticsearch/pull/113462)\n\nCluster Coordination:\n* Include `clusterApplyListener` in long cluster apply warnings [#120087](https://github.com/elastic/elasticsearch/pull/120087)\n\nData streams:\n* Add action to create index from a source index [#118890](https://github.com/elastic/elasticsearch/pull/118890)\n* Add index and reindex request settings to speed up reindex [#119780](https://github.com/elastic/elasticsearch/pull/119780)\n* Add rest endpoint for `create_from_source_index` [#119250](https://github.com/elastic/elasticsearch/pull/119250)\n* Add sanity check to `ReindexDatastreamIndexAction` [#120231](https://github.com/elastic/elasticsearch/pull/120231)\n* Adding a migration reindex cancel API [#118291](https://github.com/elastic/elasticsearch/pull/118291)\n* Adding get migration reindex status [#118267](https://github.com/elastic/elasticsearch/pull/118267)\n* Consistent mapping for OTel log and event bodies [#120547](https://github.com/elastic/elasticsearch/pull/120547)\n* Filter deprecated settings when making dest index [#120163](https://github.com/elastic/elasticsearch/pull/120163)\n* Ignore closed indices for reindex [#120244](https://github.com/elastic/elasticsearch/pull/120244)\n* Improve how reindex data stream index action handles api blocks [#120084](https://github.com/elastic/elasticsearch/pull/120084)\n* Initial work on `ReindexDatastreamIndexAction` [#116996](https://github.com/elastic/elasticsearch/pull/116996)\n* Make `requests_per_second` configurable to throttle reindexing [#120207](https://github.com/elastic/elasticsearch/pull/120207)\n* Optimized index sorting for OTel logs [#119504](https://github.com/elastic/elasticsearch/pull/119504)\n* Reindex data stream indices on different nodes [#125171](https://github.com/elastic/elasticsearch/pull/125171)\n* Report Deprecated Indices That Are Flagged To Ignore Migration Reindex As A Warning [#120629](https://github.com/elastic/elasticsearch/pull/120629)\n* Retry ILM async action after reindexing data stream [#124149](https://github.com/elastic/elasticsearch/pull/124149)\n* Set cause on create index request in create from action [#124363](https://github.com/elastic/elasticsearch/pull/124363)\n* Update data stream deprecations warnings to new format and filter searchable snapshots from response [#118562](https://github.com/elastic/elasticsearch/pull/118562)\n\nDistributed:\n* Make various alias retrieval APIs wait for cluster to unblock [#117230](https://github.com/elastic/elasticsearch/pull/117230)\n* Metrics for incremental bulk splits [#116765](https://github.com/elastic/elasticsearch/pull/116765)\n* Use Azure blob batch API to delete blobs in batches [#114566](https://github.com/elastic/elasticsearch/pull/114566)\n\nDownsampling:\n* Improve downsample performance by buffering docids and do bulk processing [#124477](https://github.com/elastic/elasticsearch/pull/124477)\n* Improve rolling up metrics [#124739](https://github.com/elastic/elasticsearch/pull/124739)\n\nEQL:\n* Add support for partial shard results [#116388](https://github.com/elastic/elasticsearch/pull/116388)\n* Optional named arguments for function in map [#118619](https://github.com/elastic/elasticsearch/pull/118619)\n\nES|QL:\n* Add ES|QL cross-cluster query telemetry collection [#119474](https://github.com/elastic/elasticsearch/pull/119474)\n* Add a `LicenseAware` interface for licensed Nodes [#118931](https://github.com/elastic/elasticsearch/pull/118931) (issue: [#117405](https://github.com/elastic/elasticsearch/issues/117405))\n* Add a `PostAnalysisAware,` distribute verification [#119798](https://github.com/elastic/elasticsearch/pull/119798)\n* Add a standard deviation aggregating function: STD_DEV [#116531](https://github.com/elastic/elasticsearch/pull/116531)\n* Add cluster level reduction [#117731](https://github.com/elastic/elasticsearch/pull/117731)\n* Add nulls support to Categorize [#117655](https://github.com/elastic/elasticsearch/pull/117655)\n* Allow skip shards with `_tier` and `_index` in ES|QL [#123728](https://github.com/elastic/elasticsearch/pull/123728)\n* Async search responses have CCS metadata while searches are running [#117265](https://github.com/elastic/elasticsearch/pull/117265)\n* Check for early termination in Driver [#118188](https://github.com/elastic/elasticsearch/pull/118188)\n* Do not serialize `EsIndex` in plan [#119580](https://github.com/elastic/elasticsearch/pull/119580)\n* ESQL - Add Match function options [#120360](https://github.com/elastic/elasticsearch/pull/120360)\n* ESQL - Allow full text functions disjunctions for non-full text functions [#120291](https://github.com/elastic/elasticsearch/pull/120291)\n* ESQL - Remove restrictions for disjunctions in full text functions [#118544](https://github.com/elastic/elasticsearch/pull/118544)\n* ESQL - enabling scoring with METADATA `_score` [#113120](https://github.com/elastic/elasticsearch/pull/113120)\n* ESQL Add esql hash function [#117989](https://github.com/elastic/elasticsearch/pull/117989)\n* ESQL Support IN operator for Date nanos [#119772](https://github.com/elastic/elasticsearch/pull/119772) (issue: [#118578](https://github.com/elastic/elasticsearch/issues/118578))\n* ESQL: Align `RENAME` behavior with `EVAL` for sequential processing [#122250](https://github.com/elastic/elasticsearch/pull/122250) (issue: [#121739](https://github.com/elastic/elasticsearch/issues/121739))\n* ESQL: CATEGORIZE as a `BlockHash` [#114317](https://github.com/elastic/elasticsearch/pull/114317)\n* ESQL: Enable async get to support formatting [#111104](https://github.com/elastic/elasticsearch/pull/111104) (issue: [#110926](https://github.com/elastic/elasticsearch/issues/110926))\n* ESQL: Enterprise license enforcement for CCS [#118102](https://github.com/elastic/elasticsearch/pull/118102)\n* ES|QL - Add scoring for full text functions disjunctions [#121793](https://github.com/elastic/elasticsearch/pull/121793)\n* ES|QL: Partial result on demand for async queries [#118122](https://github.com/elastic/elasticsearch/pull/118122)\n* Enable KQL function as a tech preview [#119730](https://github.com/elastic/elasticsearch/pull/119730)\n* Enable LOOKUP JOIN in non-snapshot builds [#121193](https://github.com/elastic/elasticsearch/pull/121193) (issue: [#121185](https://github.com/elastic/elasticsearch/issues/121185))\n* Enable node-level reduction by default [#119621](https://github.com/elastic/elasticsearch/pull/119621)\n* Enable physical plan verification [#118114](https://github.com/elastic/elasticsearch/pull/118114)\n* Ensure cluster string could be quoted [#120355](https://github.com/elastic/elasticsearch/pull/120355)\n* Esql - Support date nanos in date extract function [#120727](https://github.com/elastic/elasticsearch/pull/120727) (issue: [#110000](https://github.com/elastic/elasticsearch/issues/110000))\n* Esql - support date nanos in date format function [#120143](https://github.com/elastic/elasticsearch/pull/120143) (issue: [#109994](https://github.com/elastic/elasticsearch/issues/109994))\n* Esql Support date nanos on date diff function [#120645](https://github.com/elastic/elasticsearch/pull/120645) (issue: [#109999](https://github.com/elastic/elasticsearch/issues/109999))\n* Esql bucket function for date nanos [#118474](https://github.com/elastic/elasticsearch/pull/118474) (issue: [#118031](https://github.com/elastic/elasticsearch/issues/118031))\n* Esql compare nanos and millis [#118027](https://github.com/elastic/elasticsearch/pull/118027) (issue: [#116281](https://github.com/elastic/elasticsearch/issues/116281))\n* Esql implicit casting for date nanos [#118697](https://github.com/elastic/elasticsearch/pull/118697) (issue: [#118476](https://github.com/elastic/elasticsearch/issues/118476))\n* Expand type compatibility for match function and operator [#117555](https://github.com/elastic/elasticsearch/pull/117555)\n* Extend `TranslationAware` to all pushable expressions [#120192](https://github.com/elastic/elasticsearch/pull/120192)\n* Fix Driver status iterations and `cpuTime` [#123290](https://github.com/elastic/elasticsearch/pull/123290) (issue: [#122967](https://github.com/elastic/elasticsearch/issues/122967))\n* Hash functions [#118938](https://github.com/elastic/elasticsearch/pull/118938)\n* Implement a `MetricsAware` interface [#121074](https://github.com/elastic/elasticsearch/pull/121074)\n* Initial support for unmapped fields [#119886](https://github.com/elastic/elasticsearch/pull/119886)\n* LOOKUP JOIN using field-caps for field mapping [#117246](https://github.com/elastic/elasticsearch/pull/117246)\n* Lookup join on multiple join fields not yet supported [#118858](https://github.com/elastic/elasticsearch/pull/118858)\n* Move scoring in ES|QL out of snapshot [#120354](https://github.com/elastic/elasticsearch/pull/120354)\n* Optimize ST_EXTENT_AGG for `geo_shape` and `cartesian_shape` [#119889](https://github.com/elastic/elasticsearch/pull/119889)\n* Push down `StartsWith` and `EndsWith` functions to Lucene [#123381](https://github.com/elastic/elasticsearch/pull/123381) (issue: [#123067](https://github.com/elastic/elasticsearch/issues/123067))\n* Push down filter passed lookup join [#118410](https://github.com/elastic/elasticsearch/pull/118410)\n* Resume Driver on cancelled or early finished [#120020](https://github.com/elastic/elasticsearch/pull/120020)\n* Reuse child `outputSet` inside the plan where possible [#124611](https://github.com/elastic/elasticsearch/pull/124611)\n* Rewrite TO_UPPER/TO_LOWER comparisons [#118870](https://github.com/elastic/elasticsearch/pull/118870) (issue: [#118304](https://github.com/elastic/elasticsearch/issues/118304))\n* ST_EXTENT aggregation [#117451](https://github.com/elastic/elasticsearch/pull/117451) (issue: [#104659](https://github.com/elastic/elasticsearch/issues/104659))\n* ST_EXTENT_AGG optimize envelope extraction from doc-values for cartesian_shape [#118802](https://github.com/elastic/elasticsearch/pull/118802)\n* Smarter field caps with subscribable listener [#116755](https://github.com/elastic/elasticsearch/pull/116755)\n* Support ST_ENVELOPE and related (ST_XMIN, ST_XMAX, ST_YMIN, ST_YMAX) functions [#116964](https://github.com/elastic/elasticsearch/pull/116964) (issue: [#104875](https://github.com/elastic/elasticsearch/issues/104875))\n* Support partial sort fields in TopN pushdown [#116043](https://github.com/elastic/elasticsearch/pull/116043) (issue: [#114515](https://github.com/elastic/elasticsearch/issues/114515))\n* Support some stats on aggregate_metric_double [#120343](https://github.com/elastic/elasticsearch/pull/120343) (issue: [#110649](https://github.com/elastic/elasticsearch/issues/110649))\n* Take named parameters for identifier and pattern out of snapshot [#121850](https://github.com/elastic/elasticsearch/pull/121850)\n* Term query for ES|QL [#117359](https://github.com/elastic/elasticsearch/pull/117359)\n* Update grammar to rely on `indexPattern` instead of identifier in join target [#120494](https://github.com/elastic/elasticsearch/pull/120494)\n* `_score` should not be a reserved attribute in ES|QL [#118435](https://github.com/elastic/elasticsearch/pull/118435) (issue: [#118460](https://github.com/elastic/elasticsearch/issues/118460))\n\nEngine:\n* Defer unpromotable shard refreshes until index refresh blocks are cleared [#120642](https://github.com/elastic/elasticsearch/pull/120642)\n* POC mark read-only [#119743](https://github.com/elastic/elasticsearch/pull/119743)\n\nExperiences:\n* Integrate IBM watsonx to Inference API for re-ranking task [#117176](https://github.com/elastic/elasticsearch/pull/117176)\n\nExtract&Transform:\n* [Connector API] Support hard deletes with new URL param in delete endpoint [#120200](https://github.com/elastic/elasticsearch/pull/120200)\n* [Connector API] Support soft-deletes of connectors [#118669](https://github.com/elastic/elasticsearch/pull/118669)\n* [Connector APIs] Enforce index prefix for managed connectors [#117778](https://github.com/elastic/elasticsearch/pull/117778)\n\nGeo:\n* Optimize indexing points with index and doc values set to true [#120271](https://github.com/elastic/elasticsearch/pull/120271)\n\nHealth:\n* Increase `replica_unassigned_buffer_time` default from 3s to 5s [#112834](https://github.com/elastic/elasticsearch/pull/112834)\n\nHighlighting:\n* Add Highlighter for Semantic Text Fields [#118064](https://github.com/elastic/elasticsearch/pull/118064)\n\nILM+SLM:\n* Add a `replicate_for` option to the ILM `searchable_snapshot` action [#119003](https://github.com/elastic/elasticsearch/pull/119003)\n\nIndices APIs:\n* Add `remove_index_block` arg to `_create_from` api [#120548](https://github.com/elastic/elasticsearch/pull/120548)\n* Remove index blocks by default in `create_from` [#120643](https://github.com/elastic/elasticsearch/pull/120643)\n* Run `TransportGetComponentTemplateAction` on local node [#116868](https://github.com/elastic/elasticsearch/pull/116868)\n* Run `TransportGetComposableIndexTemplate` on local node [#119830](https://github.com/elastic/elasticsearch/pull/119830)\n* Run `TransportGetIndexTemplateAction` on local node [#119837](https://github.com/elastic/elasticsearch/pull/119837)\n* introduce new categories for deprecated resources in deprecation API [#120505](https://github.com/elastic/elasticsearch/pull/120505)\n\nInference:\n* Add version prefix to Inference Service API path [#117095](https://github.com/elastic/elasticsearch/pull/117095)\n* Remove Elastic Inference Service feature flag and deprecated setting [#120842](https://github.com/elastic/elasticsearch/pull/120842)\n* Update sparse text embeddings API route for Inference Service [#118025](https://github.com/elastic/elasticsearch/pull/118025)\n* [Elastic Inference Service] Add ElasticInferenceService Unified ChatCompletions Integration [#118871](https://github.com/elastic/elasticsearch/pull/118871)\n\nInfra/CLI:\n* Ignore _JAVA_OPTIONS [#124843](https://github.com/elastic/elasticsearch/pull/124843)\n* Strengthen encryption for elasticsearch-keystore tool to AES 256 [#119749](https://github.com/elastic/elasticsearch/pull/119749)\n\nInfra/Circuit Breakers:\n* Add link to Circuit Breaker \"Data too large\" exception message [#113561](https://github.com/elastic/elasticsearch/pull/113561)\n\nInfra/Core:\n* Add support for specifying reindexing script for system index migration [#119001](https://github.com/elastic/elasticsearch/pull/119001)\n* Bump major version for feature migration system indices [#117243](https://github.com/elastic/elasticsearch/pull/117243)\n* Change default Docker image to be based on UBI minimal instead of Ubuntu [#116739](https://github.com/elastic/elasticsearch/pull/116739)\n* Improve size limiting string message [#122427](https://github.com/elastic/elasticsearch/pull/122427)\n* Infrastructure for assuming cluster features in the next major version [#118143](https://github.com/elastic/elasticsearch/pull/118143)\n* Permanently switch from Java SecurityManager to Entitlements. The Java SecurityManager has been deprecated since Java 17, and it is now completely disabled in Java 24. In order to retain an similar level of protection, Elasticsearch implemented its own protection mechanism, Entitlements. Starting with this version, Entitlements will permanently replace the Java SecurityManager. [#124865](https://github.com/elastic/elasticsearch/pull/124865)\n* Update ASM 9.7 -> 9.7.1 to support JDK 24 [#118094](https://github.com/elastic/elasticsearch/pull/118094)\n\nInfra/Metrics:\n* Add `ensureGreen` test method for use with `adminClient` [#113425](https://github.com/elastic/elasticsearch/pull/113425)\n\nInfra/REST API:\n* A new query parameter `?include_source_on_error` was added for create / index, update and bulk REST APIs to control\nif to include the document source in the error response in case of parsing errors. The default value is `true`. [#120725](https://github.com/elastic/elasticsearch/pull/120725)\n* Indicate when errors represent timeouts [#124936](https://github.com/elastic/elasticsearch/pull/124936)\n\nInfra/Scripting:\n* Add a `mustache.max_output_size_bytes` setting to limit the length of results from mustache scripts [#114002](https://github.com/elastic/elasticsearch/pull/114002)\n\nInfra/Settings:\n* Introduce `IndexSettingDeprecatedInV8AndRemovedInV9` Setting property [#120334](https://github.com/elastic/elasticsearch/pull/120334)\n* Run `TransportClusterGetSettingsAction` on local node [#119831](https://github.com/elastic/elasticsearch/pull/119831)\n\nIngest Node:\n* Allow setting the `type` in the reroute processor [#122409](https://github.com/elastic/elasticsearch/pull/122409) (issue: [#121553](https://github.com/elastic/elasticsearch/issues/121553))\n* Optimize `IngestCtxMap` construction [#120833](https://github.com/elastic/elasticsearch/pull/120833)\n* Optimize `IngestDocMetadata` `isAvailable` [#120753](https://github.com/elastic/elasticsearch/pull/120753)\n* Optimize `IngestDocument` `FieldPath` allocation [#120573](https://github.com/elastic/elasticsearch/pull/120573)\n* Optimize some per-document hot paths in the geoip processor [#120824](https://github.com/elastic/elasticsearch/pull/120824)\n* Returning ignored fields in the simulate ingest API [#117214](https://github.com/elastic/elasticsearch/pull/117214)\n* Run `GetPipelineTransportAction` on local node [#120445](https://github.com/elastic/elasticsearch/pull/120445)\n* Run `TransportGetEnrichPolicyAction` on local node [#121124](https://github.com/elastic/elasticsearch/pull/121124)\n* Run template simulation actions on local node [#120038](https://github.com/elastic/elasticsearch/pull/120038)\n\nLicense:\n* Bump `TrialLicenseVersion` to allow starting new trial on 9.0 [#120198](https://github.com/elastic/elasticsearch/pull/120198)\n\nLogs:\n* Add LogsDB option to route on sort fields [#116687](https://github.com/elastic/elasticsearch/pull/116687)\n* Add a new index setting to skip recovery source when synthetic source is enabled [#114618](https://github.com/elastic/elasticsearch/pull/114618)\n* Configure index sorting through index settings for logsdb [#118968](https://github.com/elastic/elasticsearch/pull/118968) (issue: [#118686](https://github.com/elastic/elasticsearch/issues/118686))\n* Optimize loading mappings when determining synthetic source usage and whether host.name can be sorted on. [#120055](https://github.com/elastic/elasticsearch/pull/120055)\n\nMachine Learning:\n* Add DeBERTa-V2/V3 tokenizer [#111852](https://github.com/elastic/elasticsearch/pull/111852)\n* Add Inference Unified API for chat completions for OpenAI [#117589](https://github.com/elastic/elasticsearch/pull/117589)\n* Add Jina AI API to do inference for Embedding and Rerank models [#118652](https://github.com/elastic/elasticsearch/pull/118652)\n* Add enterprise license check for Inference API actions [#119893](https://github.com/elastic/elasticsearch/pull/119893)\n* Adding chunking settings to `IbmWatsonxService` [#114914](https://github.com/elastic/elasticsearch/pull/114914)\n* Adding default endpoint for Elastic Rerank [#117939](https://github.com/elastic/elasticsearch/pull/117939)\n* Adding endpoint creation validation for all task types to remaining services [#115020](https://github.com/elastic/elasticsearch/pull/115020)\n* Automatically rollover legacy .ml-anomalies indices [#120913](https://github.com/elastic/elasticsearch/pull/120913)\n* Automatically rollover legacy ml indices [#120405](https://github.com/elastic/elasticsearch/pull/120405)\n* Change the auditor to write via an alias [#120064](https://github.com/elastic/elasticsearch/pull/120064)\n* Check for presence of error object when validating streaming responses from integrations in the inference API [#118375](https://github.com/elastic/elasticsearch/pull/118375)\n* Check if the anomaly results index has been rolled over [#125404](https://github.com/elastic/elasticsearch/pull/125404)\n* ES|QL categorize with multiple groupings [#118173](https://github.com/elastic/elasticsearch/pull/118173)\n* Ignore failures from renormalizing buckets in read-only index [#118674](https://github.com/elastic/elasticsearch/pull/118674)\n* Inference duration and error metrics [#115876](https://github.com/elastic/elasticsearch/pull/115876)\n* Migrate stream to core error parsing [#120722](https://github.com/elastic/elasticsearch/pull/120722)\n* Remove all mentions of eis and gateway and deprecate flags that do [#116692](https://github.com/elastic/elasticsearch/pull/116692)\n* Remove deprecated sort from reindex operation within dataframe analytics procedure [#117606](https://github.com/elastic/elasticsearch/pull/117606)\n* Retry on `ClusterBlockException` on transform destination index [#118194](https://github.com/elastic/elasticsearch/pull/118194)\n* Support mTLS for the Elastic Inference Service integration inside the inference API [#119679](https://github.com/elastic/elasticsearch/pull/119679)\n* [Inference API] Add node-local rate limiting for the inference API [#120400](https://github.com/elastic/elasticsearch/pull/120400)\n* [Inference API] fix spell words: covertToString to convertToString [#119922](https://github.com/elastic/elasticsearch/pull/119922)\n\nMapping:\n* Add Optional Source Filtering to Source Loaders [#113827](https://github.com/elastic/elasticsearch/pull/113827)\n* Add option to store `sparse_vector` outside `_source` [#117917](https://github.com/elastic/elasticsearch/pull/117917)\n* Release semantic_text as a GA feature [#124669](https://github.com/elastic/elasticsearch/pull/124669)\n\nNetwork:\n* Allow http unsafe buffers by default [#116115](https://github.com/elastic/elasticsearch/pull/116115)\n* Http stream activity tracker and exceptions handling [#119564](https://github.com/elastic/elasticsearch/pull/119564)\n* Remove HTTP content copies [#117303](https://github.com/elastic/elasticsearch/pull/117303)\n* `ConnectTransportException` returns retryable BAD_GATEWAY [#118681](https://github.com/elastic/elasticsearch/pull/118681) (issue: [#118320](https://github.com/elastic/elasticsearch/issues/118320))\n\nPackaging:\n* Update bundled JDK to Java 24 [#125159](https://github.com/elastic/elasticsearch/pull/125159)\n\nRanking:\n* Add a generic `rescorer` retriever based on the search request's rescore functionality [#118585](https://github.com/elastic/elasticsearch/pull/118585) (issue: [#118327](https://github.com/elastic/elasticsearch/issues/118327))\n* Set default reranker for text similarity reranker to Elastic reranker [#120551](https://github.com/elastic/elasticsearch/pull/120551)\n\nRecovery:\n* Allow archive and searchable snapshots indices in N-2 version [#118941](https://github.com/elastic/elasticsearch/pull/118941)\n* Trigger merges after recovery [#113102](https://github.com/elastic/elasticsearch/pull/113102)\n\nReindex:\n* Change Reindexing metrics unit from millis to seconds [#115721](https://github.com/elastic/elasticsearch/pull/115721)\n\nRelevance:\n* Add Multi-Field Support for Semantic Text Fields [#120128](https://github.com/elastic/elasticsearch/pull/120128)\n\nSearch:\n* Add match support for `semantic_text` fields [#117839](https://github.com/elastic/elasticsearch/pull/117839)\n* Add support for `sparse_vector` queries against `semantic_text` fields [#118617](https://github.com/elastic/elasticsearch/pull/118617)\n* Add support for knn vector queries on `semantic_text` fields [#119011](https://github.com/elastic/elasticsearch/pull/119011)\n* Added optional parameters to QSTR ES|QL function [#121787](https://github.com/elastic/elasticsearch/pull/121787) (issue: [#120933](https://github.com/elastic/elasticsearch/issues/120933))\n* Adding linear retriever to support weighted sums of sub-retrievers [#120222](https://github.com/elastic/elasticsearch/pull/120222)\n* Address and remove any references of RestApiVersion version 7 [#117572](https://github.com/elastic/elasticsearch/pull/117572)\n* Feat: add a user-configurable timeout parameter to the `_resolve/cluster` API [#120542](https://github.com/elastic/elasticsearch/pull/120542)\n* Make semantic text part of the text family [#119792](https://github.com/elastic/elasticsearch/pull/119792)\n* Only aggregations require at least one shard request [#115314](https://github.com/elastic/elasticsearch/pull/115314)\n* Prevent data nodes from sending stack traces to coordinator when `error_trace=false` [#118266](https://github.com/elastic/elasticsearch/pull/118266)\n* Propagate status codes from shard failures appropriately [#118016](https://github.com/elastic/elasticsearch/pull/118016) (issue: [#118482](https://github.com/elastic/elasticsearch/issues/118482))\n* Upgrade to Lucene 10 [#114741](https://github.com/elastic/elasticsearch/pull/114741)\n* Upgrade to Lucene 10.1.0 [#119308](https://github.com/elastic/elasticsearch/pull/119308)\n\nSecurity:\n* Add refresh `.security` index call between security migrations [#114879](https://github.com/elastic/elasticsearch/pull/114879)\n\nSnapshot/Restore:\n* Add IMDSv2 support to `repository-s3` [#117748](https://github.com/elastic/elasticsearch/pull/117748) (issue: [#105135](https://github.com/elastic/elasticsearch/issues/105135))\n* Expose operation and request counts separately in repository stats [#117530](https://github.com/elastic/elasticsearch/pull/117530) (issue: [#104443](https://github.com/elastic/elasticsearch/issues/104443))\n* Retry `S3BlobContainer#getRegister` on all exceptions [#114813](https://github.com/elastic/elasticsearch/pull/114813)\n* Retry internally when CAS upload is throttled [GCS] [#120250](https://github.com/elastic/elasticsearch/pull/120250) (issue: [#116546](https://github.com/elastic/elasticsearch/issues/116546))\n* Track shard snapshot progress during node shutdown [#112567](https://github.com/elastic/elasticsearch/pull/112567)\n* Upgrade AWS SDK to v1.12.746 [#122431](https://github.com/elastic/elasticsearch/pull/122431)\n\nSuggesters:\n* Extensible Completion Postings Formats [#111494](https://github.com/elastic/elasticsearch/pull/111494)\n\nTSDB:\n* Increase field limit for OTel metrics to 10 000 [#120591](https://github.com/elastic/elasticsearch/pull/120591)\n\nTransform:\n* Add support for `extended_stats` [#120340](https://github.com/elastic/elasticsearch/pull/120340)\n* Auto-migrate `max_page_search_size` [#119348](https://github.com/elastic/elasticsearch/pull/119348)\n* Create upgrade mode [#117858](https://github.com/elastic/elasticsearch/pull/117858)\n* Wait while index is blocked [#119542](https://github.com/elastic/elasticsearch/pull/119542)\n* [Deprecation] Add `transform_ids` to outdated index [#120821](https://github.com/elastic/elasticsearch/pull/120821)\n\nVector Search:\n* Add new experimental `rank_vectors` mapping for late-interaction second order ranking [#118804](https://github.com/elastic/elasticsearch/pull/118804)\n* Even better(er) binary quantization [#117994](https://github.com/elastic/elasticsearch/pull/117994)\n* KNN vector rescoring for quantized vectors [#116663](https://github.com/elastic/elasticsearch/pull/116663)\n* Mark bbq indices as GA and add rolling upgrade integration tests [#121105](https://github.com/elastic/elasticsearch/pull/121105)\n* Speed up bit compared with floats or bytes script operations [#117199](https://github.com/elastic/elasticsearch/pull/117199)\n\n\n### Fixes [elasticsearch-900-fixes]\n\nAggregations:\n* Aggs: Let terms run in global ords mode no match [#124782](https://github.com/elastic/elasticsearch/pull/124782)\n* Handle with `illegalArgumentExceptions` negative values in HDR percentile aggregations [#116174](https://github.com/elastic/elasticsearch/pull/116174) (issue: [#115777](https://github.com/elastic/elasticsearch/issues/115777))\n\nAnalysis:\n* Adjust exception thrown when unable to load hunspell dict [#123743](https://github.com/elastic/elasticsearch/pull/123743)\n* Analyze API to return 400 for wrong custom analyzer [#121568](https://github.com/elastic/elasticsearch/pull/121568) (issue: [#121443](https://github.com/elastic/elasticsearch/issues/121443))\n* Non existing synonyms sets do not fail shard recovery for indices [#125659](https://github.com/elastic/elasticsearch/pull/125659) (issue: [#125603](https://github.com/elastic/elasticsearch/issues/125603))\n\nAuthentication:\n* Fix NPE for missing Content Type header in OIDC Authenticator [#126191](https://github.com/elastic/elasticsearch/pull/126191)\n\nCAT APIs:\n* Fix cat_component_templates documentation [#120487](https://github.com/elastic/elasticsearch/pull/120487)\n\nCRUD:\n* Preserve thread context when waiting for segment generation in RTG [#114623](https://github.com/elastic/elasticsearch/pull/114623)\n* Preserve thread context when waiting for segment generation in RTG [#117148](https://github.com/elastic/elasticsearch/pull/117148)\n\nData streams:\n* Avoid updating settings version in `MetadataMigrateToDataStreamService` when settings have not changed [#118704](https://github.com/elastic/elasticsearch/pull/118704)\n* Block-writes cannot be added after read-only [#119007](https://github.com/elastic/elasticsearch/pull/119007) (issue: [#119002](https://github.com/elastic/elasticsearch/issues/119002))\n* Ensure removal of index blocks does not leave key with null value [#122246](https://github.com/elastic/elasticsearch/pull/122246)\n* Fixes a invalid warning from being issued when restoring a system data stream from a snapshot. [#125881](https://github.com/elastic/elasticsearch/pull/125881)\n* Match dot prefix of migrated DS backing index with the source index [#120042](https://github.com/elastic/elasticsearch/pull/120042)\n* Refresh source index before reindexing data stream index [#120752](https://github.com/elastic/elasticsearch/pull/120752) (issue: [#120314](https://github.com/elastic/elasticsearch/issues/120314))\n* Updating `TransportRolloverAction.checkBlock` so that non-write-index blocks do not prevent data stream rollover [#122905](https://github.com/elastic/elasticsearch/pull/122905)\n* `ReindexDataStreamIndex` bug in assertion caused by reference equality [#121325](https://github.com/elastic/elasticsearch/pull/121325)\n\nDownsampling:\n* Copy metrics and `default_metric` properties when downsampling `aggregate_metric_double` [#121727](https://github.com/elastic/elasticsearch/pull/121727) (issues: [#119696](https://github.com/elastic/elasticsearch/issues/119696), [#96076](https://github.com/elastic/elasticsearch/issues/96076))\n* Improve downsample performance by avoiding to read unnecessary dimension values when downsampling. [#124451](https://github.com/elastic/elasticsearch/pull/124451)\n\nES|QL:\n* Add support to VALUES aggregation for spatial types [#122886](https://github.com/elastic/elasticsearch/pull/122886) (issue: [#122413](https://github.com/elastic/elasticsearch/issues/122413))\n* Allow the data type of `null` in filters [#118324](https://github.com/elastic/elasticsearch/pull/118324) (issue: [#116351](https://github.com/elastic/elasticsearch/issues/116351))\n* Avoid over collecting in Limit or Lucene Operator [#123296](https://github.com/elastic/elasticsearch/pull/123296)\n* Change the order of the optimization rules [#124335](https://github.com/elastic/elasticsearch/pull/124335)\n* Correct line and column numbers of missing named parameters [#120852](https://github.com/elastic/elasticsearch/pull/120852)\n* Drop null columns in text formats [#117643](https://github.com/elastic/elasticsearch/pull/117643) (issue: [#116848](https://github.com/elastic/elasticsearch/issues/116848))\n* ESQL - date nanos range bug? [#125345](https://github.com/elastic/elasticsearch/pull/125345) (issue: [#125439](https://github.com/elastic/elasticsearch/issues/125439))\n* ESQL: Fail in `AggregateFunction` when `LogicPlan` is not an `Aggregate` [#124446](https://github.com/elastic/elasticsearch/pull/124446) (issue: [#124311](https://github.com/elastic/elasticsearch/issues/124311))\n* ESQL: Remove estimated row size assertion [#122762](https://github.com/elastic/elasticsearch/pull/122762) (issue: [#121535](https://github.com/elastic/elasticsearch/issues/121535))\n* ES|QL: Fix scoring for full text functions [#124540](https://github.com/elastic/elasticsearch/pull/124540)\n* Esql - Fix lucene push down behavior when a range contains nanos and millis [#125595](https://github.com/elastic/elasticsearch/pull/125595)\n* Fix ROUND() with unsigned longs throwing in some edge cases [#119536](https://github.com/elastic/elasticsearch/pull/119536)\n* Fix TDigestState.read CB leaks [#114303](https://github.com/elastic/elasticsearch/pull/114303) (issue: [#114194](https://github.com/elastic/elasticsearch/issues/114194))\n* Fix TopN row size estimate [#119476](https://github.com/elastic/elasticsearch/pull/119476) (issue: [#106956](https://github.com/elastic/elasticsearch/issues/106956))\n* Fix `AbstractShapeGeometryFieldMapperTests` [#119265](https://github.com/elastic/elasticsearch/pull/119265) (issue: [#119201](https://github.com/elastic/elasticsearch/issues/119201))\n* Fix `ReplaceMissingFieldsWithNull` [#125764](https://github.com/elastic/elasticsearch/pull/125764) (issues: [#126036](https://github.com/elastic/elasticsearch/issues/126036), [#121754](https://github.com/elastic/elasticsearch/issues/121754), [#126030](https://github.com/elastic/elasticsearch/issues/126030))\n* Fix a bug in TOP [#121552](https://github.com/elastic/elasticsearch/pull/121552)\n* Fix async stop sometimes not properly collecting result [#121843](https://github.com/elastic/elasticsearch/pull/121843) (issue: [#121249](https://github.com/elastic/elasticsearch/issues/121249))\n* Fix attribute set equals [#118823](https://github.com/elastic/elasticsearch/pull/118823)\n* Fix double lookup failure on ESQL [#115616](https://github.com/elastic/elasticsearch/pull/115616) (issue: [#111398](https://github.com/elastic/elasticsearch/issues/111398))\n* Fix function registry concurrency issues on constructor [#123492](https://github.com/elastic/elasticsearch/pull/123492) (issue: [#123430](https://github.com/elastic/elasticsearch/issues/123430))\n* Fix queries with document level security on lookup indexes [#120617](https://github.com/elastic/elasticsearch/pull/120617) (issue: [#120509](https://github.com/elastic/elasticsearch/issues/120509))\n* Fix writing for LOOKUP status [#119296](https://github.com/elastic/elasticsearch/pull/119296) (issue: [#119086](https://github.com/elastic/elasticsearch/issues/119086))\n* Implicit numeric casting for CASE/GREATEST/LEAST [#122601](https://github.com/elastic/elasticsearch/pull/122601) (issue: [#121890](https://github.com/elastic/elasticsearch/issues/121890))\n* Lazy collection copying during node transform [#124424](https://github.com/elastic/elasticsearch/pull/124424)\n* Limit memory usage of `fold` [#118602](https://github.com/elastic/elasticsearch/pull/118602)\n* Limit size of query [#117898](https://github.com/elastic/elasticsearch/pull/117898)\n* Make `numberOfChannels` consistent with layout map by removing duplicated `ChannelSet` [#125636](https://github.com/elastic/elasticsearch/pull/125636)\n* Reduce iteration complexity for plan traversal [#123427](https://github.com/elastic/elasticsearch/pull/123427)\n* Remove redundant sorts from execution plan [#121156](https://github.com/elastic/elasticsearch/pull/121156)\n* Revert unwanted ES|QL lexer changes from PR #120354 [#120538](https://github.com/elastic/elasticsearch/pull/120538)\n* Revive inlinestats [#122257](https://github.com/elastic/elasticsearch/pull/122257)\n* Revive some more of inlinestats functionality [#123589](https://github.com/elastic/elasticsearch/pull/123589)\n* Use a must boolean statement when pushing down to Lucene when scoring is also needed [#124001](https://github.com/elastic/elasticsearch/pull/124001) (issue: [#123967](https://github.com/elastic/elasticsearch/issues/123967))\n\nEngine:\n* Hold store reference in `InternalEngine#performActionWithDirectoryReader(...)` [#123010](https://github.com/elastic/elasticsearch/pull/123010) (issue: [#122974](https://github.com/elastic/elasticsearch/issues/122974))\n\nHealth:\n* Do not recommend increasing `max_shards_per_node` [#120458](https://github.com/elastic/elasticsearch/pull/120458)\n\nHighlighting:\n* Restore V8 REST compatibility around highlight `force_source` parameter [#124873](https://github.com/elastic/elasticsearch/pull/124873)\n\nIndices APIs:\n* Add `?master_timeout` to `POST /_ilm/migrate_to_data_tiers` [#120883](https://github.com/elastic/elasticsearch/pull/120883)\n* Fix NPE in rolling over unknown target and return 404 [#125352](https://github.com/elastic/elasticsearch/pull/125352)\n* Fix broken yaml test `30_create_from` [#120662](https://github.com/elastic/elasticsearch/pull/120662)\n* Include hidden indices in `DeprecationInfoAction` [#118035](https://github.com/elastic/elasticsearch/pull/118035) (issue: [#118020](https://github.com/elastic/elasticsearch/issues/118020))\n* Preventing `ConcurrentModificationException` when updating settings for more than one index [#126077](https://github.com/elastic/elasticsearch/pull/126077)\n* Updates the deprecation info API to not warn about system indices and data streams [#122951](https://github.com/elastic/elasticsearch/pull/122951)\n\nInference:\n* [Inference API] Put back legacy EIS URL setting [#121207](https://github.com/elastic/elasticsearch/pull/121207)\n\nInfra/Core:\n* Epoch Millis Rounding Down and Not Up 2 [#118353](https://github.com/elastic/elasticsearch/pull/118353)\n* Fix system data streams to be restorable from a snapshot [#124651](https://github.com/elastic/elasticsearch/pull/124651) (issue: [#89261](https://github.com/elastic/elasticsearch/issues/89261))\n* Have create index return a bad request on poor formatting [#123761](https://github.com/elastic/elasticsearch/pull/123761)\n* Include data streams when converting an existing resource to a system resource [#121392](https://github.com/elastic/elasticsearch/pull/121392)\n* System Index Migration Failure Results in a Non-Recoverable State [#122326](https://github.com/elastic/elasticsearch/pull/122326)\n* System data streams are not being upgraded in the feature migration API [#124884](https://github.com/elastic/elasticsearch/pull/124884) (issue: [#122949](https://github.com/elastic/elasticsearch/issues/122949))\n* Wrap jackson exception on malformed json string [#114445](https://github.com/elastic/elasticsearch/pull/114445) (issue: [#114142](https://github.com/elastic/elasticsearch/issues/114142))\n\nInfra/Logging:\n* Move `SlowLogFieldProvider` instantiation to node construction [#117949](https://github.com/elastic/elasticsearch/pull/117949)\n\nInfra/Metrics:\n* Make `randomInstantBetween` always return value in range [minInstant, `maxInstant]` [#114177](https://github.com/elastic/elasticsearch/pull/114177)\n\nInfra/Plugins:\n* Remove unnecessary entitlement [#120959](https://github.com/elastic/elasticsearch/pull/120959)\n* Restrict agent entitlements to the system classloader unnamed module [#120546](https://github.com/elastic/elasticsearch/pull/120546)\n\nInfra/REST API:\n* Fixed a `NullPointerException` in `_capabilities` API when the `path` parameter is null. [#113413](https://github.com/elastic/elasticsearch/pull/113413) (issue: [#113413](https://github.com/elastic/elasticsearch/issues/113413))\n\nInfra/Scripting:\n* Register mustache size limit setting [#119291](https://github.com/elastic/elasticsearch/pull/119291)\n\nInfra/Settings:\n* Don't allow secure settings in YML config (109115) [#115779](https://github.com/elastic/elasticsearch/pull/115779) (issue: [#109115](https://github.com/elastic/elasticsearch/issues/109115))\n\nIngest Node:\n* Add warning headers for ingest pipelines containing special characters [#114837](https://github.com/elastic/elasticsearch/pull/114837) (issue: [#104411](https://github.com/elastic/elasticsearch/issues/104411))\n* Fix geoip databases index access after system feature migration [#121196](https://github.com/elastic/elasticsearch/pull/121196)\n* Fix geoip databases index access after system feature migration (again) [#122938](https://github.com/elastic/elasticsearch/pull/122938)\n* Fix geoip databases index access after system feature migration (take 3) [#124604](https://github.com/elastic/elasticsearch/pull/124604)\n\nLogs:\n* Always check if index mode is logsdb [#116922](https://github.com/elastic/elasticsearch/pull/116922)\n\nMachine Learning:\n* Add `ElasticInferenceServiceCompletionServiceSettings` [#123155](https://github.com/elastic/elasticsearch/pull/123155)\n* Add enterprise license check to inference action for semantic text fields [#122293](https://github.com/elastic/elasticsearch/pull/122293)\n* Avoid potentially throwing calls to Task#getDescription in model download [#124527](https://github.com/elastic/elasticsearch/pull/124527)\n* Change format for Unified Chat [#121396](https://github.com/elastic/elasticsearch/pull/121396)\n* Fix `AlibabaCloudSearchCompletionAction` not accepting `ChatCompletionInputs` [#125023](https://github.com/elastic/elasticsearch/pull/125023)\n* Fix get all inference endponts not returning multiple endpoints sharing model deployment [#121821](https://github.com/elastic/elasticsearch/pull/121821)\n* Fix serialising the inference update request [#122278](https://github.com/elastic/elasticsearch/pull/122278)\n* Fixing bedrock event executor terminated cache issue [#118177](https://github.com/elastic/elasticsearch/pull/118177) (issue: [#117916](https://github.com/elastic/elasticsearch/issues/117916))\n* Fixing bug setting index when parsing Google Vertex AI results [#117287](https://github.com/elastic/elasticsearch/pull/117287)\n* Retry on streaming errors [#123076](https://github.com/elastic/elasticsearch/pull/123076)\n* Set Connect Timeout to 5s [#123272](https://github.com/elastic/elasticsearch/pull/123272)\n* Set default similarity for Cohere model to cosine [#125370](https://github.com/elastic/elasticsearch/pull/125370) (issue: [#122878](https://github.com/elastic/elasticsearch/issues/122878))\n* Updating Inference Update API documentation to have the correct PUT method [#121048](https://github.com/elastic/elasticsearch/pull/121048)\n* Wait for up to 2 seconds for yellow status before starting search [#115938](https://github.com/elastic/elasticsearch/pull/115938) (issues: [#107777](https://github.com/elastic/elasticsearch/issues/107777), [#105955](https://github.com/elastic/elasticsearch/issues/105955), [#107815](https://github.com/elastic/elasticsearch/issues/107815), [#112191](https://github.com/elastic/elasticsearch/issues/112191))\n* [Inference API] Fix output stream ordering in `InferenceActionProxy` [#124225](https://github.com/elastic/elasticsearch/pull/124225)\n* [Inference API] Fix unique ID message for inference ID matches trained model ID [#119543](https://github.com/elastic/elasticsearch/pull/119543) (issue: [#111312](https://github.com/elastic/elasticsearch/issues/111312))\n\nMapping:\n* Avoid serializing empty `_source` fields in mappings [#122606](https://github.com/elastic/elasticsearch/pull/122606)\n* Enable New Semantic Text Format Only On Newly Created Indices [#121556](https://github.com/elastic/elasticsearch/pull/121556)\n* Fix Semantic Text 8.x Upgrade Bug [#125446](https://github.com/elastic/elasticsearch/pull/125446)\n* Fix propagation of dynamic mapping parameter when applying `copy_to` [#121109](https://github.com/elastic/elasticsearch/pull/121109) (issue: [#113049](https://github.com/elastic/elasticsearch/issues/113049))\n* Fix realtime get of nested fields with synthetic source [#119575](https://github.com/elastic/elasticsearch/pull/119575) (issue: [#119553](https://github.com/elastic/elasticsearch/issues/119553))\n* Merge field mappers when updating mappings with [subobjects:false] [#120370](https://github.com/elastic/elasticsearch/pull/120370) (issue: [#120216](https://github.com/elastic/elasticsearch/issues/120216))\n* Merge template mappings properly during validation [#124784](https://github.com/elastic/elasticsearch/pull/124784) (issue: [#123372](https://github.com/elastic/elasticsearch/issues/123372))\n* Tweak `copy_to` handling in synthetic `_source` to account for nested objects [#120974](https://github.com/elastic/elasticsearch/pull/120974) (issue: [#120831](https://github.com/elastic/elasticsearch/issues/120831))\n\nNetwork:\n* Remove ChunkedToXContentBuilder [#119310](https://github.com/elastic/elasticsearch/pull/119310) (issue: [#118647](https://github.com/elastic/elasticsearch/issues/118647))\n\nRanking:\n* Fix LTR query feature with phrases (and two-phase) queries [#125103](https://github.com/elastic/elasticsearch/pull/125103)\n\nSearch:\n* Catch and handle disconnect exceptions in search [#115836](https://github.com/elastic/elasticsearch/pull/115836)\n* Fix leak in `DfsQueryPhase` and introduce search disconnect stress test [#116060](https://github.com/elastic/elasticsearch/pull/116060) (issue: [#115056](https://github.com/elastic/elasticsearch/issues/115056))\n* Fix/QueryBuilderBWCIT_muted_test [#117831](https://github.com/elastic/elasticsearch/pull/117831)\n* Handle long overflow in dates [#124048](https://github.com/elastic/elasticsearch/pull/124048) (issue: [#112483](https://github.com/elastic/elasticsearch/issues/112483))\n* Handle search timeout in `SuggestPhase` [#122357](https://github.com/elastic/elasticsearch/pull/122357) (issue: [#122186](https://github.com/elastic/elasticsearch/issues/122186))\n* In this pr, a 400 error is returned when _source / _seq_no / _feature / _nested_path / _field_names is requested, rather a 5xx [#117229](https://github.com/elastic/elasticsearch/pull/117229)\n* Inconsistency in the _analyzer api when the index is not included [#115930](https://github.com/elastic/elasticsearch/pull/115930)\n* Let MLTQuery throw IAE when no analyzer is set [#124662](https://github.com/elastic/elasticsearch/pull/124662) (issue: [#124562](https://github.com/elastic/elasticsearch/issues/124562))\n* Load `FieldInfos` from store if not yet initialised through a refresh on `IndexShard` [#125650](https://github.com/elastic/elasticsearch/pull/125650) (issue: [#125483](https://github.com/elastic/elasticsearch/issues/125483))\n* Log stack traces on data nodes before they are cleared for transport [#125732](https://github.com/elastic/elasticsearch/pull/125732)\n* Minor-Fixes Support 7x segments as archive in 8x / 9x [#125666](https://github.com/elastic/elasticsearch/pull/125666)\n* Re-enable parallel collection for field sorted top hits [#125916](https://github.com/elastic/elasticsearch/pull/125916)\n* Remove duplicate code in ESIntegTestCase [#120799](https://github.com/elastic/elasticsearch/pull/120799)\n* SearchStatesIt failures reported by CI [#117618](https://github.com/elastic/elasticsearch/pull/117618) (issues: [#116617](https://github.com/elastic/elasticsearch/issues/116617), [#116618](https://github.com/elastic/elasticsearch/issues/116618))\n* Skip fetching _inference_fields field in legacy semantic_text format [#121720](https://github.com/elastic/elasticsearch/pull/121720)\n* Support indices created in ESv6 and updated in ESV7 using different LuceneCodecs as archive in current version. [#119503](https://github.com/elastic/elasticsearch/pull/119503) (issue: [#117042](https://github.com/elastic/elasticsearch/issues/117042))\n* Test/107515 restore template with match only text mapper it fail [#120392](https://github.com/elastic/elasticsearch/pull/120392) (issue: [#107515](https://github.com/elastic/elasticsearch/issues/107515))\n* Updated Date Range to Follow Documentation When Assuming Missing Values [#112258](https://github.com/elastic/elasticsearch/pull/112258) (issue: [#111484](https://github.com/elastic/elasticsearch/issues/111484))\n* `CrossClusterIT` `testCancel` failure [#117750](https://github.com/elastic/elasticsearch/pull/117750) (issue: [#108061](https://github.com/elastic/elasticsearch/issues/108061))\n* `SearchServiceTests.testParseSourceValidation` failure [#117963](https://github.com/elastic/elasticsearch/pull/117963)\n\nSnapshot/Restore:\n* Add undeclared Azure settings, modify test to exercise them [#118634](https://github.com/elastic/elasticsearch/pull/118634)\n* Fork post-snapshot-delete cleanup off master thread [#122731](https://github.com/elastic/elasticsearch/pull/122731)\n* Retry throttled snapshot deletions [#113237](https://github.com/elastic/elasticsearch/pull/113237)\n* This PR fixes a bug whereby partial snapshots of system datastreams could be used to restore system features. [#124931](https://github.com/elastic/elasticsearch/pull/124931)\n* Use the system index descriptor in the snapshot blob cache cleanup task [#120937](https://github.com/elastic/elasticsearch/pull/120937) (issue: [#120518](https://github.com/elastic/elasticsearch/issues/120518))\n\nStore:\n* Do not capture `ClusterChangedEvent` in `IndicesStore` call to #onClusterStateShardsClosed [#120193](https://github.com/elastic/elasticsearch/pull/120193)\n\nSuggesters:\n* Return an empty suggestion when suggest phase times out [#122575](https://github.com/elastic/elasticsearch/pull/122575) (issue: [#122548](https://github.com/elastic/elasticsearch/issues/122548))\n\nTransform:\n* If the Transform is configured to write to an alias as its destination index, when the delete_dest_index parameter is set to true, then the Delete API will now delete the write index backing the alias [#122074](https://github.com/elastic/elasticsearch/pull/122074) (issue: [#121913](https://github.com/elastic/elasticsearch/issues/121913))\n\nVector Search:\n* Apply default k for knn query eagerly [#118774](https://github.com/elastic/elasticsearch/pull/118774)\n* Fix `bbq_hnsw` merge file cleanup on random IO exceptions [#119691](https://github.com/elastic/elasticsearch/pull/119691) (issue: [#119392](https://github.com/elastic/elasticsearch/issues/119392))\n* Knn vector rescoring to sort score docs [#122653](https://github.com/elastic/elasticsearch/pull/122653) (issue: [#119711](https://github.com/elastic/elasticsearch/issues/119711))\n* Return appropriate error on null dims update instead of npe [#125716](https://github.com/elastic/elasticsearch/pull/125716)\n\nWatcher:\n* Watcher history index has too many indexed fields - [#117701](https://github.com/elastic/elasticsearch/pull/117701) (issue: [#71479](https://github.com/elastic/elasticsearch/issues/71479))",
              "filename": "elasticsearch-main/docs/release-notes/index.md"
            }
          ],
          "tool_call_id": "call_MbwAObBSUTn2Y8x38vKL2tBZ",
          "metadata": null,
          "timestamp": "2025-10-03T01:01:29.391061+00:00",
          "part_kind": "tool-return"
        }
      ],
      "instructions": "You are a helpful assistant that answers questions about documentation.  \n\nUse the search tool to find relevant information from the repository before answering questions.  \n\nIf you can find specific information through search, use it to provide accurate answers.\n\nAlways include references by citing the filename of the source material you used.\nReplace it with the full path to the GitHub repository:\n\"https://github.com/elastic/elasticsearch/blob/main/\"\nFormat: [LINK TITLE](FULL_GITHUB_LINK)\n\n\nIf the search doesn't return relevant results, let the user know and provide general guidance.",
      "kind": "request"
    },
    {
      "parts": [
        {
          "content": "Breaking changes in the Elasticsearch REST API can significantly impact applications that rely on it, as these changes may disrupt normal operations. Developers need to be aware of such changes to mitigate potential issues. Here\u2019s an overview of the impact and how developers can prepare:\n\n### Impact of Breaking Changes\n\n1. **API Contracts**: Breaking changes may include modifications to URL paths, parameters, and request/response formats. These affect how clients interact with the Elasticsearch server, potentially leading to failed requests and errors if the clients do not handle the new expectations properly. For example, a removed parameter could cause requests to break if the client still attempts to use it.\n\n2. **Deprecation Cycle**: Elasticsearch typically provides a deprecation cycle before a breaking change is enacted. This includes warnings in the logs and documentation that specify what will be removed or changed, allowing developers to adjust their applications accordingly. However, if developers do not track these warnings, they risk encountering issues after upgrading to a new version.\n\n3. **Compatibility with Older Versions**: Major version upgrades may entail a need to upgrade clients as well. Without compatibility mechanisms, applications that continue to use older versions of the API will likely fail to function as intended when connecting to upgraded Elasticsearch instances.\n\n### Preparing for Breaking Changes\n\n1. **Monitor Deprecation Logs**: Developers should routinely check Elasticsearch deprecation logs to identify features or parameters that might be deprecated. This proactive monitoring allows them to make necessary adjustments before upgrading.\n\n2. **Utilize REST API Compatibility**: Elasticsearch provides a mechanism whereby developers can indicate compatibility with older API versions using specific HTTP headers. For example, by setting the `Accept` or `Content-Type` headers to specify `compatible-with=7`, clients can make requests that are compatible with earlier API behaviors. This can temporarily buffer changes during transitions to newer versions.\n\n   Example headers:\n   ```http\n   Accept: application/vnd.elasticsearch+json; compatible-with=7\n   Content-Type: application/vnd.elasticsearch+json; compatible-with=7\n   ```\n\n3. **Testing and Validation**: Before deploying an upgrade to production, it's recommended to test compatibility with existing applications. This includes running your applications against a staging environment that mirrors the new version of Elasticsearch.\n\n4. **Check Release Notes**: Regularly review the [Elasticsearch release notes](https://www.elastic.co/guide/en/elasticsearch/reference/current/es-release-notes.html) to stay informed about new features, enhancements, and particularly any breaking changes.\n\n5. **Refactor Code as Needed**: Refactoring code to adapt to new APIs or deprecations indicated in release notes can prevent issues after the upgrade. This includes replacing any deprecated utility with its recommended alternatives.\n\nBy following these practices, developers can better prepare for and mitigate the impact of breaking changes in Elasticsearch's REST API. For further details, please refer to the associated documentation: [REST API compatibility guide](https://github.com/elastic/elasticsearch/blob/main/rest_api_compatibility.md) and the [Elasticsearch breaking changes documentation](https://github.com/elastic/elasticsearch/blob/main/docs/reference/current/breaking-changes.md).",
          "id": null,
          "part_kind": "text"
        }
      ],
      "usage": {
        "input_tokens": 67547,
        "cache_write_tokens": 0,
        "cache_read_tokens": 0,
        "output_tokens": 630,
        "input_audio_tokens": 0,
        "cache_audio_read_tokens": 0,
        "output_audio_tokens": 0,
        "details": {
          "accepted_prediction_tokens": 0,
          "audio_tokens": 0,
          "reasoning_tokens": 0,
          "rejected_prediction_tokens": 0
        }
      },
      "model_name": "gpt-4o-mini-2024-07-18",
      "timestamp": "2025-10-03T01:01:30+00:00",
      "kind": "response",
      "provider_name": "openai",
      "provider_details": {
        "finish_reason": "stop"
      },
      "provider_response_id": "chatcmpl-CMOSo5iWmksejVzfuBJC1JIztpXsJ",
      "finish_reason": "stop"
    }
  ],
  "source": "ai-generated"
}