{
  "agent_name": "es_agent_v2",
  "system_prompt": "You are a helpful assistant that answers questions about documentation.  \n\nUse the search tool to find relevant information from the repository before answering questions.  \n\nIf you can find specific information through search, use it to provide accurate answers.\n\nAlways include references by citing the filename of the source material you used.\nReplace it with the full path to the GitHub repository:\n\"https://github.com/elastic/elasticsearch/blob/main/\"\nFormat: [LINK TITLE](FULL_GITHUB_LINK)\n\n\nIf the search doesn't return relevant results, let the user know and provide general guidance.",
  "provider": "openai",
  "model": "gpt-4o-mini",
  "tools": [
    "search"
  ],
  "messages": [
    {
      "parts": [
        {
          "content": "What command do I use to set the number of replicas for an index in Elasticsearch?",
          "timestamp": "2025-10-03T01:07:03.546761+00:00",
          "part_kind": "user-prompt"
        }
      ],
      "instructions": "You are a helpful assistant that answers questions about documentation.  \n\nUse the search tool to find relevant information from the repository before answering questions.  \n\nIf you can find specific information through search, use it to provide accurate answers.\n\nAlways include references by citing the filename of the source material you used.\nReplace it with the full path to the GitHub repository:\n\"https://github.com/elastic/elasticsearch/blob/main/\"\nFormat: [LINK TITLE](FULL_GITHUB_LINK)\n\n\nIf the search doesn't return relevant results, let the user know and provide general guidance.",
      "kind": "request"
    },
    {
      "parts": [
        {
          "tool_name": "search",
          "args": "{\"query\":\"set number of replicas for an index\"}",
          "tool_call_id": "call_JrCqGLB7Tny1OPzUtZkH1hpZ",
          "part_kind": "tool-call"
        }
      ],
      "usage": {
        "input_tokens": 218,
        "cache_write_tokens": 0,
        "cache_read_tokens": 0,
        "output_tokens": 19,
        "input_audio_tokens": 0,
        "cache_audio_read_tokens": 0,
        "output_audio_tokens": 0,
        "details": {
          "accepted_prediction_tokens": 0,
          "audio_tokens": 0,
          "reasoning_tokens": 0,
          "rejected_prediction_tokens": 0
        }
      },
      "model_name": "gpt-4o-mini-2024-07-18",
      "timestamp": "2025-10-03T01:07:04+00:00",
      "kind": "response",
      "provider_name": "openai",
      "provider_details": {
        "finish_reason": "tool_calls"
      },
      "provider_response_id": "chatcmpl-CMOYC4HxKbjLUy8MmlZX49FtukKJE",
      "finish_reason": "tool_call"
    },
    {
      "parts": [
        {
          "tool_name": "search",
          "content": [
            {
              "mapped_pages": [
                "https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-indexing-pressure.html"
              ],
              "navigation_title": "Indexing pressure",
              "content": "# Indexing pressure settings [index-modules-indexing-pressure]\n\nIndexing documents into {{es}} introduces system load in the form of memory and CPU load. Each indexing operation includes coordinating, primary, and replica stages. These stages can be performed across multiple nodes in a cluster.\n\nIndexing pressure can build up through external operations, such as indexing requests, or internal mechanisms, such as recoveries and {{ccr}}. If too much indexing work is introduced into the system, the cluster can become saturated. This can adversely impact other operations, such as search, cluster coordination, and background processing.\n\nTo prevent these issues, {{es}} internally monitors indexing load. When the load exceeds certain limits, new indexing work is rejected\n\n\n## Indexing stages [indexing-stages]\n\nExternal indexing operations go through three stages: coordinating, primary, and replica. See [Basic write model](docs-content://deploy-manage/distributed-architecture/reading-and-writing-documents.md#basic-write-model).\n\n\n## Memory limits [memory-limits]\n\nThe `indexing_pressure.memory.limit` node setting restricts the number of bytes available for outstanding indexing requests. This setting defaults to 10% of the heap.\n\nAt the beginning of each indexing stage, {{es}} accounts for the bytes consumed by an indexing request. This accounting is only released at the end of the indexing stage. This means that upstream stages will account for the request overheard until all downstream stages are complete. For example, the coordinating request will remain accounted for until primary and replica stages are complete. The primary request will remain accounted for until each in-sync replica has responded to enable replica retries if necessary.\n\nA node will start rejecting new indexing work at the coordinating or primary stage when the number of outstanding coordinating, primary, and replica indexing bytes exceeds the configured limit.\n\nA node will start rejecting new indexing work at the replica stage when the number of outstanding replica indexing bytes exceeds 1.5x the configured limit. This design means that as indexing pressure builds on nodes, they will naturally stop accepting coordinating and primary work in favor of outstanding replica work.\n\nThe `indexing_pressure.memory.limit` setting\u2019s 10% default limit is generously sized. You should only change it after careful consideration. Only indexing requests contribute to this limit. This means there is additional indexing overhead (buffers, listeners, etc) which also require heap space. Other components of {{es}} also require memory. Setting this limit too high can deny operating memory to other operations and components.\n\n\n## Monitoring [indexing-pressure-monitoring]\n\nYou can use the [node stats API](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-nodes-stats) to retrieve indexing pressure metrics.\n\n\n## Indexing pressure settings [indexing-pressure-settings]\n\n`indexing_pressure.memory.limit` ![logo cloud](https://doc-icons.s3.us-east-2.amazonaws.com/logo_cloud.svg \"Supported on {{ess}}\")\n:   Number of outstanding bytes that may be consumed by indexing requests. When this limit is reached or exceeded, the node will reject new coordinating and primary operations. When replica operations consume 1.5x this limit, the node will reject new replica operations. Defaults to 10% of the heap.",
              "filename": "elasticsearch-main/docs/reference/elasticsearch/index-settings/pressure.md"
            },
            {
              "mapped_pages": [
                "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-allocate.html"
              ],
              "content": "# Allocate [ilm-allocate]\n\nPhases allowed: warm, cold.\n\nUpdates the index settings to change which nodes are allowed to host the index shards and change the number of replicas.\n\nThe allocate action is not allowed in the hot phase. The initial allocation for the index must be done manually or via [index templates](docs-content://manage-data/data-store/templates.md).\n\nYou can configure this action to modify both the allocation rules and number of replicas, only the allocation rules, or only the number of replicas. For more information about how {{es}} uses replicas for scaling, see [Get ready for production](docs-content://deploy-manage/production-guidance/elasticsearch-in-production-environments.md). See [Index-level shard allocation filtering](/reference/elasticsearch/index-settings/shard-allocation.md) for more information about controlling where {{es}} allocates shards of a particular index.\n\n## Options [ilm-allocate-options]\n\nYou must specify the number of replicas or at least one `include`, `exclude`, or `require` option. An empty allocate action is invalid.\n\nFor more information about using custom attributes for shard allocation, refer to [](/reference/elasticsearch/index-settings/shard-allocation.md).\n\n`number_of_replicas`\n:   (Optional, integer) Number of replicas to assign to the index.\n\n`total_shards_per_node`\n:   (Optional, integer) The maximum number of shards for the index on a single {{es}} node. A value of `-1` is interpreted as unlimited. See [total shards](/reference/elasticsearch/index-settings/total-shards-per-node.md).\n\n`include`\n:   (Optional, object) Assigns an index to nodes that have at least *one* of the specified custom attributes.\n\n`exclude`\n:   (Optional, object) Assigns an index to nodes that have *none* of the specified custom attributes.\n\n`require`\n:   (Optional, object) Assigns an index to nodes that have *all* of the specified custom attributes.\n\n\n## Example [ilm-allocate-ex]\n\nThe allocate action in the following policy changes the index\u2019s number of replicas to `2`. No more than 200 shards for the index will be placed on any single node. Otherwise the index allocation rules are not changed.\n\n```console\nPUT _ilm/policy/my_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"warm\": {\n        \"actions\": {\n          \"allocate\" : {\n            \"number_of_replicas\" : 2,\n            \"total_shards_per_node\" : 200\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n### Assign index to nodes using a custom attribute [ilm-allocate-assign-index-attribute-ex]\n\nThe allocate action in the following policy assigns the index to nodes that have a `box_type` of *hot* or *warm*.\n\nTo designate a node\u2019s `box_type`, you set a custom attribute in the node configuration. For example, set `node.attr.box_type: hot` in `elasticsearch.yml`. For more information, refer to [](/reference/elasticsearch/index-settings/shard-allocation.md#index-allocation-filters).\n\n```console\nPUT _ilm/policy/my_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"warm\": {\n        \"actions\": {\n          \"allocate\" : {\n            \"include\" : {\n              \"box_type\": \"hot,warm\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n\n### Assign index to nodes based on multiple attributes [ilm-allocate-assign-index-multi-attribute-ex]\n\nThe allocate action can also assign indices to nodes based on multiple node attributes. The following action assigns indices based on the `box_type` and `storage` node attributes.\n\n```console\nPUT _ilm/policy/my_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"cold\": {\n        \"actions\": {\n          \"allocate\" : {\n            \"require\" : {\n              \"box_type\": \"cold\",\n              \"storage\": \"high\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n\n### Assign index to a specific node and update replica settings [ilm-allocate-assign-index-node-ex]\n\nThe allocate action in the following policy updates the index to have one replica per shard and be allocated to nodes that have a `box_type` of *cold*.\n\nTo designate a node\u2019s `box_type`, you set a custom attribute in the node configuration. For example, set `node.attr.box_type: cold` in `elasticsearch.yml`. For more information, refer to [](/reference/elasticsearch/index-settings/shard-allocation.md#index-allocation-filters).\n\n```console\nPUT _ilm/policy/my_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"warm\": {\n        \"actions\": {\n          \"allocate\" : {\n            \"number_of_replicas\": 1,\n            \"require\" : {\n              \"box_type\": \"cold\"\n            }\n        }\n        }\n      }\n    }\n  }\n}\n```",
              "filename": "elasticsearch-main/docs/reference/elasticsearch/index-lifecycle-actions/ilm-allocate.md"
            },
            {
              "mapped_pages": [
                "https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html"
              ],
              "navigation_title": "General",
              "applies_to": {
                "stack": "all"
              },
              "content": "# General index settings [index-modules]\n\n:::{include} _snippets/serverless-availability.md\n:::\n\nThis document contains the static and dynamic index settings that are not associated with any specific index module.\n\n## Static index settings [_static_index_settings]\n\nThe following list contains all *static* index settings that are not associated with any specific index module:\n\n$$$index-number-of-shards$$$\n\n`index.number_of_shards`\n:   The number of primary shards that an index should have. Defaults to `1`. This setting can only be set at index creation time. It cannot be changed on a closed index.\n\n    ::::{note}\n    The number of shards are limited to `1024` per index. This limitation is a safety limit to prevent accidental creation of indices that can destabilize a cluster due to resource allocation. The limit can be modified by specifying `export ES_JAVA_OPTS=\"-Des.index.max_number_of_shards=128\"` system property on every node that is part of the cluster.\n    ::::\n\n\n$$$index-number-of-routing-shards$$$\n\n`index.number_of_routing_shards`\n:   :::::{admonition}\nInteger value used with [`index.number_of_shards`](index-modules.md#index-number-of-shards) to route documents to a primary shard. See [`_routing` field](/reference/elasticsearch/mapping-reference/mapping-routing-field.md).\n\n{{es}} uses this value when splitting an index. For example, a 5 shard index with `number_of_routing_shards` set to `30` (`5 x 2 x 3`) could be split by a factor of `2` or `3`. In other words, it could be split as follows:\n\n* `5` \u2192 `10` \u2192 `30`  (split by 2, then by 3)\n* `5` \u2192 `15` \u2192 `30` (split by 3, then by 2)\n* `5` \u2192 `30` (split by 6)\n\nThis setting\u2019s default value depends on the number of primary shards in the index. The default is designed to allow you to split by factors of 2 up to a maximum of 1024 shards.\n\n::::{note}\nIn {{es}} 7.0.0 and later versions, this setting affects how documents are distributed across shards. When reindexing an older index with custom routing, you must explicitly set `index.number_of_routing_shards` to maintain the same document distribution. See the [related breaking change](https://www.elastic.co/guide/en/elasticsearch/reference/7.0/breaking-changes-7.0.html#_document_distribution_changes).\n::::\n\n\n:::::\n\n\n\n$$$index-codec$$$ `index.codec` {applies_to}`serverless: all`\n:   The `default` value compresses stored data with LZ4 compression, but this can be set to `best_compression` which uses [ZSTD](https://en.wikipedia.org/wiki/Zstd) for a higher compression ratio, at the expense of slower stored fields read performance. If you are updating the compression type, the new one will be applied after segments are merged. Segment merging can be forced using [force merge](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge). Experiments with indexing log datasets have shown that `best_compression` gives up to ~28% lower storage usage and similar indexing throughput (sometimes a bit slower or faster depending on other used options) compared to `default` while affecting get by id latencies between ~10% and ~33%. The higher get by id latencies is not a concern for many use cases like logging or metrics, since these don\u2019t really rely on get by id functionality (Get APIs or searching by _id).\n\n$$$index-mode-setting$$$ `index.mode` {applies_to}`serverless: all`\n:   The `index.mode` setting is used to control settings applied in specific domains like ingestion of time series data or logs. Different mutually exclusive modes exist, which are used to apply settings or default values controlling indexing of documents, sorting and other parameters whose value affects indexing or query performance.\n\n        **Example**\n\n      ```console\n      PUT my-index-000001\n      {\n        \"settings\": {\n          \"index\":{\n            \"mode\":\"standard\" # This index uses the `standard` index mode\n          }\n        }\n      }\n      ```\n    **Supported values**\n\n    The `index.mode` setting supports the following values:\n       - `null`:   Default value (same as `standard`).\n       -  `standard`:   Standard indexing with default settings.\n       -  `lookup`: Index that can be used for [LOOKUP JOIN](/reference/query-languages/esql/esql-lookup-join.md) in ES|QL. Limited to 1 shard.\n       - `time_series`:   *(data streams only)* Index mode optimized for storage of metrics. For more information, see [Time series index settings](time-series.md).\n       - `logsdb`: *(data streams only)* Index mode optimized for [logs](docs-content://manage-data/data-store/data-streams/logs-data-stream.md).\n\n$$$routing-partition-size$$$ `index.routing_partition_size`\n:   The number of shards a custom routing value can go to. Defaults to 1 and can only be set at index creation time. This value must be less than the `index.number_of_routing_shards` unless the `index.number_of_routing_shards` value is also 1. for more details about how this setting is used, refer to [](/reference/elasticsearch/mapping-reference/mapping-routing-field.md#routing-index-partition).\n\n$$$ccr-index-soft-deletes$$$\n\n`index.soft_deletes.enabled`\n:   :::{admonition} Deprecated in 7.6.0\n    This setting was deprecated in 7.6.0.\n    :::\n\n    Indicates whether soft deletes are enabled on the index. Soft deletes can only be configured at index creation and only on indices created on or after {{es}} 6.5.0. Defaults to `true`.\n\n$$$ccr-index-soft-deletes-retention-period$$$\n\n`index.soft_deletes.retention_lease.period`\n:   The maximum period to retain a shard history retention lease before it is considered expired. Shard history retention leases ensure that soft deletes are retained during merges on the Lucene index. If a soft delete is merged away before it can be replicated to a follower the following process will fail due to incomplete history on the leader. Defaults to `12h`.\n\n$$$load-fixed-bitset-filters-eagerly$$$ `index.load_fixed_bitset_filters_eagerly`\n:   Indicates whether [cached filters](/reference/query-languages/query-dsl/query-filter-context.md) are pre-loaded for nested queries. Possible values are `true` (default) and `false`.\n\n$$$index-shard-check-on-startup$$$ `index.shard.check_on_startup`\n:   ::::{warning}\n    Expert users only. This setting enables some very expensive processing at shard startup and is only ever useful while diagnosing a problem in your cluster. If you do use it, you should do so only temporarily and remove it once it is no longer needed.\n    ::::\n\n    {{es}} automatically performs integrity checks on the contents of shards at various points during their lifecycle. For instance, it verifies the checksum of every file transferred when recovering a replica or taking a snapshot. It also verifies the integrity of many important files when opening a shard, which happens when starting up a node and when finishing a shard recovery or relocation. You can therefore manually verify the integrity of a whole shard while it is running by taking a snapshot of it into a fresh repository or by recovering it onto a fresh node.\n\n    This setting determines whether {{es}} performs additional integrity checks while opening a shard. If these checks detect corruption then they will prevent the shard from being opened. It accepts the following values:\n\n    `false`\n    :   Don\u2019t perform additional checks for corruption when opening a shard. This is the default and recommended behaviour.\n\n    `checksum`\n    :   Verify that the checksum of every file in the shard matches its contents. This will detect cases where the data read from disk differ from the data that {{es}} originally wrote, for instance due to undetected disk corruption or other hardware failures. These checks require reading the entire shard from disk which takes substantial time and IO bandwidth and may affect cluster performance by evicting important data from your filesystem cache.\n\n    `true`\n    :   Performs the same checks as `checksum` and also checks for logical inconsistencies in the shard, which could for instance be caused by the data being corrupted while it was being written due to faulty RAM or other hardware failures. These checks require reading the entire shard from disk which takes substantial time and IO bandwidth, and then performing various checks on the contents of the shard which take substantial time, CPU and memory.\n\n:::::\n\n\n\n\n## Dynamic index settings [dynamic-index-settings]\n\nBelow is a list of all *dynamic* index settings that are not associated with any specific index module:\n\n$$$dynamic-index-number-of-replicas$$$\n\n`index.number_of_replicas`\n:   The number of replicas each primary shard has. Defaults to 1.\n\n    ```\n    WARNING: Configuring it to 0 may lead to temporary availability loss\n    during node restarts or permanent data loss in case of data corruption.\n    ```\n\n\n$$$dynamic-index-auto-expand-replicas$$$\n\n`index.auto_expand_replicas`\n:   Auto-expand the number of replicas based on the number of data nodes in the cluster. Set to a dash delimited lower and upper bound (e.g. `0-5`) or use `all` for the upper bound (e.g. `0-all`). Defaults to `false` (i.e. disabled). Note that the auto-expanded number of replicas only takes [allocation filtering](shard-allocation.md) rules into account, but ignores other allocation rules such as [total shards per node](total-shards-per-node.md), and this can lead to the cluster health becoming `YELLOW` if the applicable rules prevent all the replicas from being allocated.\n\n    If the upper bound is `all` then shard allocation awareness and `cluster.routing.allocation.same_shard.host` are ignored for this index. For more information about this setting, refer to [](/reference/elasticsearch/configuration-reference/cluster-level-shard-allocation-routing-settings.md)\n\n\n$$$dynamic-index-search-idle-after$$$\n\n`index.search.idle.after`\n:   How long a shard can not receive a search or get request until it\u2019s considered search idle. (default is `30s`)\n\n$$$index-refresh-interval-setting$$$\n\n`index.refresh_interval` {applies_to}`serverless: all`\n:   How often to perform a refresh operation, which makes recent changes to the index visible to search. If this setting is not explicitly set, shards that haven\u2019t seen search traffic for at least `index.search.idle.after` seconds will not receive background refreshes until they receive a search request. Searches that hit an idle shard where a refresh is pending will trigger a refresh as part of the search operation for that shard only. This behavior aims to automatically optimize bulk indexing in the default case when no searches are performed. To opt out of this behavior, set an explicit value for the refresh interval, even if it matches the default value.\n\n    The value defaults to `1s` in {{stack}} and `5s` in {{serverless-short}}. In {{serverless-short}}, `5s` is also the minimum value that can be set.\n    \n    In both cases, the setting can be set to `-1` to disable refresh.\n\n$$$index-max-result-window$$$\n\n`index.max_result_window`\n:   The maximum value of `from + size` for searches to this index. Defaults to `10000`. Search requests take heap memory and time proportional to `from + size` and this limits that memory. See [Scroll](/reference/elasticsearch/rest-apis/paginate-search-results.md#scroll-search-results) or [Search After](/reference/elasticsearch/rest-apis/paginate-search-results.md#search-after) for a more efficient alternative to raising this.\n\n`index.max_inner_result_window`\n:   The maximum value of `from + size` for inner hits definition and top hits aggregations to this index. Defaults to `100`. Inner hits and top hits aggregation take heap memory and time proportional to `from + size` and this limits that memory.\n\n`index.max_rescore_window`\n:   The maximum value of `window_size` for `rescore` requests in searches of this index. Defaults to `index.max_result_window` which defaults to `10000`. Search requests take heap memory and time proportional to `max(window_size, from + size)` and this limits that memory.\n\n`index.max_docvalue_fields_search`\n:   The maximum number of `docvalue_fields` that are allowed in a query. Defaults to `100`. Doc-value fields are costly since they might incur a per-field per-document seek.\n\n`index.max_script_fields`\n:   The maximum number of `script_fields` that are allowed in a query. Defaults to `32`.\n\n$$$index-max-ngram-diff$$$\n\n`index.max_ngram_diff`\n:   The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter. Defaults to `1`.\n\n$$$index-max-shingle-diff$$$\n\n`index.max_shingle_diff`\n:   The maximum allowed difference between max_shingle_size and min_shingle_size for the [`shingle` token filter](/reference/text-analysis/analysis-shingle-tokenfilter.md). Defaults to `3`.\n\n`index.max_refresh_listeners`\n:   Maximum number of refresh listeners available on each shard of the index. These listeners are used to implement `refresh=wait_for`.\n\n`index.analyze.max_token_count`\n:   The maximum number of tokens that can be produced using _analyze API. Defaults to `10000`.\n\n$$$index-max-analyzed-offset$$$\n\n`index.highlight.max_analyzed_offset`\n:   The maximum number of characters that will be analyzed for a highlight request. This setting is only applicable when highlighting is requested on a text that was indexed without offsets or term vectors. Defaults to `1000000`.\n\n$$$index-max-terms-count$$$\n\n`index.max_terms_count`\n:   The maximum number of terms that can be used in Terms Query. Defaults to `65536`.\n\n$$$index-max-regex-length$$$\n\n`index.max_regex_length`\n:   The maximum length of value that can be used in `regexp` or `prefix` query. Defaults to `1000`.\n\n$$$index-query-default-field$$$\n\n`index.query.default_field` {applies_to}`serverless: all`\n:   (string or array of strings) Wildcard (`*`) patterns matching one or more fields. The following query types search these matching fields by default:\n\n* [More like this](/reference/query-languages/query-dsl/query-dsl-mlt-query.md)\n* [Multi-match](/reference/query-languages/query-dsl/query-dsl-multi-match-query.md)\n* [Query string](/reference/query-languages/query-dsl/query-dsl-query-string-query.md)\n* [Simple query string](/reference/query-languages/query-dsl/query-dsl-simple-query-string-query.md)\n\nDefaults to `*`, which matches all fields eligible for [term-level queries](/reference/query-languages/query-dsl/term-level-queries.md), excluding metadata fields.\n\n\n$$$index-routing-allocation-enable-setting$$$\n\n`index.routing.allocation.enable`\n:   Controls shard allocation for this index. It can be set to:\n\n    * `all` (default) - Allows shard allocation for all shards.\n    * `primaries` - Allows shard allocation only for primary shards.\n    * `new_primaries` - Allows shard allocation only for newly-created primary shards.\n    * `none` - No shard allocation is allowed.\n\n\n`index.routing.rebalance.enable`\n:   Enables shard rebalancing for this index. It can be set to:\n\n    * `all` (default) - Allows shard rebalancing for all shards.\n    * `primaries` - Allows shard rebalancing only for primary shards.\n    * `replicas` - Allows shard rebalancing only for replica shards.\n    * `none` - No shard rebalancing is allowed.\n\n\n`index.gc_deletes`\n:   The length of time that a deleted document's version number remains available for further versioned operations. Defaults to `60s`.\n\n$$$index-default-pipeline$$$\n\n`index.default_pipeline` {applies_to}`serverless: all`\n:   Default ingest pipeline for the index. Index requests will fail if the default pipeline is set and the pipeline does not exist. The default may be overridden using the `pipeline` parameter. The special pipeline name `_none` indicates no default ingest pipeline will run.\n\n$$$index-final-pipeline$$$\n\n`index.final_pipeline` {applies_to}`serverless: all`\n:   Final ingest pipeline for the index. Indexing requests will fail if the final pipeline is set and the pipeline does not exist. The final pipeline always runs after the request pipeline (if specified) and the default pipeline (if it exists). The special pipeline name `_none` indicates no final ingest pipeline will run.\n\n    ::::{note}\n    You can\u2019t use a final pipeline to change the `_index` field. If the pipeline attempts to change the `_index` field, the indexing request will fail.\n    ::::\n\n\n$$$index-hidden$$$ `index.hidden` {applies_to}`serverless: all`\n:   Indicates whether the index should be hidden by default. Hidden indices are not returned by default when using a wildcard expression. This behavior is controlled per request through the use of the `expand_wildcards` parameter. Possible values are `true` and `false` (default).\n\n$$$index-dense-vector-hnsw-filter-heuristic$$$ `index.dense_vector.hnsw_filter_heuristic` {applies_to}`serverless: preview` {applies_to}`stack: preview 9.1`\n:   The heuristic to utilize when executing a filtered search against vectors in an HNSW graph. It can be set to:\n\n* `acorn` (default) - Only vectors that match the filter criteria are searched. This is the fastest option, and generally provides faster searches at similar recall to `fanout`, but `num_candidates` might need to be increased for exceptionally high recall requirements.\n* `fanout` - All vectors are compared with the query vector, but only those passing the criteria are added to the search results. Can be slower than `acorn`, but may yield higher recall.\n\n$$$index-esql-stored-fields-sequential-proportion$$$\n\n`index.esql.stored_fields_sequential_proportion` {applies_to}`stack: ga 9.1`\n:   Tuning parameter for deciding when {{esql}} will load [stored fields](/reference/elasticsearch/rest-apis/retrieve-selected-fields.md#stored-fields) using a strategy tuned for loading dense sequence of documents. Allows values between 0.0 and 1.0 and defaults to 0.2. Indices with documents smaller than 10kb may see speed improvements loading `text` fields by setting this lower.\n\n$$$index-dense-vector-hnsw-early-termination$$$ `index.dense_vector.hnsw_early_termination` {applies_to}`stack: ga 9.2` {applies_to}`serverless: all`\n:   Whether to apply _patience_ based early termination strategy to knn queries over HNSW graphs (see [paper](https://cs.uwaterloo.ca/~jimmylin/publications/Teofili_Lin_ECIR2025.pdf)). This is only applicable to `dense_vector` fields with `hnsw`, `int8_hnsw`, `int4_hnsw` and `bbq_hnsw` index types. Defaults to `false`.",
              "filename": "elasticsearch-main/docs/reference/elasticsearch/index-settings/index-modules.md"
            },
            {
              "mapped_pages": [
                "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-actions.html"
              ],
              "content": "# Index lifecycle actions [ilm-actions]\n\n:::{note}\nThis section provides detailed **reference information** for Index lifecycle actions.\n\nRefer to [Index lifecycle management](docs-content://manage-data/lifecycle/index-lifecycle-management.md) in the **Manage data** section for overview, getting started and conceptual information.\n:::\n\n[Allocate](/reference/elasticsearch/index-lifecycle-actions/ilm-allocate.md)\n:   Move shards to nodes with different performance characteristics and reduce the number of replicas.\n\n[Delete](/reference/elasticsearch/index-lifecycle-actions/ilm-delete.md)\n:   Permanently remove the index.\n\n[Force merge](/reference/elasticsearch/index-lifecycle-actions/ilm-forcemerge.md)\n:   Reduce the number of index segments and purge deleted documents.\n\n[Migrate](/reference/elasticsearch/index-lifecycle-actions/ilm-migrate.md)\n:   Move the index shards to the [data tier](docs-content://manage-data/lifecycle/data-tiers.md) that corresponds to the current {{ilm-init}} phase.\n\n[Read only](/reference/elasticsearch/index-lifecycle-actions/ilm-readonly.md)\n:   Block write operations to the index.\n\n[Rollover](/reference/elasticsearch/index-lifecycle-actions/ilm-rollover.md)\n:   Remove the index as the write index for the rollover alias and start indexing to a new index.\n\n[Downsample](/reference/elasticsearch/index-lifecycle-actions/ilm-downsample.md)\n:   Aggregates an index\u2019s time series data and stores the results in a new read-only index. For example, you can downsample hourly data into daily or weekly summaries.\n\n[Searchable snapshot](/reference/elasticsearch/index-lifecycle-actions/ilm-searchable-snapshot.md)\n:   Take a snapshot of the managed index in the configured repository and mount it as a searchable snapshot.\n\n[Set priority](/reference/elasticsearch/index-lifecycle-actions/ilm-set-priority.md)\n:   Lower the priority of an index as it moves through the lifecycle to ensure that hot indices are recovered first.\n\n[Shrink](/reference/elasticsearch/index-lifecycle-actions/ilm-shrink.md)\n:   Reduce the number of primary shards by shrinking the index into a new index.\n\n[Unfollow](/reference/elasticsearch/index-lifecycle-actions/ilm-unfollow.md)\n:   Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.\n\n[Wait for snapshot](/reference/elasticsearch/index-lifecycle-actions/ilm-wait-for-snapshot.md)\n:   Ensure that a snapshot exists before deleting the index.",
              "filename": "elasticsearch-main/docs/reference/elasticsearch/index-lifecycle-actions/index.md"
            },
            {
              "applies_to": {
                "stack": "all"
              },
              "content": "# Index settings\n\n:::{include} _snippets/serverless-availability.md\n:::\n\n$$$index-modules-settings-description$$$\n{{es}} organizes index-level settings into index modules, each controlling a specific aspect of index behavior.\n\nThese settings are configured on a per-index basis and may be:\n\n* _Static_\n  They can only be set at index creation time or on a closed index, or by using the [update index settings API](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-put-settings) with the `reopen` query parameter set to `true` (which automatically closes and reopens impacted indices).\n* _Dynamic_\n  They can be changed on a live index using the [update index settings API](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-put-settings).\n\n::::{warning}\nYou can change any documented index settings on closed indices. However, changing undocumented index settings on closed indices is unsupported and might result in errors.\n::::\n\nSettings are available for the following modules:\n\n* [General](index-modules.md):\n  Index settings not tied to a specific module.\n* [Index shard allocation](shard-allocation.md):\n  Control where, when, and how shards are allocated to nodes.\n* [History retention](history-retention.md)\n  Control how long the history of operations is retained in the index.\n* [Index blocks](./index-block.md):\n  Block different type of operations to the indices.\n* [Mapping limits](./mapping-limit.md):\n  Limit the number of field mappings.\n* [Merge](merge.md):\n  Control how shards are merged by the background merge process.\n* [Similarities](similarity.md):\n  Configure custom similarity settings to customize how search results are scored.\n* [Slowlog](slow-log.md):\n  Control how slow queries and fetch requests are logged.\n* [Sorting](./sorting.md):\n  Configure how to sort the segments inside each shard.\n* [Store](store.md):\n  Configure the type of filesystem used to access shard data.\n* [Time series](time-series.md)\n  Configure the backing indices in a time series data stream (TSDS).\n* [Translog](translog.md)\n  Control the transaction log and background flush operations.\n* [Indexing pressure](pressure.md)\n  Configure indexing back pressure limits.\n\nThere are also index settings associated with [text analysis](docs-content://manage-data/data-store/text-analysis.md), which define analyzers, tokenizers, token filters, and character filters.",
              "filename": "elasticsearch-main/docs/reference/elasticsearch/index-settings/index.md"
            }
          ],
          "tool_call_id": "call_JrCqGLB7Tny1OPzUtZkH1hpZ",
          "metadata": null,
          "timestamp": "2025-10-03T01:07:05.256672+00:00",
          "part_kind": "tool-return"
        }
      ],
      "instructions": "You are a helpful assistant that answers questions about documentation.  \n\nUse the search tool to find relevant information from the repository before answering questions.  \n\nIf you can find specific information through search, use it to provide accurate answers.\n\nAlways include references by citing the filename of the source material you used.\nReplace it with the full path to the GitHub repository:\n\"https://github.com/elastic/elasticsearch/blob/main/\"\nFormat: [LINK TITLE](FULL_GITHUB_LINK)\n\n\nIf the search doesn't return relevant results, let the user know and provide general guidance.",
      "kind": "request"
    },
    {
      "parts": [
        {
          "content": "To set the number of replicas for an index in Elasticsearch, you can use the \"number_of_replicas\" setting in the index settings. This can be configured dynamically using the Update Index Settings API.\n\nHere's an example of how to set the number of replicas for an index called `my_index` to 2:\n\n```bash\nPUT /my_index/_settings\n{\n  \"index\": {\n    \"number_of_replicas\": 2\n  }\n}\n```\n\nYou can also configure the number of replicas during index creation, as shown in this example:\n\n```bash\nPUT /my_index\n{\n  \"settings\": {\n    \"index\": {\n      \"number_of_replicas\": 2\n    }\n  }\n}\n```\n\nBy default, the number of replicas is set to 1. Adjusting it to 0 may lead to temporary availability loss during node restarts or permanent data loss in case of data corruption, so it is generally advisable to maintain at least one replica for high availability ([elasticsearch-main/docs/reference/elasticsearch/index-settings/index-modules.md](https://github.com/elastic/elasticsearch/blob/main/docs/reference/elasticsearch/index-settings/index-modules.md)).",
          "id": null,
          "part_kind": "text"
        }
      ],
      "usage": {
        "input_tokens": 7900,
        "cache_write_tokens": 0,
        "cache_read_tokens": 0,
        "output_tokens": 241,
        "input_audio_tokens": 0,
        "cache_audio_read_tokens": 0,
        "output_audio_tokens": 0,
        "details": {
          "accepted_prediction_tokens": 0,
          "audio_tokens": 0,
          "reasoning_tokens": 0,
          "rejected_prediction_tokens": 0
        }
      },
      "model_name": "gpt-4o-mini-2024-07-18",
      "timestamp": "2025-10-03T01:07:06+00:00",
      "kind": "response",
      "provider_name": "openai",
      "provider_details": {
        "finish_reason": "stop"
      },
      "provider_response_id": "chatcmpl-CMOYE6BQdLVwRjGmoE0PKC9GeRb4g",
      "finish_reason": "stop"
    }
  ],
  "source": "ai-generated"
}